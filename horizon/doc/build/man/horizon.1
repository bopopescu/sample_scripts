.\" Man page generated from reStructuredText.
.
.TH "HORIZON" "1" "June 23, 2016" "8.0.2.dev30" "horizon"
.SH NAME
horizon \- Horizon Documentation
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH INTRODUCTION
.sp
Horizon is the canonical implementation of \fI\%OpenStack\(aqs Dashboard\fP, which provides a web based user
interface to OpenStack services including Nova, Swift, Keystone, etc.
.sp
For a more in\-depth look at Horizon and its architecture, see the
\fBIntroduction to Horizon\fP\&.
.sp
To learn what you need to know to get going, see the \fBquickstart\fP\&.
.SH USING HORIZON
.sp
How to use Horizon in your own projects.
.SS Installing Horizon
.sp
This page covers the basic installation of horizon, the OpenStack dashboard.
.SS System Requirements
.INDENT 0.0
.IP \(bu 2
Python 2.7
.IP \(bu 2
Django 1.7 or 1.8
.IP \(bu 2
Minimum required set of running OpenStack services are:
.INDENT 2.0
.IP \(bu 2
nova: OpenStack Compute
.IP \(bu 2
keystone: OpenStack Identity
.IP \(bu 2
glance: OpenStack Image service
.IP \(bu 2
neutron: OpenStack Networking (unless nova\-network is used)
.UNINDENT
.IP \(bu 2
All other services are optional.
Horizon supports the following services in the Juno release.
If the keystone endpoint for a service is configured,
horizon detects it and enables its support automatically.
.INDENT 2.0
.IP \(bu 2
swift: OpenStack Object Storage
.IP \(bu 2
cinder: OpenStack Block Storage
.IP \(bu 2
heat: Orchestration
.IP \(bu 2
ceilometer: Telemetry
.IP \(bu 2
trove: Database service for OpenStack
.IP \(bu 2
sahara: Data processing service for OpenStack
.UNINDENT
.UNINDENT
.SS Installation
.INDENT 0.0
.IP 1. 3
Compile translation message catalogs for internationalization.
This step is not required if you do not need to support languages
other than English. GNU \fBgettext\fP tool is required to compile
message catalogs:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo apt\-get install gettext
$ ./run_tests.sh \-\-compilemessages
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This command compiles translation message catalogs within Python
virtualenv named \fB\&.venv\fP\&. After this step, you can remove
\fB\&.venv\fP directory safely.
.IP 2. 3
Install the horizon python module into your system. Run the following
in the top directory:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo pip install .
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 3. 3
Create \fBopenstack_dashboard/local/local_settings.py\fP\&.
It is usually a good idea to copy
\fBopenstack_dashboard/local/local_settings.py.example\fP and edit it.
At least we need to customize the following variables in this file.
.INDENT 3.0
.IP \(bu 2
\fBALLOWED_HOSTS\fP (unless \fBDEBUG\fP is \fBTrue\fP)
.IP \(bu 2
\fBOPENSTACK_KEYSTONE_URL\fP
.UNINDENT
.sp
For more details, please refer to \fBdeployment\fP and \fBsettings\fP\&.
.IP 4. 3
Optional: Django has a compressor feature that performs many enhancements
for the delivery of static files, including standardization and
minification/uglification. This processing can be run either online or
offline (pre\-processed). Letting the compression process occur at runtime
will incur processing and memory use when the resources are first requested;
doing it ahead of time removes those runtime penalties.
.sp
If you want the static files to be processed before server runtime, you\(aqll
need to configure your local_settings.py to specify
\fBCOMPRESS_OFFLINE = True\fP, then run the following commands:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ ./manage.py collectstatic
$ ./manage.py compress
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 5. 3
Set up a web server with WSGI support.
It is optional but recommended in production deployments.
For example, install Apache web server on Ubuntu:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo apt\-get install apache2 libapache2\-mod\-wsgi
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You will either use the provided \fBopenstack_dashboard/wsgi/django.wsgi\fP or
generate an \fBopenstack_dashboard/wsgi/horizon.wsgi\fP file with the
following command (which detects if you use a virtual environment or not to
automatically build an adapted wsgi file):
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ ./manage.py make_web_conf \-\-wsgi
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Then configure the web server to host OpenStack dashboard via WSGI.
For apache2 web server, you may need to create
\fB/etc/apache2/sites\-available/horizon.conf\fP\&.
The template in devstack is a good example of the file.
\fI\%http://git.openstack.org/cgit/openstack\-dev/devstack/tree/files/apache\-horizon.template\fP
Or, if you previously generated an \fBopenstack_dashboard/wsgi/horizon.wsgi\fP
you can automatically generate an apache configuration file:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ ./manage.py make_web_conf \-\-apache > /etc/apache2/sites\-available/horizon.conf
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Same as above but if you want ssl support:
.INDENT 3.0
.INDENT 3.5
$ ./manage.py make_web_conf \-\-apache \-\-ssl \-\-sslkey=/path/to/ssl/key \-\-sslcert=/path/to/ssl/cert > /etc/apache2/sites\-available/horizon.conf
.UNINDENT
.UNINDENT
.IP 6. 3
Finally, enable the above configuration and restart the web server:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ sudo a2ensite horizon
$ sudo service apache2 restart
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS Next Steps
.INDENT 0.0
.IP \(bu 2
\fBdeployment\fP covers some common questions, concerns and pitfalls you
may encounter when deploying horizon in a production environment.
.IP \(bu 2
\fBsettings\fP lists the available settings for horizon.
.IP \(bu 2
\fBcustomizing\fP describes how to customizing horizon as you want.
.UNINDENT
.SS Deploying Horizon
.sp
This guide aims to cover some common questions, concerns and pitfalls you
may encounter when deploying Horizon in a production environment.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
\fBsettings\fP
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The Service Catalog returned by the Identity Service after a user
has successfully authenticated determines the dashboards and panels
that will be available within the OpenStack Dashboard. If you are not
seeing a particular service you expected (e.g. Object Storage/Swift or
Networking/Neutron) make sure your Service Catalog is configured correctly.
.sp
Prior to the Essex release of Horizon these features were controlled by
individual settings in the \fBlocal_settings.py\fP file. This code has been
long\-since removed and those pre\-Essex settings have no impact now.
.UNINDENT
.UNINDENT
.SS Configure Your Identity Service Host
.sp
The one thing you \fImust\fP do in order to run Horizon is to specify the
host for your OpenStack Identity Service endpoint. To do this, set the value
of the \fBOPENSTACK_HOST\fP settings in your \fBlocal_settings.py\fP file.
.SS Logging
.sp
Logging is an important concern for production deployments, and the intricacies
of good logging configuration go far beyond what can be covered here. However
there are a few points worth noting about the logging included with Horizon,
how to customize it, and where other components may take over:
.INDENT 0.0
.IP \(bu 2
Horizon\(aqs logging uses Django\(aqs logging configuration mechanism, which
can be customized in your \fBlocal_settings.py\fP file through the
\fBLOGGING\fP dictionary.
.IP \(bu 2
Horizon\(aqs default logging example sets the log level to \fB"INFO"\fP, which is
a reasonable choice for production deployments. For development, however,
you may want to change the log level to \fB"DEBUG"\fP\&.
.IP \(bu 2
Horizon also uses a number of 3rd\-party clients which log separately. The
log level for these can still be controlled through Horizon\(aqs \fBLOGGING\fP
config, however behaviors may vary beyond Horizon\(aqs control.
.IP \(bu 2
For more information regarding configuring logging in Horizon, please
read the \fI\%Django logging directive\fP and the \fI\%Python logging directive\fP
documentation. Horizon is built on Python and Django.
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
At this time there is \fI\%a known bug in python\-keystoneclient\fP where it will
log the complete request body of any request sent to Keystone through it
(including logging passwords in plain text) when the log level is set to
\fB"DEBUG"\fP\&. If this behavior is not desired, make sure your log level is
\fB"INFO"\fP or higher.
.UNINDENT
.UNINDENT
.SS File Uploads
.sp
Horizon allows users to upload files via their web browser to other OpenStack
services such as Glance and Swift. Files uploaded through this mechanism are
first stored on the Horizon server before being forwarded on \- files are not
uploaded directly or streamed as Horizon receives them. As Horizon itself does
not impose any restrictions on the size of file uploads, production deployments
will want to consider configuring their server hosting the Horizon application
to enforce such a limit to prevent large uploads exhausting system resources
and disrupting services. Deployments using Apache2 can use the
\fI\%LimitRequestBody directive\fP to achieve this.
.sp
Uploads to the Glance image store service tend to be particularly large \- in
the order of hundreds of megabytes to multiple gigabytes. Deployments are able
to disable local image uploads through Horizon by setting
\fBHORIZON_IMAGES_ALLOW_UPLOAD\fP to \fBFalse\fP in your \fBlocal_settings.py\fP
file.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.INDENT 3.5
This will not disable image creation altogether, as this setting does not
affect images created by specifying an image location (URL) as the image source.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Session Storage
.sp
Horizon uses \fI\%Django\(aqs sessions framework\fP for handling user session data;
however that\(aqs not the end of the story. There are numerous session backends
available, which are controlled through the \fBSESSION_ENGINE\fP setting in
your \fBlocal_settings.py\fP file. What follows is a quick discussion of the
pros and cons of each of the common options as they pertain to deploying
Horizon specifically.
.SS Local Memory Cache
.sp
Enabled by:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SESSION_ENGINE = \(aqdjango.contrib.sessions.backends.cache\(aq
CACHES = {
    \(aqBACKEND\(aq: \(aqdjango.core.cache.backends.locmem.LocMemCache\(aq
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Local memory storage is the quickest and easiest session backend to set up,
as it has no external dependencies whatsoever. However, it has two significant
drawbacks:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
No shared storage across processes or workers.
.IP \(bu 2
No persistence after a process terminates.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The local memory backend is enabled as the default for Horizon solely because
it has no dependencies. It is not recommended for production use, or even for
serious development work. For better options, read on.
.SS Memcached
.sp
Enabled by:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SESSION_ENGINE = \(aqdjango.contrib.sessions.backends.cache\(aq
CACHES = {
    \(aqBACKEND\(aq: \(aqdjango.core.cache.backends.memcached.MemcachedCache\(aq
    \(aqLOCATION\(aq: \(aqmy_memcached_host:11211\(aq,
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
External caching using an application such as memcached offers persistence
and shared storage, and can be very useful for small\-scale deployment and/or
development. However, for distributed and high\-availability scenarios
memcached has inherent problems which are beyond the scope of this
documentation.
.sp
Memcached is an extremely fast and efficient cache backend for cases where it
fits the deployment need. But it\(aqs not appropriate for all scenarios.
.sp
Requirements:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Memcached service running and accessible.
.IP \(bu 2
Python memcached module installed.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Database
.sp
Enabled by:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SESSION_ENGINE = \(aqdjango.core.cache.backends.db.DatabaseCache\(aq
DATABASES = {
    \(aqdefault\(aq: {
        # Database configuration here
    }
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Database\-backed sessions are scalable (using an appropriate database strategy),
persistent, and can be made high\-concurrency and highly\-available.
.sp
The downside to this approach is that database\-backed sessions are one of the
slower session storages, and incur a high overhead under heavy usage. Proper
configuration of your database deployment can also be a substantial
undertaking and is far beyond the scope of this documentation.
.SS Cached Database
.sp
To mitigate the performance issues of database queries, you can also consider
using Django\(aqs \fBcached_db\fP session backend which utilizes both your database
and caching infrastructure to perform write\-through caching and efficient
retrieval. You can enable this hybrid setting by configuring both your database
and cache as discussed above and then using:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Cookies
.sp
\fBsigned_cookies\fP is a session backend that is available to you which avoids
server load and scaling problems.
.sp
This backend stores session data in a cookie which is stored by the
user\(aqs browser. The backend uses a cryptographic signing technique to ensure
session data is not tampered with during transport (\fBthis is not the same
as encryption, session data is still readable by an attacker\fP).
.sp
The pros of this session engine are that it doesn\(aqt require any additional
dependencies or infrastructure overhead, and it scales indefinitely as long
as the quantity of session data being stored fits into a normal cookie.
.sp
The biggest downside is that it places session data into storage on the user\(aqs
machine and transports it over the wire. It also limits the quantity of
session data which can be stored.
.sp
For a thorough discussion of the security implications of this session backend,
please read the \fI\%Django documentation on cookie\-based sessions\fP\&.
.SS Secure Site Recommendations
.sp
When implementing Horizon for public usage, with the website served through
HTTPS, it is recommended that the following settings are applied.
.sp
To help protect the session cookies from \fI\%cross\-site scripting\fP, add the
following to \fBlocal_settings.py\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CSRF_COOKIE_HTTPONLY = True
SESSION_COOKIE_HTTPONLY = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Client\-side JavaScript will not be able to access the cookie if this set to
True. Note that the HTTPOnly is a flag included in Set\-Cookie HTTP response
header and is not honored consistently by all browsers.
.sp
Additionally, adding the following flags to \fBlocal_settings.py\fP marks the
cookies as secure, which ensures that the cookie is only sent under an HTTPS
connection:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can also disable \fI\%browser autocompletion\fP for the authentication form by
modifying the \fBHORIZON_CONFIG\fP dictionary in \fBlocal_settings.py\fP by adding
the key \fBpassword_autocomplete\fP with the value \fBoff\fP as shown here:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
HORIZON_CONFIG = {
\&...
    \(aqpassword_autocomplete\(aq: \(aqoff\(aq,
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Settings and Configuration
.SS Introduction
.sp
Horizon\(aqs settings tend to fall into three categories:
.INDENT 0.0
.IP \(bu 2
Horizon configuration options (contained in the \fBHORIZON_CONFIG\fP dict)
which are not OpenStack\-specific and pertain only to the core framework.
.IP \(bu 2
OpenStack\-related settings which pertain to other projects/services and
are generally prefixed with \fBOPENSTACK_\fP in the settings file.
.IP \(bu 2
Django settings (including common plugins like \fBdjango\-compressor\fP) which
can be (and should be) read about in their respective documentation.
.UNINDENT
.sp
What follows is an overview of the Horizon and OpenStack\-specific settings
and a few notes on the Django\-related settings.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Prior to the Essex release of Horizon there were settings which controlled
whether features such as Object Storage/Swift or Networking/Neutron would be
enabled in the OpenStack Dashboard. This code has long since been removed
and those pre\-Essex settings have no impact now.
.sp
In Essex and later, the Service Catalog returned by the Identity Service
after a user has successfully authenticated determines the dashboards and
panels that will be available within the OpenStack Dashboard. If you are not
seeing a particular service you expected make sure your Service Catalog is
configured correctly.
.UNINDENT
.UNINDENT
.SS Horizon Settings
.sp
The following options are available in order to configure/customize the
behavior of your Horizon installation. All of them are contained in the
\fBHORIZON_CONFIG\fP dictionary.
.SS \fBdashboards\fP
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
In OpenStack Dashboard configuration, we suggest \fBNOT\fP to use this
setting. Please specify the order of dashboard using the
\fIpluggable\-settings\-label\fP\&.
.sp
Both the pluggable dashboard mechanism (OpenStack Dashboard default) and
this setting \fBdashboard\fP configure the order of dashboards and
the setting \fBdashboard\fP precedes the pluggable dashboard mechanism.
Specifying the order in two places may cause confusion.
Please use this parameter only when the pluggable config is not used.
.UNINDENT
.UNINDENT
.sp
New in version 2012.1(Essex).

.sp
Default: \fBNone\fP
.sp
Horizon Dashboards are automatically discovered in the following way:
.INDENT 0.0
.IP \(bu 2
By adding a configuration file to the \fBopenstack_dashboard/local/enabled\fP
directory (for more information see \fIpluggable\-settings\-label\fP).
This is the default way in OpenStack Dashboard.
.IP \(bu 2
By traversing Django\(aqs list of
\fI\%INSTALLED_APPS\fP
and importing any files that have the name \fB"dashboard.py"\fP and include
code to register themselves as a Horizon dashboard.
.UNINDENT
.sp
By default, dashboards defined by \fBopenstack_dashboard/local/enabled\fP are
displayed first in the alphabetical order of the config files, and then the
remaining dashboards discovered by traversing INSTALLED_APPS are displayed
in the alphabetical order.
.sp
If a list of \fBdashboard\fP slugs is provided in this setting, the supplied
ordering is applied to the list of discovered dashboards. If the list of
dashboard slugs is shorter than the number of discovered dashboards, the
remaining dashboards are appended in the default order described above.
.sp
The dashboards listed must be in a Python module which
is included in the \fBINSTALLED_APPS\fP list and on the Python path.
.SS \fBdefault_dashboard\fP
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
In OpenStack Dashboard configuration, we suggest \fBNOT\fP to use this
setting. Please specify the order of dashboard using the
\fIpluggable\-settings\-label\fP\&.
.sp
The default dashboard can be configured via both the pluggable
dashboard mechanism (OpenStack Dashboard default) and this setting
\fBdefault_dashboard\fP, and if both are specified, the setting
by the pluggable dashboard mechanism will be used.
Specifying the default dashboard in two places may cause confusion.
Please use this parameter only when the pluggable config is not used.
.UNINDENT
.UNINDENT
.sp
New in version 2012.1(Essex).

.sp
Default: \fBNone\fP
.sp
The slug of the dashboard which should act as the first\-run/fallback dashboard
whenever a user logs in or is otherwise redirected to an ambiguous location.
.SS \fBuser_home\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fBsettings.LOGIN_REDIRECT_URL\fP
.sp
This can be either a literal URL path (such as the default), or Python\(aqs
dotted string notation representing a function which will evaluate what URL
a user should be redirected to based on the attributes of that user.
.SS \fBajax_queue_limit\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB10\fP
.sp
The maximum number of simultaneous AJAX connections the dashboard may try
to make. This is particularly relevant when monitoring a large number of
instances, volumes, etc. which are all actively trying to update/change state.
.SS \fBajax_poll_interval\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB2500\fP
.sp
How frequently resources in transition states should be polled for updates,
expressed in milliseconds.
.SS \fBauto_fade_alerts\fP
.sp
New in version 2013.2(Havana).

.sp
Defaults: \fB{\(aqdelay\(aq: [3000], \(aqfade_duration\(aq: [1500], \(aqtypes\(aq: []}\fP
.sp
If provided, will auto\-fade the alert types specified. Valid alert types
include: [\(aqalert\-success\(aq, \(aqalert\-info\(aq, \(aqalert\-warning\(aq, \(aqalert\-error\(aq]
Can also define the delay before the alert fades and the fade out duration.
.SS \fBhelp_url\fP
.sp
New in version 2012.2(Folsom).

.sp
Default: \fBNone\fP
.sp
If provided, a "Help" link will be displayed in the site header which links
to the value of this settings (ideally a URL containing help information).
.SS \fBexceptions\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB{\(aqunauthorized\(aq: [], \(aqnot_found\(aq: [], \(aqrecoverable\(aq: []}\fP
.sp
A dictionary containing classes of exceptions which Horizon\(aqs centralized
exception handling should be aware of. Based on these exception categories,
Horizon will handle the exception and display a message to the user.
.SS \fBmodal_backdrop\fP
.sp
New in version 2014.2(Kilo).

.sp
Default: \fB"static"\fP
.sp
Controls how bootstrap backdrop element outside of modals looks and feels.
Valid values are \fB"true"\fP (show backdrop element outside the modal, close
the modal after clicking on backdrop), \fB"false"\fP (do not show backdrop
element, do not close the modal after clicking outside of it) and \fB"static"\fP
(show backdrop element outside the modal, do not close the modal after
clicking on backdrop).
.SS \fBdisable_password_reveal\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fBFalse\fP
.sp
Setting this to True will disable the reveal button for password fields,
including on the login form.
.SS \fBpassword_validator\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB{\(aqregex\(aq: \(aq.*\(aq, \(aqhelp_text\(aq: _("Password is not accepted")}\fP
.sp
A dictionary containing a regular expression which will be used for password
validation and help text which will be displayed if the password does not
pass validation. The help text should describe the password requirements if
there are any.
.sp
This setting allows you to set rules for passwords if your organization
requires them.
.SS \fBpassword_autocomplete\fP
.sp
New in version 2013.1(Grizzly).

.sp
Default: \fB"off"\fP
.sp
Controls whether browser autocompletion should be enabled on the login form.
Valid values are \fB"on"\fP and \fB"off"\fP\&.
.SS \fBsimple_ip_management\fP
.sp
New in version 2013.1(Grizzly).

.sp
Default: \fBTrue\fP
.sp
Enable or disable simplified floating IP address management.
.sp
"Simple" floating IP address management means that the user does not ever have
to select the specific IP addresses they wish to use, and the process of
allocating an IP and assigning it to an instance is one\-click.
.sp
The "advanced" floating IP management allows users to select the floating IP
pool from which the IP should be allocated and to select a specific IP address
when associating one with an instance.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Currently "simple" floating IP address management is not compatible with
Neutron. There are two reasons for this. First, Neutron does not support
the default floating IP pool at the moment. Second, a Neutron floating IP
can be associated with each VIF and we need to check whether there is only
one VIF for an instance to enable simple association support.
.UNINDENT
.UNINDENT
.SS \fBangular_modules\fP
.sp
Default: \fB[]\fP
.sp
A list of AngularJS modules to be loaded when Angular bootstraps. These modules
are added as dependencies on the root Horizon application \fBhorizon\fP\&.
.SS \fBjs_files\fP
.sp
Default: \fB[]\fP
.sp
A list of javascript source files to be included in the compressed set of files that are
loaded on every page. This is needed for AngularJS modules that are referenced in
\fBangular_modules\fP and therefore need to be include in every page.
.SS \fBjs_spec_files\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB[]\fP
.sp
A list of javascript spec files to include for integration with the Jasmine spec runner.
Jasmine is a behavior\-driven development framework for testing JavaScript code.
.SS OpenStack Settings (Partial)
.sp
The following settings inform the OpenStack Dashboard of information about the
other OpenStack projects which are part of this cloud and control the behavior
of specific dashboards, panels, API calls, etc.
.INDENT 0.0
.TP
.B Most of the following settings are defined in
\fBopenstack_dashboard/local/local_settings.py\fP, which should be copied from
\fBopenstack_dashboard/local/local_settings.py.example\fP\&.
.UNINDENT
.SS \fBAUTHENTICATION_URLS\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB[\(aqopenstack_auth.urls\(aq]\fP
.sp
A list of modules from which to collate authentication URLs from. The default
option adds URLs from the django\-openstack\-auth module however others will be
required for additional authentication mechanisms.
.SS \fBAPI_RESULT_LIMIT\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB1000\fP
.sp
The maximum number of objects (e.g. Swift objects or Glance images) to display
on a single page before providing a paging element (a "more" link) to paginate
results.
.SS \fBAPI_RESULT_PAGE_SIZE\fP
.sp
New in version 2012.2(Folsom).

.sp
Default: \fB20\fP
.sp
Similar to \fBAPI_RESULT_LIMIT\fP\&. This setting controls the number of items
to be shown per page if API pagination support for this exists.
.SS \fBAVAILABLE_REGIONS\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fBNone\fP
.sp
A list of tuples which define multiple regions. The tuple format is
\fB(\(aqhttp://{{ keystone_host }}:5000/v2.0\(aq, \(aq{{ region_name }}\(aq)\fP\&. If any regions
are specified the login form will have a dropdown selector for authenticating
to the appropriate region, and there will be a region switcher dropdown in
the site header when logged in.
.sp
If you do not have multiple regions you should use the \fBOPENSTACK_HOST\fP and
\fBOPENSTACK_KEYSTONE_URL\fP settings instead.
.SS \fBCONSOLE_TYPE\fP
.sp
New in version 2013.2(Havana).

.sp
Default:  \fB"AUTO"\fP
.sp
This setting specifies the type of in\-browser console used to access the
VMs.
Valid values are  \fB"AUTO"\(ga\(ga(default), \(ga\(ga"VNC"\fP, \fB"SPICE"\fP, \fB"RDP"\fP,
\fB"SERIAL"\fP, and \fBNone\fP\&.
\fBNone\fP deactivates the in\-browser console and is available in version
2014.2(Juno).
\fB"SERIAL"\fP is available since 2015.1(Kilo).
.SS \fBSWIFT_FILE_TRANSFER_CHUNK_SIZE\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB512 * 1024\fP
.sp
This setting specifies the size of the chunk (in bytes) for downloading objects
from Swift. Do not make it very large (higher than several dozens of Megabytes,
exact number depends on your connection speed), otherwise you may encounter
socket timeout. The default value is 524288 bytes (or 512 Kilobytes).
.SS \fBINSTANCE_LOG_LENGTH\fP
.sp
New in version 2015.1(Kilo).

.sp
Default:  \fB35\fP
.sp
This setting enables you to change the default number of lines displayed for
the log of an instance.
Valid value must be a positive integer.
.SS \fBCREATE_INSTANCE_FLAVOR_SORT\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fB{\(aqkey\(aq:\(aqram\(aq}\fP
.sp
When launching a new instance the default flavor is sorted by RAM usage in
ascending order.
You can customize the sort order by: id, name, ram, disk and vcpus.
Additionally, you can insert any custom callback function. You can also
provide a flag for reverse sort.
See the description in local_settings.py.example for more information.
.sp
This example sorts flavors by vcpus in descending order:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
CREATE_INSTANCE_FLAVOR_SORT = {
     \(aqkey\(aq:\(aqvcpus\(aq,
     \(aqreverse\(aq: True,
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS \fBCUSTOM_THEME_PATH\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB"themes/default"\fP
.sp
This setting tells Horizon to use a directory as a custom theme.
.sp
By default, this directory will serve as the static root of the theme
and the entire contents of the directory will be served up at
\fB/static/custom\fP\&.  If you wish to include content other than static
files in a theme directory, but do not wish that content to be served up,
then you can create a sub directory named \fBstatic\fP\&. If the theme folder
contains a sub\-directory with the name \fBstatic\fP, then
\fBstatic/custom/static\(ga\fP will be used as the root for the content
served at \fB/static/custom\fP\&.
.sp
The static root of the theme folder must always contain a _variables.scss
file and a _styles.scss file.  These must contain or import all the
bootstrap and horizon specific variables and styles which are used to style
the GUI. For example themes, see: /horizon/openstack_dashboard/themes/
.sp
Horizon ships with one alternate theme based on Google\(aqs Material Design.  To
use the alternate theme, set your CUSTOM_THEME_PATH to \fBthemes/material\fP\&.
.SS \fBDEFAULT_THEME_PATH\fP
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fB"themes/default"\fP
.sp
This setting allows Horizon to collect an additional theme during static
collection and be served up via /static/themes/default.  This is useful
if CUSTOM_THEME_PATH inherits from another theme (like \(aqdefault\(aq).
.sp
If DEFAULT_THEME_PATH is the same as CUSTOM_THEME_PATH, then collection
is skipped and /static/themes will not exist.
.SS \fBDROPDOWN_MAX_ITEMS\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB30\fP
.sp
This setting sets the maximum number of items displayed in a dropdown.
Dropdowns that limit based on this value need to support a way to observe
the entire list.
.SS \fBENFORCE_PASSWORD_CHECK\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fBFalse\fP
.sp
This setting will display an \(aqAdmin Password\(aq field on the Change Password
form to verify that it is indeed the admin logged\-in who wants to change
the password.
.SS \fBIMAGES_LIST_FILTER_TENANTS\fP
.sp
New in version 2013.1(Grizzly).

.sp
Default: \fBNone\fP
.sp
A list of dictionaries to add optional categories to the image fixed filters
in the Images panel, based on project ownership.
.sp
Each dictionary should contain a \fItenant\fP attribute with the project
id, and optionally a \fItext\fP attribute specifying the category name, and
an \fIicon\fP attribute that displays an icon in the filter button. The
icon names are based on the default icon theme provided by Bootstrap.
.sp
Example: \fB[{\(aqtext\(aq: \(aqOfficial\(aq, \(aqtenant\(aq: \(aq27d0058849da47c896d205e2fc25a5e8\(aq, \(aqicon\(aq: \(aqicon\-ok\(aq}]\fP
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Since the Kilo release, the Bootstrap icon library (e.g. \(aqicon\-ok\(aq) has
been replaced with Font Awesome (e.g. \(aqfa\-check\(aq).
.UNINDENT
.UNINDENT
.SS \fBIMAGE_RESERVED_CUSTOM_PROPERTIES\fP
.sp
New in version 2014.2(Juno).

.sp
Default: \fB[]\fP
.sp
A list of image custom property keys that should not be displayed in the
Update Metadata tree.
.sp
This setting can be used in the case where a separate panel is used for
managing a custom property or if a certain custom property should never be
edited.
.SS \fBOPENSTACK_API_VERSIONS\fP
.sp
New in version 2013.2(Havana).

.sp
Default:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "data\-processing": 1.1,
    "identity": 2.0,
    "volume": 2
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Overrides for OpenStack API versions. Use this setting to force the
OpenStack dashboard to use a specific API version for a given service API.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The version should be formatted as it appears in the URL for the
service API. For example, the identity service APIs have inconsistent
use of the decimal point, so valid options would be "2.0" or "3".
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
OPENSTACK_API_VERSIONS = {
    "data\-processing": 1.1,
    "identity": 3,
    "volume": 2
}
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS \fBOPENSTACK_ENABLE_PASSWORD_RETRIEVE\fP
.sp
New in version 2014.1(Icehouse).

.sp
Default: \fB"False"\fP
.sp
When set, enables the instance action "Retrieve password" allowing password retrieval
from metadata service.
.SS \fBOPENSTACK_ENDPOINT_TYPE\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB"publicURL"\fP
.sp
A string which specifies the endpoint type to use for the endpoints in the
Keystone service catalog. The default value for all services except for identity is \fB"publicURL"\fP . The default value for the identity service is \fB"internalURL"\fP\&.
.SS \fBOPENSTACK_HOST\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB"127.0.0.1"\fP
.sp
The hostname of the Keystone server used for authentication if you only have
one region. This is often the \fIonly\fP setting that needs to be set for a
basic deployment.
.SS \fBOPENSTACK_HYPERVISOR_FEATURES\fP
.sp
New in version 2012.2(Folsom).

.sp
Default:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    \(aqcan_set_mount_point\(aq: False,
    \(aqcan_set_password\(aq: False,
    \(aqrequires_keypair\(aq: False,
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
A dictionary containing settings which can be used to identify the
capabilities of the hypervisor for Nova.
.sp
The Xen Hypervisor has the ability to set the mount point for volumes attached
to instances (other Hypervisors currently do not). Setting
\fBcan_set_mount_point\fP to \fBTrue\fP will add the option to set the mount point
from the UI.
.sp
Setting \fBcan_set_password\fP to \fBTrue\fP will enable the option to set
an administrator password when launching or rebuilding an instance.
.sp
Setting \fBrequires_keypair\fP to \fBTrue\fP will require users to select
a key pair when launching an instance.
.SS \fBOPENSTACK_IMAGE_BACKEND\fP
.sp
New in version 2013.2(Havana).

.sp
Default:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    \(aqimage_formats\(aq: [
        (\(aq\(aq, _(\(aqSelect format\(aq)),
        (\(aqaki\(aq, _(\(aqAKI \- Amazon Kernel Image\(aq)),
        (\(aqami\(aq, _(\(aqAMI \- Amazon Machine Image\(aq)),
        (\(aqari\(aq, _(\(aqARI \- Amazon Ramdisk Image\(aq)),
        (\(aqdocker\(aq, _(\(aqDocker\(aq)),
        (\(aqiso\(aq, _(\(aqISO \- Optical Disk Image\(aq)),
        (\(aqqcow2\(aq, _(\(aqQCOW2 \- QEMU Emulator\(aq)),
        (\(aqraw\(aq, _(\(aqRaw\(aq)),
        (\(aqvdi\(aq, _(\(aqVDI\(aq)),
        (\(aqvhd\(aq, _(\(aqVHD\(aq)),
        (\(aqvmdk\(aq, _(\(aqVMDK\(aq))
    ]
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Used to customize features related to the image service, such as the list of
supported image formats.
.SS \fBIMAGE_CUSTOM_PROPERTY_TITLES\fP
.sp
New in version 2014.1(Icehouse).

.sp
Default:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    "architecture": _("Architecture"),
    "kernel_id": _("Kernel ID"),
    "ramdisk_id": _("Ramdisk ID"),
    "image_state": _("Euca2ools state"),
    "project_id": _("Project ID"),
    "image_type": _("Image Type")
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Used to customize the titles for image custom property attributes that
appear on image detail pages.
.SS \fBHORIZON_IMAGES_ALLOW_UPLOAD\fP
.sp
New in version 2013.1(Grizzly).

.sp
Default: \fBTrue\fP
.sp
If set to \fBFalse\fP, this setting disables \fIlocal\fP uploads to prevent filling
up the disk on the dashboard server since uploads to the Glance image store
service tend to be particularly large \- in the order of hundreds of megabytes
to multiple gigabytes.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This will not disable image creation altogether, as this setting does not
affect images created by specifying an image location (URL) as the image source.
.UNINDENT
.UNINDENT
.SS \fBOPENSTACK_KEYSTONE_BACKEND\fP
.sp
New in version 2012.1(Essex).

.sp
Default: \fB{\(aqname\(aq: \(aqnative\(aq, \(aqcan_edit_user\(aq: True, \(aqcan_edit_project\(aq: True}\fP
.sp
A dictionary containing settings which can be used to identify the
capabilities of the auth backend for Keystone.
.sp
If Keystone has been configured to use LDAP as the auth backend then set
\fBcan_edit_user\fP and \fBcan_edit_project\fP to \fBFalse\fP and name to \fB"ldap"\fP\&.
.SS \fBOPENSTACK_KEYSTONE_DEFAULT_DOMAIN\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fB"Default"\fP
.sp
Overrides the default domain used when running on single\-domain model
with Keystone V3. All entities will be created in the default domain.
.SS \fBOPENSTACK_KEYSTONE_DEFAULT_ROLE\fP
.sp
New in version 2011.3(Diablo).

.sp
Default: \fB"_member_"\fP
.sp
The name of the role which will be assigned to a user when added to a project.
This value must correspond to an existing role name in Keystone. In general,
the value should match the \fBmember_role_name\fP defined in \fBkeystone.conf\fP\&.
.SS \fBOPENSTACK_KEYSTONE_ADMIN_ROLES\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB["admin"]\fP
.sp
The list of roles that have administrator privileges in this OpenStack
installation. This check is very basic and essentially only works with
keystone v2.0 and v3 with the default policy file. The setting assumes there
is a common \fBadmin\fP like role(s) across services. Example uses of this
setting are:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
to rename the \fBadmin\fP role to \fBcloud\-admin\fP
.IP \(bu 2
allowing multiple roles to have administrative privileges, like
\fB["admin", "cloud\-admin", "net\-op"]\fP
.UNINDENT
.UNINDENT
.UNINDENT
.SS \fBOPENSTACK_KEYSTONE_MULTIDOMAIN_SUPPORT\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fBFalse\fP
.sp
Set this to True if running on multi\-domain model. When this is enabled, it
will require user to enter the Domain name in addition to username for login.
.SS \fBOPENSTACK_KEYSTONE_URL\fP
.sp
New in version 2011.3(Diablo).

.sp
Default: \fB"http://%s:5000/v2.0" % OPENSTACK_HOST\fP
.sp
The full URL for the Keystone endpoint used for authentication. Unless you
are using HTTPS, running your Keystone server on a nonstandard port, or using
a nonstandard URL scheme you shouldn\(aqt need to touch this setting.
.SS \fBWEBSSO_ENABLED\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fBFalse\fP
.sp
Enables keystone web single\-sign\-on if set to True. For this feature to work,
make sure that you are using Keystone V3 and Django OpenStack Auth V1.2.0 or
later.
.SS \fBWEBSSO_INITIAL_CHOICE\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB"credentials"\fP
.sp
Determines the default authentication mechanism. When user lands on the login
page, this is the first choice they will see.
.SS \fBWEBSSO_CHOICES\fP
.sp
New in version 2015.1(Kilo).

.sp
Default:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
(
  ("credentials", _("Keystone Credentials")),
  ("oidc", _("OpenID Connect")),
  ("saml2", _("Security Assertion Markup Language"))
)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This is the list of authentication mechanisms available to the user. It includes
Keystone federation protocols such as OpenID Connect and SAML. The list of
choices is completely configurable, so as long as the id remains intact. Do not
remove the credentials mechanism unless you are sure. Once removed, even admins
will have no way to log into the system via the dashboard.
.SS \fBOPENSTACK_CINDER_FEATURES\fP
.sp
New in version 2014.2(Juno).

.sp
Default: \fB{\(aqenable_backup\(aq: False}\fP
.sp
A dictionary of settings which can be used to enable optional services provided
by cinder.  Currently only the backup service is available.
.SS \fBOPENSTACK_NEUTRON_NETWORK\fP
.sp
New in version 2013.1(Grizzly).

.sp
Default:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{
    \(aqenable_router\(aq: True,
    \(aqenable_distributed_router\(aq: False,
    \(aqenable_ha_router\(aq: False,
    \(aqenable_lb\(aq: True,
    \(aqenable_quotas\(aq: False,
    \(aqenable_firewall\(aq: True,
    \(aqenable_vpn\(aq: True,
    \(aqprofile_support\(aq: None,
    \(aqsupported_provider_types\(aq: ["*"],
    \(aqsupported_vnic_types\(aq: ["*"],
    \(aqsegmentation_id_range\(aq: {},
    \(aqenable_fip_topology_check\(aq: True,
    \(aqdefault_ipv4_subnet_pool_label\(aq: None,
    \(aqdefault_ipv6_subnet_pool_label\(aq: None,
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
A dictionary of settings which can be used to enable optional services provided
by Neutron and configure Neutron specific features.  The following options are
available.
.sp
\fBenable_router\fP:
.sp
New in version 2014.2(Juno).

.sp
Default: \fBTrue\fP
.sp
Enable (True) or disable (False) the panels and menus related
to router and Floating IP features. This option only affects
when Neutron is enabled. If your Neutron deployment has no support for
Layer\-3 features, or you do not wish to provide the Layer\-3
features through the Dashboard, this should be set to \fBFalse\fP\&.
.sp
\fBenable_distributed_router\fP:
.sp
New in version 2014.2(Juno).

.sp
Default: \fBFalse\fP
.sp
Enable or disable Neutron distributed virtual router (DVR) feature in
the Router panel. For the DVR feature to be enabled, this option needs
to be set to True and your Neutron deployment must support DVR. Even
when your Neutron plugin (like ML2 plugin) supports DVR feature, DVR
feature depends on l3\-agent configuration, so deployers should set this
option appropriately depending on your deployment.
.sp
\fBenable_ha_router\fP:
.sp
New in version 2014.2(Juno).

.sp
Default: \fBFalse\fP
.sp
Enable or disable HA (High Availability) mode in Neutron virtual router
in the Router panel. For the HA router mode to be enabled, this option needs
to be set to True and your Neutron deployment must support HA router mode.
Even when your Neutron plugin (like ML2 plugin) supports HA router mode,
the feature depends on l3\-agent configuration, so deployers should set this
option appropriately depending on your deployment.
.sp
\fBenable_lb\fP:
.sp
New in version 2013.1(Grizzly).

.sp
(Deprecated)
.sp
Default: \fBTrue\fP
.sp
Enables the load balancer panel. The load balancer panel will be enabled when
this option is True and your Neutron deployment supports LBaaS. If you want
to disable load balancer panel even when your Neutron supports LBaaS, set it to False.
.sp
This option is now marked as "deprecated" and will be removed in Kilo or later release.
The load balancer panel is now enabled only when LBaaS feature is available in Neutron
and this option is no longer needed. We suggest not to use this option to disable the
load balancer panel from now on.
.sp
\fBenable_quotas\fP:
.sp
Default: \fBFalse\fP
.sp
Enable support for Neutron quotas feature. To make this feature work
appropriately, you need to use Neutron plugins with quotas extension support
and quota_driver should be DbQuotaDriver (default config).
.sp
\fBenable_firewall\fP:
.sp
(Deprecated)
.sp
Default: \fBTrue\fP
.sp
Enables the firewall panel. firewall panel will be enabled when this
option is True and your Neutron deployment supports FWaaS. If you want
to disable firewall panel even when your Neutron supports FWaaS, set
it to False.
.sp
This option is now marked as "deprecated" and will be removed in
Kilo or later release. The firewall panel is now enabled only
when FWaaS feature is available in Neutron and this option is no
longer needed. We suggest not to use this option to disable the
firewall panel from now on.
.sp
\fBenable_vpn\fP:
.sp
(Deprecated)
.sp
Default: \fBTrue\fP
.sp
Enables the VPN panel. VPN panel will be enabled when this option is True
and your Neutron deployment supports VPNaaS. If you want to disable
VPN panel even when your Neutron supports VPNaaS, set it to False.
.sp
This option is now marked as "deprecated" and will be removed in
Kilo or later release. The VPN panel is now enabled only
when VPNaaS feature is available in Neutron and this option is no
longer needed. We suggest not to use this option to disable the
VPN panel from now on.
.sp
\fBprofile_support\fP:
.sp
Default: \fBNone\fP
.sp
This option specifies a type of network port profile support. Currently the
available value is either \fBNone\fP or \fB"cisco"\fP\&. \fBNone\fP means to disable
port profile support. \fBcisco\fP can be used with Neutron Cisco plugins.
.sp
\fBsupported_provider_types\fP:
.sp
New in version 2014.2(Juno).

.sp
Default: \fB["*"]\fP
.sp
For use with the provider network extension. Use this to explicitly set which
provider network types are supported. Only the network types in this list will
be available to choose from when creating a network. Network types include
local, flat, vlan, gre, and vxlan. By default all provider network types will
be available to choose from.
.sp
Example: \fB[\(aqlocal\(aq, \(aqflat\(aq, \(aqgre\(aq]\fP
.sp
\fBsupported_vnic_types\fP:
.sp
New in version 2015.1(Kilo).

.sp
Default \fB[\(aq*\(aq]\fP
.sp
For use with the port binding extension. Use this to explicitly set which VNIC
types are supported; only those listed will be shown when creating or editing
a port. VNIC types include normal, direct and macvtap. By default all VNIC
types will be available to choose from.
.sp
Example \fB[\(aqnormal\(aq, \(aqdirect\(aq]\fP
.sp
To disable VNIC type selection, set an empty list or None.
.sp
\fBsegmentation_id_range\fP:
.sp
New in version 2014.2(Juno).

.sp
Default: \fB{}\fP
.sp
For use with the provider network extension. This is a dictionary where each
key is a provider network type and each value is a list containing two numbers.
The first number is the minimum segmentation ID that is valid. The second
number is the maximum segmentation ID. Pertains only to the vlan, gre, and
vxlan network types. By default this option is not provided and each minimum
and maximum value will be the default for the provider network type.
.sp
Example: \fB{\(aqvlan\(aq: [1024, 2048], \(aqgre\(aq: [4094, 65536]}\fP
.sp
\fBenable_fip_topology_check\fP:
.sp
Default: \fBTrue\fP
.sp
The Default Neutron implementation needs a router with a gateway to associate a
FIP. So by default a topology check will be performed by horizon to list only
VM ports attached to a network which is itself attached to a router with an
external gateway. This is to prevent from setting a FIP to a port which will
fail with an error.
Some Neutron vendors do not require it. Some can even attach a FIP to any port
(e.g.: OpenContrail) owned by a tenant.
Set to False if you want to be able to associate a FIP to an instance on a
subnet with no router if your Neutron backend allows it.
.sp
New in version 8.0.0(Liberty).

.sp
\fBdefault_ipv4_subnet_pool_label\fP:
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fBNone\fP (Disabled)
.sp
Neutron can be configured with a default Subnet Pool to be used for IPv4
subnet\-allocation. Specify the label you wish to display in the Address pool
selector on the create subnet step if you want to use this feature.
.sp
\fBdefault_ipv6_subnet_pool_label\fP:
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fBNone\fP (Disabled)
.sp
Neutron can be configured with a default Subnet Pool to be used for IPv6
subnet\-allocation. Specify the label you wish to display in the Address pool
selector on the create subnet step if you want to use this feature.
.sp
You must set this to enable IPv6 Prefix Delegation in a PD\-capable environment.
.SS \fBOPENSTACK_SSL_CACERT\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fBNone\fP
.sp
When unset or set to \fBNone\fP the default CA certificate on the system is used
for SSL verification.
.sp
When set with the path to a custom CA certificate file, this overrides use of
the default system CA certificate. This custom certificate is used to verify all
connections to openstack services when making API calls.
.SS \fBOPENSTACK_SSL_NO_VERIFY\fP
.sp
New in version 2012.2(Folsom).

.sp
Default: \fBFalse\fP
.sp
Disable SSL certificate checks in the OpenStack clients (useful for self\-signed
certificates).
.SS \fBOPENSTACK_TOKEN_HASH_ALGORITHM\fP
.sp
New in version 2014.2(Juno).

.sp
Default: \fB"md5"\fP
.sp
The hash algorithm to use for authentication tokens. This must match the hash
algorithm that the identity (Keystone) server and the auth_token middleware
are using. Allowed values are the algorithms supported by Python\(aqs hashlib
library.
.SS \fBOPENSTACK_TOKEN_HASH_ENABLED\fP
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fBTrue\fP
.sp
Hashing tokens from Keystone keeps the Horizon session data smaller, but it
doesn\(aqt work in some cases when using PKI tokens.  Uncomment this value and
set it to False if using PKI tokens and there are 401 errors due to token
hashing.
.SS \fBPOLICY_FILES\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fB{\(aqidentity\(aq: \(aqkeystone_policy.json\(aq, \(aqcompute\(aq: \(aqnova_policy.json\(aq}\fP
.sp
This should essentially be the mapping of the contents of \fBPOLICY_FILES_PATH\fP
to service types.  When policy.json files are added to \fBPOLICY_FILES_PATH\fP,
they should be included here too.
.SS \fBPOLICY_FILES_PATH\fP
.sp
New in version 2013.2(Havana).

.sp
Default:  \fBos.path.join(ROOT_PATH, "conf")\fP
.sp
Specifies where service based policy files are located.  These are used to
define the policy rules actions are verified against.
.SS \fBSESSION_TIMEOUT\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fB"1800"\fP
.INDENT 0.0
.TP
.B Specifies the timespan in seconds inactivity, until a user is considered as
logged out.
.UNINDENT
.SS \fBSAHARA_AUTO_IP_ALLOCATION_ENABLED\fP
.sp
Default:  \fBFalse\fP
.sp
This setting notifies the Data Processing (Sahara) system whether or not
automatic IP allocation is enabled.  You would want to set this to True
if you were running Nova Networking with auto_assign_floating_ip = True.
.SS \fBTROVE_ADD_USER_PERMS\fP and \fBTROVE_ADD_DATABASE_PERMS\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fB[]\fP
.sp
Trove user and database extension support. By default, support for
creating users and databases on database instances is turned on.
To disable these extensions set the permission to something
unusable such as \fB[!]\fP\&.
.SS \fBWEBROOT\fP
.sp
New in version 2015.1(Kilo).

.sp
Default: \fB"/"\fP
.sp
Specifies the location where the access to the dashboard is configured in
the web server.
.sp
For example, if you\(aqre accessing the Dashboard via
\fI\%https:/\fP/<your server>/dashboard, you would set this to \fB"/dashboard/"\fP\&.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Additional settings may be required in the config files of your webserver
of choice. For example to make \fB"/dashboard/"\fP the web root in Apache,
the \fB"sites\-available/horizon.conf"\fP requires a couple of additional
aliases set:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
Alias /dashboard/static %HORIZON_DIR%/static

Alias /dashboard/media %HORIZON_DIR%/openstack_dashboard/static
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Apache also requires changing your WSGIScriptAlias to reflect the desired
path.  For example, you\(aqd replace \fB/\fP with \fB/dashboard\fP for the
alias.
.UNINDENT
.UNINDENT
.SS \fBSTATIC_ROOT\fP
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fB<path_to_horizon>/static\fP
.sp
The absolute path to the directory where static files are collected when
collectstatic is run.
.sp
For more information see:
\fI\%https://docs.djangoproject.com/en/1.7/ref/settings/#static\-root\fP
.SS \fBSTATIC_URL\fP
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fB/static/\fP
.sp
URL that refers to files in STATIC_ROOT.
.sp
By default this value is \fBWEBROOT/static/\fP\&.
.sp
This value can be changed from the default. When changed, the alias in your
webserver configuration should be updated to match.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The value for STATIC_URL must end in \(aq/\(aq.
.UNINDENT
.UNINDENT
.sp
This value is also available in the scss namespace with the variable name
$static_url.  Make sure you run \fBpython manage.py collectstatic\fP and
\fBpython manage.py compress\fP after any changes to this value in settings.py.
.sp
For your convenience, a custom theme for only setting the static url has been
provided see: \fB"/horizon/openstack_dashboard/themes/webroot"\fP
.sp
For more information see:
\fI\%https://docs.djangoproject.com/en/1.7/ref/settings/#static\-url\fP
.SS \fBDISALLOW_IFRAME_EMBED\fP
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fBTrue\fP
.sp
This setting can be used to defend against Clickjacking and prevent Horizon from
being embedded within an iframe. Legacy browsers are still vulnerable to a
Cross\-Frame Scripting (XFS) vulnerability, so this option allows extra security
hardening where iframes are not used in deployment. When set to true, a
\fB"frame\-buster"\fP script is inserted into the template header that prevents the
web page from being framed and therefore defends against clickjacking.
.sp
For more information see:
\fI\%http://tinyurl.com/anticlickjack\fP
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If your deployment requires the use of iframes, you can set this setting to
\fBFalse\fP to exclude the frame\-busting code and allow iframe embedding.
.UNINDENT
.UNINDENT
.SS \fBOPENSTACK_NOVA_EXTENSIONS_BLACKLIST\fP
.sp
New in version 8.0.0(Liberty).

.sp
Default: \fB[]\fP
.sp
Ignore all listed Nova extensions, and behave as if they were unsupported.
Can be used to selectively disable certain costly extensions for performance
reasons.
.SS Django Settings (Partial)
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
This is not meant to be anywhere near a complete list of settings for
Django. You should always consult the upstream documentation, especially
with regards to deployment considerations and security best\-practices.
.UNINDENT
.UNINDENT
.sp
There are a few key settings you should be aware of for development and the
most basic of deployments. Further recommendations can be found in the
Deploying Horizon section of this documentation.
.SS \fBALLOWED_HOSTS\fP
.sp
New in version 2013.2(Havana).

.sp
Default: \fB[\(aqlocalhost\(aq]\fP
.sp
This list should contain names (or IP addresses) of the host
running the dashboard; if it\(aqs being accessed via name, the
DNS name (and probably short\-name) should be added, if it\(aqs accessed via
IP address, that should be added. The setting may contain more than one entry.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
ALLOWED_HOSTS is required. If Horizon is running in production (DEBUG is False),
set this with the list of host/domain names that the application can serve.
For more information see:
\fI\%https://docs.djangoproject.com/en/dev/ref/settings/#allowed\-hosts\fP
.UNINDENT
.UNINDENT
.SS \fBDEBUG\fP and \fBTEMPLATE_DEBUG\fP
.sp
New in version 2011.2(Cactus).

.sp
Default: \fBTrue\fP
.sp
Controls whether unhandled exceptions should generate a generic 500 response
or present the user with a pretty\-formatted debug information page.
.sp
This setting should \fBalways\fP be set to \fBFalse\fP for production deployments
as the debug page can display sensitive information to users and attackers
alike.
.SS \fBSECRET_KEY\fP
.sp
New in version 2012.1(Essex).

.sp
This should absolutely be set to a unique (and secret) value for your
deployment. Unless you are running a load\-balancer with multiple Horizon
installations behind it, each Horizon instance should have a unique secret key.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Setting a custom secret key:
You can either set it to a specific value or you can let Horizon generate a
default secret key that is unique on this machine, regardless of the
amount of Python WSGI workers (if used behind Apache+mod_wsgi). However, there
may be situations where you would want to set this explicitly, e.g. when
multiple dashboard instances are distributed on different machines (usually
behind a load\-balancer). Either you have to make sure that a session gets all
requests routed to the same dashboard instance or you set the same SECRET_KEY
for all of them.
.UNINDENT
.UNINDENT
.sp
From horizon.utils import secret_key:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
SECRET_KEY = secret_key.generate_or_read_from_file(
os.path.join(LOCAL_PATH, \(aq.secret_key_store\(aq))
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fBlocal_settings.py.example\fP file includes a quick\-and\-easy way to
generate a secret key for a single installation.
.SS \fBSECURE_PROXY_SSL_HEADER\fP, \fBCSRF_COOKIE_SECURE\fP and \fBSESSION_COOKIE_SECURE\fP
.sp
New in version 2013.1(Grizzly).

.sp
These three settings should be configured if you are deploying Horizon with
SSL. The values indicated in the default \fBlocal_settings.py.example\fP file
are generally safe to use.
.sp
When CSRF_COOKIE_SECURE or SESSION_COOKIE_SECURE are set to True, these attributes
help protect the session cookies from cross\-site scripting.
.SS \fBADD_INSTALLED_APPS\fP
.sp
New in version 2015.1(Kilo).

.sp
A list of Django applications to be prepended to the \fBINSTALLED_APPS\fP
setting. Allows extending the list of installed applications without having
to override it completely.
.SS Pluggable Settings
.sp
Horizon allows dashboards, panels and panel groups to be added without
modifying the default settings. Pluggable settings are a mechanism to allow
settings to be stored in separate files.  Those files are read at startup and
used to modify the default settings.
.sp
The default location for the dashboard configuration files is
\fBopenstack_dashboard/enabled\fP, with another directory,
\fBopenstack_dashboard/local/enabled\fP for local overrides. Both sets of files
will be loaded, but the settings in \fBopenstack_dashboard/local/enabled\fP will
overwrite the default ones. The settings are applied in alphabetical order of
the filenames. If the same dashboard has configuration files in \fBenabled\fP and
\fBlocal/enabled\fP, the local name will be used. Note, that since names of
python modules can\(aqt start with a digit, the files are usually named with a
leading underscore and a number, so that you can control their order easily.
.sp
Before we describe the specific use cases, the following keys can be used in
any pluggable settings file:
.SS \fBADD_EXCEPTIONS\fP
.sp
New in version 2014.1(Icehouse).

.sp
A dictionary of exception classes to be added to \fBHORIZON[\(aqexceptions\(aq]\fP\&.
.SS \fBADD_INSTALLED_APPS\fP
.sp
New in version 2014.1(Icehouse).

.sp
A list of applications to be prepended to \fBINSTALLED_APPS\fP\&.
This is needed to expose static files from a plugin.
.SS \fBADD_ANGULAR_MODULES\fP
.sp
New in version 2014.2(Juno).

.sp
A list of AngularJS modules to be loaded when Angular bootstraps. These modules
are added as dependencies on the root Horizon application \fBhorizon\fP\&.
.SS \fBADD_JS_FILES\fP
.sp
New in version 2014.2(Juno).

.sp
A list of javascript source files to be included in the compressed set of files that are
loaded on every page. This is needed for AngularJS modules that are referenced in
\fBADD_ANGULAR_MODULES\fP and therefore need to be included in every page.
.SS \fBADD_JS_SPEC_FILES\fP
.sp
New in version 2015.1(Kilo).

.sp
A list of javascript spec files to include for integration with the Jasmine spec runner.
Jasmine is a behavior\-driven development framework for testing JavaScript code.
.SS \fBADD_SCSS_FILES\fP
.sp
New in version 8.0.0(Liberty).

.sp
A list of scss files to be included in the compressed set of files that are
loaded on every page. We recommend one scss file per dashboard, use @import if
you need to include additional scss files for panels.
.SS \fBAUTO_DISCOVER_STATIC_FILES\fP
.sp
New in version 8.0.0(Liberty).

.sp
If set to \fBTrue\fP, JavaScript files and static angular html template files will be
automatically discovered from the \fIstatic\fP folder in each apps listed in ADD_INSTALLED_APPS.
.sp
JavaScript source files will be ordered based on naming convention: files with extension
\fI\&.module.js\fP listed first, followed by other JavaScript source files.
.sp
JavaScript files for testing will also be ordered based on naming convention: files with extension
\fI\&.mock.js\fP listed first, followed by files with extension \fI\&.spec.js\fP\&.
.sp
If ADD_JS_FILES and/or ADD_JS_SPEC_FILES are also specified, files manually listed there will be
appended to the auto\-discovered files.
.SS \fBDISABLED\fP
.sp
New in version 2014.1(Icehouse).

.sp
If set to \fBTrue\fP, this settings file will not be added to the settings.
.SS \fBUPDATE_HORIZON_CONFIG\fP
.sp
New in version 2014.2(Juno).

.sp
A dictionary of values that will replace the values in \fBHORIZON_CONFIG\fP\&.
.SS Pluggable Settings for Dashboards
.sp
New in version 2014.1(Icehouse).

.sp
The following keys are specific to registering a dashboard:
.SS \fBDASHBOARD\fP
.sp
New in version 2014.1(Icehouse).

.sp
The slug of the dashboard to be added to \fBHORIZON[\(aqdashboards\(aq]\fP\&. Required.
.SS \fBDEFAULT\fP
.sp
New in version 2014.1(Icehouse).

.sp
If set to \fBTrue\fP, this dashboard will be set as the default dashboard.
.SS Examples
.sp
To disable a dashboard locally, create a file
\fBopenstack_dashboard/local/enabled/_40_dashboard\-name.py\fP with the following
content:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
DASHBOARD = \(aq<dashboard\-name>\(aq
DISABLED = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To add a Tuskar\-UI (Infrastructure) dashboard, you have to install it, and then
create a file \fBopenstack_dashboard/local/enabled/_50_tuskar.py\fP with:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from tuskar_ui import exceptions

DASHBOARD = \(aqinfrastructure\(aq
ADD_INSTALLED_APPS = [
    \(aqtuskar_ui.infrastructure\(aq,
]
ADD_EXCEPTIONS = {
    \(aqrecoverable\(aq: exceptions.RECOVERABLE,
    \(aqnot_found\(aq: exceptions.NOT_FOUND,
    \(aqunauthorized\(aq: exceptions.UNAUTHORIZED,
}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Pluggable Settings for Panels
.sp
New in version 2014.1(Icehouse).

.sp
The following keys are specific to registering or removing a panel:
.SS \fBPANEL\fP
.sp
New in version 2014.1(Icehouse).

.sp
The slug of the panel to be added to \fBHORIZON_CONFIG\fP\&. Required.
.SS \fBPANEL_DASHBOARD\fP
.sp
New in version 2014.1(Icehouse).

.sp
The slug of the dashboard the \fBPANEL\fP associated with. Required.
.SS \fBPANEL_GROUP\fP
.sp
New in version 2014.1(Icehouse).

.sp
The slug of the panel group the \fBPANEL\fP is associated with. If you want the
panel to show up without a panel group, use the panel group "default".
.SS \fBDEFAULT_PANEL\fP
.sp
New in version 2014.1(Icehouse).

.sp
If set, it will update the default panel of the \fBPANEL_DASHBOARD\fP\&.
.SS \fBADD_PANEL\fP
.sp
New in version 2014.1(Icehouse).

.sp
Python panel class of the \fBPANEL\fP to be added.
.SS \fBREMOVE_PANEL\fP
.sp
New in version 2014.1(Icehouse).

.sp
If set to \fBTrue\fP, the PANEL will be removed from PANEL_DASHBOARD/PANEL_GROUP.
.SS Examples
.sp
To add a new panel to the Admin panel group in Admin dashboard, create a file
\fBopenstack_dashboard/local/enabled/_60_admin_add_panel.py\fP with the following
content:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
PANEL = \(aqplugin_panel\(aq
PANEL_DASHBOARD = \(aqadmin\(aq
PANEL_GROUP = \(aqadmin\(aq
ADD_PANEL = \(aqtest_panels.plugin_panel.panel.PluginPanel\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To remove Info panel from Admin panel group in Admin dashboard locally, create
a file \fBopenstack_dashboard/local/enabled/_70_admin_remove_panel.py\fP with
the following content:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
PANEL = \(aqinfo\(aq
PANEL_DASHBOARD = \(aqadmin\(aq
PANEL_GROUP = \(aqadmin\(aq
REMOVE_PANEL = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To change the default panel of Admin dashboard to Instances panel, create a file
\fBopenstack_dashboard/local/enabled/_80_admin_default_panel.py\fP with the
following content:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
PANEL = \(aqinstances\(aq
PANEL_DASHBOARD = \(aqadmin\(aq
PANEL_GROUP = \(aqadmin\(aq
DEFAULT_PANEL = \(aqinstances\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Pluggable Settings for Panel Groups
.sp
New in version 2014.1(Icehouse).

.sp
The following keys are specific to registering a panel group:
.SS \fBPANEL_GROUP\fP
.sp
New in version 2014.1(Icehouse).

.sp
The slug of the panel group to be added to \fBHORIZON_CONFIG\fP\&. Required.
.SS \fBPANEL_GROUP_NAME\fP
.sp
New in version 2014.1(Icehouse).

.sp
The display name of the PANEL_GROUP. Required.
.SS \fBPANEL_GROUP_DASHBOARD\fP
.sp
New in version 2014.1(Icehouse).

.sp
The slug of the dashboard the \fBPANEL_GROUP\fP associated with. Required.
.SS Examples
.sp
To add a new panel group to the Admin dashboard, create a file
\fBopenstack_dashboard/local/enabled/_90_admin_add_panel_group.py\fP with the
following content:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
PANEL_GROUP = \(aqplugin_panel_group\(aq
PANEL_GROUP_NAME = \(aqPlugin Panel Group\(aq
PANEL_GROUP_DASHBOARD = \(aqadmin\(aq
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Customizing Horizon
.SS Themes
.sp
As of the Kilo release, styling for the OpenStack Dashboard can be altered
through the use of a theme. A theme is a directory containing a
\fB_variables.scss\fP file to override the color codes used throughout the SCSS
and a \fB_styles.scss\fP file with additional styles to load after dashboard
styles have loaded.
.sp
To use a custom theme, set \fBCUSTOM_THEME_PATH\fP in \fBlocal_settings.py\fP to
the directory location for the theme (e.g., \fB"themes/material"\fP). The
path can either be relative to the \fBopenstack_dashboard\fP directory or an
absolute path to an accessible location on the file system. The default
\fBCUSTOM_THEME_PATH\fP is \fBthemes/default\fP\&.
.sp
Both the Dashboard custom variables and Bootstrap variables can be overridden.
For a full list of the Dashboard SCSS variables that can be changed, see the
variables file at \fBopenstack_dashboard/static/dashboard/scss/_variables.scss\fP\&.
.SS Organizing Your Theme Directory
.sp
A custom theme directory can be organized differently, depending on the
level of customization that is desired, as it can include static files
as well as Django templates.  It can include special subdirectories that will
be used differently: \fBstatic\fP, \fBtemplates\fP and \fBimg\fP\&.
.SS The Static Folder
.sp
If the theme folder contains a sub\-folder called \fBstatic\fP, then that sub
folder will be used as the \fBstatic root of the theme\fP\&.  I.e., Horizon will
look in that sub\-folder for the _variables.scss and _styles.scss files.
The contents of this folder will also be served up at \fB/static/custom\fP\&.
.SS The Templates Folder
.sp
If the theme folder contains a sub\-folder \fBtemplates\fP, then the path
to that sub\-folder will be prepended to the \fBTEMPLATE_DIRS\fP tuple to
allow for theme specific template customizations.
.SS Using the Templates Folder
.sp
Any Django template that is used in Horizon can be overridden through a theme.
This allows highly customized user experiences to exist within the scope of
different themes.  Any template that is overridden must adhere to the same
directory structure that the extending template expects.
.sp
For example, if you wish to customize the sidebar, Horizon expects the template
to live at \fBhorizon/_sidebar.html\fP\&.  You would need to duplicate that
directory structure under your templates directory, such that your override
would live at \fB{CUSTOM_THEME_PATH}/templates/horizon/_sidebar.html\fP\&.
.SS The Img Folder
.sp
If the static root of the theme folder contains an \fBimg\fP directory,
then all images contained within \fBdashboard/img\fP can be overridden by
providing a file with the same name.
.sp
For a complete list of the images that can be overridden this way, see:
\fBopenstack_dashboard/static/dashboard/img\fP
.SS Customizing the Logo
.sp
If you wish to customize the logo that is used on the splash screen or in the
top navigation bar, then you simply need to create an \fBimg\fP directory under
your theme\(aqs static root directory and place your custom \fBlogo.png\fP or
\fBlogo\-splash.png\fP within it.
.sp
If you wish to override the \fBlogo.png\fP using the previous method, and if the
image used is larger than the height of the top navbar, then the image will be
constrained to fit within the height of nav.  You can customize the height of
the top navigation by customizing the SCSS variable: \fB$navbar\-height\fP\&.
If the image\(aqs height is smaller than the navbar height, then the image
will retain its original resolution and size, and simply be centered
vertically in the available space.
.sp
Prior to the Kilo release the images files inside of Horizon needed to be
replaced by your images files or the Horizon stylesheets needed to be altered
to point to the location of your image.
.SS Changing the Site Title
.sp
The OpenStack Dashboard Site Title branding (i.e. "\fBOpenStack\fP Dashboard")
can be overwritten by adding the attribute \fBSITE_BRANDING\fP
to \fBlocal_settings.py\fP with the value being the desired name.
.sp
The file \fBlocal_settings.py\fP can be found at the Horizon directory path of
\fBopenstack_dashboard/local/local_settings.py\fP\&.
.SS Changing the Brand Link
.sp
The logo also acts as a hyperlink. The default behavior is to redirect to
\fBhorizon:user_home\fP\&. By adding the attribute \fBSITE_BRANDING_LINK\fP with
the desired url target e.g., \fBhttp://sample\-company.com\fP in
\fBlocal_settings.py\fP, the target of the hyperlink can be changed.
.SS Modifying Existing Dashboards and Panels
.sp
If you wish to alter dashboards or panels which are not part of your codebase,
you can specify a custom python module which will be loaded after the entire
Horizon site has been initialized, but prior to the URLconf construction.
This allows for common site\-customization requirements such as:
.INDENT 0.0
.IP \(bu 2
Registering or unregistering panels from an existing dashboard.
.IP \(bu 2
Changing the names of dashboards and panels.
.IP \(bu 2
Re\-ordering panels within a dashboard or panel group.
.UNINDENT
.sp
Default Horizon panels are loaded based upon files within the openstack_dashboard/enabled/
folder.  These files are loaded based upon the filename order, with space left for more
files to be added.  There are some example files available within this folder, with the
.example suffix added.  Developers and deployers should strive to use this method of
customization as much as possible, and support for this is given preference over more
exotic methods such as monkey patching and overrides files.
.SS Horizon customization module (overrides)
.sp
Horizon has a global overrides mechanism available to perform customizations that are not
yet customizable via configuration settings.  This file can perform monkey patching and
other forms of customization which are not possible via the enabled folder\(aqs customization
method.
.sp
This method of customization is meant to be available for deployers of Horizon, and use of
this should be avoided by Horizon plugins at all cost.  Plugins needing this level of
monkey patching and flexibility should instead look for changing their __init__.py file
and performing customizations through other means.
.sp
To specify the python module containing your modifications, add the key
\fBcustomization_module\fP to your \fBHORIZON_CONFIG\fP dictionary in
\fBlocal_settings.py\fP\&. The value should be a string containing the path to your
module in dotted python path notation. Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
HORIZON_CONFIG = {
    "customization_module": "my_project.overrides"
}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can do essentially anything you like in the customization module. For
example, you could change the name of a panel:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

import horizon

# Rename "User Settings" to "User Options"
settings = horizon.get_dashboard("settings")
user_panel = settings.get_panel("user")
user_panel.name = _("User Options")
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Or get the instances panel:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
projects_dashboard = horizon.get_dashboard("project")
instances_panel = projects_dashboard.get_panel("instances")
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
And limit access to users with the Keystone Admin role:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
permissions = list(getattr(instances_panel, \(aqpermissions\(aq, []))
permissions.append(\(aqopenstack.roles.admin\(aq)
instances_panel.permissions = tuple(permissions)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Or just remove it entirely:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
projects_dashboard.unregister(instances_panel.__class__)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You cannot unregister a \fBdefault_panel\fP\&. If you wish to remove a
\fBdefault_panel\fP, you need to make a different panel in the dashboard as a
\fBdefault_panel\fP and then unregister the former. For example, if you wished
to remove the \fBoverview_panel\fP from the \fBProject\fP dashboard, you could do
the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
project = horizon.get_dashboard(\(aqproject\(aq)
project.default_panel = "instances"
overview = project.get_panel(\(aqoverview\(aq)
project.unregister(overview.__class__)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You can also override existing methods with your own versions:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Disable Floating IPs
from openstack_dashboard.dashboards.project.access_and_security import tabs
from openstack_dashboard.dashboards.project.instances import tables

NO = lambda *x: False

tabs.FloatingIPsTab.allowed = NO
tables.AssociateIP.allowed = NO
tables.SimpleAssociateIP.allowed = NO
tables.SimpleDisassociateIP.allowed = NO
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You could also customize what columns are displayed in an existing
table, by redefining the \fBcolumns\fP attribute of its \fBMeta\fP
class. This can be achieved in 3 steps:
.INDENT 0.0
.IP 1. 3
Extend the table that you wish to modify
.IP 2. 3
Redefine the \fBcolumns\fP attribute under the \fBMeta\fP class for this
new table
.IP 3. 3
Modify the \fBtable_class\fP attribute for the related view so that it
points to the new table
.UNINDENT
.sp
For example, if you wished to remove the Admin State column from the
\fBNetworksTable\fP,
you could do the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from openstack_dashboard.dashboards.project.networks import tables
from openstack_dashboard.dashboards.project.networks import views

class MyNetworksTable(tables.NetworksTable):

    class Meta(tables.NetworksTable.Meta):
        columns = (\(aqname\(aq, \(aqsubnets\(aq, \(aqshared\(aq, \(aqstatus\(aq)

views.IndexView.table_class = MyNetworksTable
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If you want to add a column you can override the parent table in a
similar way, add the new column definition and then use the \fBMeta\fP
\fBcolumns\fP attribute to control the column order as needed.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
\fBmy_project.overrides\fP needs to be importable by the python process running
Horizon.
If your module is not installed as a system\-wide python package,
you can either make it installable (e.g., with a setup.py)
or you can adjust the python path used by your WSGI server to include its location.
.sp
Probably the easiest way is to add a \fBpython\-path\fP argument to
the \fBWSGIDaemonProcess\fP line in Apache\(aqs Horizon config.
.sp
Assuming your \fBmy_project\fP module lives in \fB/opt/python/my_project\fP,
you\(aqd make it look like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
WSGIDaemonProcess [... existing options ...] python\-path=/opt/python
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Button Icons
.sp
Horizon uses font icons (glyphicons) from Twitter Bootstrap to add icons to buttons.
Please see \fI\%http://bootstrapdocs.com/v3.1.1/docs/components/#glyphicons\fP for instructions
how to use icons in the code.
.sp
To add icon to Table Action, use icon property. Example:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B class CreateSnapshot(tables.LinkAction):
name = "snapshot"
verbose_name = _("Create Snapshot")
icon = "camera"
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Additionally, the site\-wide default button classes can be configured by
setting \fBACTION_CSS_CLASSES\fP to a tuple of the classes you wish to appear
on all action buttons in your \fBlocal_settings.py\fP file.
.SS Custom Stylesheets
.sp
It is possible to define custom stylesheets for your dashboards. Horizon\(aqs base
template \fBopenstack_dashboard/templates/base.html\fP defines multiple blocks that
can be overridden.
.sp
To define custom css files that apply only to a specific dashboard, create
a base template in your dashboard\(aqs templates folder, which extends Horizon\(aqs
base template e.g. \fBopenstack_dashboard/dashboards/my_custom_dashboard/
templates/my_custom_dashboard/base.html\fP\&.
.sp
In this template, redefine \fBblock css\fP\&. (Don\(aqt forget to include
\fB_stylesheets.html\fP which includes all Horizon\(aqs default stylesheets.):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends \(aqbase.html\(aq %}

{% block css %}
  {% include "_stylesheets.html" %}

  {% load compress %}
  {% compress css %}
  <link href=\(aq{{ STATIC_URL }}my_custom_dashboard/scss/my_custom_dashboard.scss\(aq type=\(aqtext/scss\(aq media=\(aqscreen\(aq rel=\(aqstylesheet\(aq />
  {% endcompress %}
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The custom stylesheets then reside in the dashboard\(aqs own \fBstatic\fP folder
\fBopenstack_dashboard/dashboards/my_custom_dashboard/static/
my_custom_dashboard/scss/my_custom_dashboard.scss\fP\&.
.sp
All dashboard\(aqs templates have to inherit from dashboard\(aqs base.html:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends \(aqmy_custom_dashboard/base.html\(aq %}
\&...
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Custom Javascript
.sp
Similarly to adding custom styling (see above), it is possible to include
custom javascript files.
.sp
All Horizon\(aqs javascript files are listed in the \fBopenstack_dashboard/
templates/horizon/_scripts.html\fP partial template, which is included in
Horizon\(aqs base template in \fBblock js\fP\&.
.sp
To add custom javascript files, create an \fB_scripts.html\fP partial template in
your dashboard \fBopenstack_dashboard/dashboards/my_custom_dashboard/
templates/my_custom_dashboard/_scripts.html\fP which extends
\fBhorizon/_scripts.html\fP\&. In this template override the
\fBblock custom_js_files\fP including your custom javascript files:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends \(aqhorizon/_scripts.html\(aq %}

{% block custom_js_files %}
    <script src=\(aq{{ STATIC_URL }}my_custom_dashboard/js/my_custom_js.js\(aq type=\(aqtext/javascript\(aq charset=\(aqutf\-8\(aq></script>
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
In your dashboard\(aqs own base template \fBopenstack_dashboard/dashboards/
my_custom_dashboard/templates/my_custom_dashboard/base.html\fP override
\fBblock js\fP with inclusion of dashboard\(aqs own \fB_scripts.html\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% block js %}
    {% include "my_custom_dashboard/_scripts.html" %}
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The result is a single compressed js file consisting both Horizon and
dashboard\(aqs custom scripts.
.sp
Additionally, some marketing and analytics scripts require you to place them
within the page\(aqs <head> tag. To do this, place them within the
\fBhorizon/_custom_head_js.html\fP file. Similar to the \fB_scripts.html\fP file
mentioned above, you may link to an existing file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<script src=\(aq{{ STATIC_URL }}/my_custom_dashboard/js/my_marketing_js.js\(aq type=\(aqtext/javascript\(aq charset=\(aqutf\-8\(aq></script>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or you can paste your script directly in the file, being sure to use
appropriate tags:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<script type="text/javascript">
//some javascript
</script>
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Customizing Meta Attributes
.sp
To add custom metadata attributes to your project\(aqs base template, include
them in the \fBhorizon/_custom_meta.html\fP file. The contents of this file will be
inserted into the page\(aqs <head> just after the default Horizon meta tags.
.SH DEVELOPER DOCS
.sp
For those wishing to develop Horizon itself, or go in\-depth with building
your own \fBDashboard\fP or \fBPanel\fP classes,
the following documentation is provided.
.SS General information
.sp
Brief guides to areas of interest and importance when developing Horizon.
.SS Horizon Basics
.SS Values
.INDENT 0.0
.INDENT 3.5
"Think simple" as my old master used to say \- meaning reduce
the whole of its parts into the simplest terms, getting back
to first principles.
\(em Frank Lloyd Wright
.UNINDENT
.UNINDENT
.sp
Horizon holds several key values at the core of its design and architecture:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Core Support: Out\-of\-the\-box support for all core OpenStack projects.
.IP \(bu 2
Extensible: Anyone can add a new component as a "first\-class citizen".
.IP \(bu 2
Manageable: The core codebase should be simple and easy\-to\-navigate.
.IP \(bu 2
Consistent: Visual and interaction paradigms are maintained throughout.
.IP \(bu 2
Stable: A reliable API with an emphasis on backwards\-compatibility.
.IP \(bu 2
Usable: Providing an \fIawesome\fP interface that people \fIwant\fP to use.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The only way to attain and uphold those ideals is to make it \fIeasy\fP for
developers to implement those values.
.SS History
.sp
Horizon started life as a single app to manage OpenStack\(aqs compute project.
As such, all it needed was a set of views, templates, and API calls.
.sp
From there it grew to support multiple OpenStack projects and APIs gradually,
arranged rigidly into "dash" and "syspanel" groupings.
.sp
During the "Diablo" release cycle an initial plugin system was added using
signals to hook in additional URL patterns and add links into the "dash"
and "syspanel" navigation.
.sp
This incremental growth served the goal of "Core Support" phenomenally, but
left "Extensible" and "Manageable" behind. And while the other key values took
shape of their own accord, it was time to re\-architect for an extensible,
modular future.
.SS The Current Architecture & How It Meets Our Values
.sp
At its core, \fBHorizon should be a registration pattern for
applications to hook into\fP\&. Here\(aqs what that means and how it is
implemented in terms of our values:
.SS Core Support
.sp
Horizon ships with three central dashboards, a "User Dashboard", a
"System Dashboard", and a "Settings" dashboard. Between these three they
cover the core OpenStack applications and deliver on Core Support.
.sp
The Horizon application also ships with a set of API abstractions
for the core OpenStack projects in order to provide a consistent, stable set
of reusable methods for developers. Using these abstractions, developers
working on Horizon don\(aqt need to be intimately familiar with the APIs of
each OpenStack project.
.SS Extensible
.sp
A Horizon dashboard application is based around the \fBDashboard\fP
class that provides a consistent API and set of capabilities for both
core OpenStack dashboard apps shipped with Horizon and equally for third\-party
apps. The \fBDashboard\fP class is treated as a top\-level
navigation item.
.sp
Should a developer wish to provide functionality within an existing dashboard
(e.g. adding a monitoring panel to the user dashboard) the simple registration
pattern makes it possible to write an app which hooks into other dashboards
just as easily as creating a new dashboard. All you have to do is import the
dashboard you wish to modify.
.SS Manageable
.sp
Within the application, there is a simple method for registering a
\fBPanel\fP (sub\-navigation items). Each panel contains the
necessary logic (views, forms, tests, etc.) for that interface. This granular
breakdown prevents files (such as \fBapi.py\fP) from becoming thousands of
lines long and makes code easy to find by correlating it directly to the
navigation.
.SS Consistent
.sp
By providing the necessary core classes to build from, as well as a
solid set of reusable templates and additional tools (base form classes,
base widget classes, template tags, and perhaps even class\-based views)
we can maintain consistency across applications.
.SS Stable
.sp
By architecting around these core classes and reusable components we
create an implicit contract that changes to these components will be
made in the most backwards\-compatible ways whenever possible.
.SS Usable
.sp
Ultimately that\(aqs up to each and every developer that touches the code,
but if we get all the other goals out of the way then we are free to focus
on the best possible experience.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \fBQuickstart\fP
A short guide to getting started with using Horizon.
.TP
.B \fBFrequently Asked Questions\fP
Common questions and answers.
.TP
.B \fBGlossary\fP
Common terms and their definitions.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Quickstart
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This section has been tested for Horizon on Ubuntu (12.04\-64) and Fedora\-based (RHEL 6.4) distributions. Feel free to add notes and any changes according to your experiences or operating system.
.UNINDENT
.UNINDENT
.SS Linux Systems
.sp
Install the prerequisite packages.
.sp
On Ubuntu:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> sudo apt\-get install git python\-dev python\-virtualenv libssl\-dev libffi\-dev
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
On Fedora\-based distributions (e.g., Fedora/RHEL/CentOS/Scientific Linux):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> sudo yum install gcc git\-core python\-devel python\-virtualenv openssl\-devel libffi\-devel which
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Setup
.sp
To setup a Horizon development environment simply clone the Horizon git
repository from \fI\%http://github.com/openstack/horizon\fP and execute the
\fBrun_tests.sh\fP script from the root folder (see \fBref/run_tests\fP):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> git clone https://github.com/openstack/horizon.git
> cd horizon
> ./run_tests.sh
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Running \fBrun_tests.sh\fP will build a virtualenv, \fB\&.venv\fP, where all the
python dependencies for Horizon are installed and referenced. After the
dependencies are installed, the unit test suites in the Horizon repo will be
executed.  There should be no errors from the tests.
.UNINDENT
.UNINDENT
.sp
Next you will need to setup your Django application config by copying \fBopenstack_dashboard/local/local_settings.py.example\fP to \fBopenstack_dashboard/local/local_settings.py\fP\&. To do this quickly you can use the following command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> cp openstack_dashboard/local/local_settings.py.example openstack_dashboard/local/local_settings.py
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
To add new settings or customize existing settings, modify the \fBlocal_settings.py\fP file.
.UNINDENT
.UNINDENT
.sp
Horizon assumes a single end\-point for OpenStack services which defaults to
the local host (127.0.0.1), as is the default in DevStack. If this is not the
case change the \fBOPENSTACK_HOST\fP setting in the
\fBopenstack_dashboard/local/local_settings.py\fP file, to the actual IP address
of the OpenStack end\-point Horizon should use.
.sp
You can save changes you made to
\fBopenstack_dashboard/local/local_settings.py\fP with the following command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> python manage.py migrate_settings \-\-gendiff
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This creates a \fBlocal_settings.diff\fP file which is a diff between
\fBlocal_settings.py\fP and \fBlocal_settings.py.example\fP
.UNINDENT
.UNINDENT
.sp
If you upgrade Horizon, you might need to update your
\fBopenstack_dashboard/local/local_settings.py\fP file with new parameters from
\fBopenstack_dashboard/local/local_settings.py.example\fP to do so, first update
Horizon:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> git remote update && git pull \-\-ff\-only origin master
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Then update your  \fBopenstack_dashboard/local/local_settings.py\fP file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> mv openstack_dashboard/local/local_settings.py openstack_dashboard/local/local_settings.py.old
> python manage.py migrate_settings
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This applies \fBopenstack_dashboard/local/local_settings.diff\fP on
\fBopenstack_dashboard/local/local_settings.py.example\fP to regenerate an
\fBopenstack_dashboard/local/local_settings.py\fP file.
The migration can sometimes have difficulties to migrate some settings, if
this happens you will be warned with a conflict message pointing to an
\fBopenstack_dashboard/local/local_settings.py_Some_DateTime.rej\fP file.
In this file, you will see the lines which could not be automatically
changed and you will have to redo only these few changes manually instead
of modifying the full
\fBopenstack_dashboard/local/local_settings.py.example\fP file.
.UNINDENT
.UNINDENT
.sp
When all settings have been migrated, it is safe to regenerate a clean diff in
order to prevent Conflicts for future migrations:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> mv openstack_dashboard/local/local_settings.diff openstack_dashboard/local/local_settings.diff.old
> python manage.py migrate_settings \-\-gendiff
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To start the Horizon development server use \fBrun_tests.sh\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
> ./run_tests.sh \-\-runserver localhost:9000
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The default port for runserver is 8000 which is already consumed by
heat\-api\-cfn in DevStack. If not running in DevStack
\fI\&./run_tests.sh \-\-runserver\fP will start the test server at
\fIhttp://localhost:8000\fP\&.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The \fBrun_tests.sh\fP script provides wrappers around \fBmanage.py\fP\&.
For more information on manage.py which is a django, see
\fIhttps://docs.djangoproject.com/en/dev/ref/django\-admin/\fP
.UNINDENT
.UNINDENT
.sp
Once the Horizon server is running, point a web browser to \fI\%http://localhost:9000\fP
or to the IP and port the server is listening for.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The \fBDevStack\fP project (\fI\%http://devstack.org/\fP) can be used to install
an OpenStack development environment from scratch. For a local.conf that
enables most services that Horizon supports managing see
\fBlocal.conf\fP
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The minimum required set of OpenStack services running includes the
following:
.INDENT 0.0
.IP \(bu 2
Nova (compute, api, scheduler, and network)
.IP \(bu 2
Glance
.IP \(bu 2
Keystone
.IP \(bu 2
Neutron (unless nova\-network is used)
.UNINDENT
.sp
Horizon provides optional support for other services.
See \fIsystem\-requirements\-label\fP for the supported services.
If Keystone endpoint for a service is configured, Horizon detects it
and enables its support automatically.
.UNINDENT
.UNINDENT
.SS Editing Horizon\(aqs Source
.sp
Although DevStack installs and configures an instance of Horizon when running
stack.sh, the preferred development setup follows the instructions above on the
server/VM running DevStack. The are several advantages to maintaining a
separate copy of the Horizon repo, rather than editing the devstack installed
copy.
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Source code changes aren\(aqt as easily lost when running unstack.sh/stack.sh
.IP \(bu 2
The development server picks up source code changes (other than JavaScript
and CSS due to compression and compilation) while still running.
.IP \(bu 2
Log messages and print statements go directly to the console.
.IP \(bu 2
Debugging with pdb becomes much simpler to interact with.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
JavaScript and CSS changes require a development server restart. Also,
forcing a refresh of the page (e.g. using Shift\-F5) in the browser is
required to pull down non\-cached versions of the CSS and JavaScript. The
default setting in Horizon is to do compilation and compression of these
files at server startup. If you have configured your local copy to do
offline compression, more steps are required.
.UNINDENT
.UNINDENT
.SS Horizon\(aqs Structure
.sp
This project is a bit different from other OpenStack projects in that it has
two very distinct components underneath it: \fBhorizon\fP, and
\fBopenstack_dashboard\fP\&.
.sp
The \fBhorizon\fP directory holds the generic libraries and components that can
be used in any Django project.
.sp
The \fBopenstack_dashboard\fP directory contains a reference Django project that
uses \fBhorizon\fP\&.
.sp
For development, both pieces share an environment which (by default) is
built with the \fBtools/install_venv.py\fP script. That script creates a
virtualenv and installs all the necessary packages.
.sp
If dependencies are added to either \fBhorizon\fP or \fBopenstack_dashboard\fP,
they should be added to \fBrequirements.txt\fP\&.
.INDENT 0.0
.INDENT 3.5
.sp
\fBIMPORTANT:\fP
.INDENT 0.0
.INDENT 3.5
If you do anything which changes the environment (adding new dependencies
or renaming directories are both great examples) be sure to increment the
\fBenvironment_version\fP counter in \fBrun_tests.sh\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Project
.SS Dashboard configuration
.sp
To add a new dashboard to your project, you need to add a configuration file to
\fBopenstack_dashboard/local/enabled\fP directory. For more information on this,
see \fIpluggable\-settings\-label\fP\&.
.sp
There is also an alternative way to add a new dashboard, by adding it to
Django\(aqs \fBINSTALLED_APPS\fP setting. For more information about this, see
\fIdashboards\fP\&. However, please note that the recommended way is to take
advantage of the pluggable settings feature.
.SS URLs
.sp
Then you add a single line to your project\(aqs \fBurls.py\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
url(r\(aq\(aq, include(horizon.urls)),
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Those urls are automatically constructed based on the registered Horizon apps.
If a different URL structure is desired it can be constructed by hand.
.SS Templates
.sp
Pre\-built template tags generate navigation. In your \fBnav.html\fP
template you might have the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% load horizon %}

<div class=\(aqnav\(aq>
    {% horizon_main_nav %}
</div>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
And in your \fBsidebar.html\fP you might have:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% load horizon %}

<div class=\(aqsidebar\(aq>
    {% horizon_dashboard_nav %}
</div>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
These template tags are aware of the current "active" dashboard and panel
via template context variables and will render accordingly.
.SS Application
.SS Structure
.sp
An application would have the following structure (we\(aqll use project as
an example):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
project/
|\-\-\-__init__.py
|\-\-\-dashboard.py <\-\-\-\-\-Registers the app with Horizon and sets dashboard properties
|\-\-\-overview/
|\-\-\-images/
    |\-\- images
    |\-\- __init__.py
    |\-\-\-panel.py <\-\-\-\-\-Registers the panel in the app and defines panel properties
    |\-\- snapshots/
    |\-\- templates/
    |\-\- tests.py
    |\-\- urls.py
    |\-\- views.py
    ...
\&...
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Dashboard Classes
.sp
Inside of \fBdashboard.py\fP you would have a class definition and the registration
process:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import horizon

\&....
# ObjectStorePanels is an example for a PanelGroup
# for panel classes in general, see below
class ObjectStorePanels(horizon.PanelGroup):
    slug = "object_store"
    name = _("Object Store")
    panels = (\(aqcontainers\(aq,)


class Project(horizon.Dashboard):
    name = _("Project") # Appears in navigation
    slug = "project"    # Appears in URL
    # panels may be strings or refer to classes, such as
    # ObjectStorePanels
    panels = (BasePanels, NetworkPanels, ObjectStorePanels)
    default_panel = \(aqoverview\(aq
    ...

horizon.register(Project)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Panel Classes
.sp
To connect a \fBPanel\fP with a \fBDashboard\fP class
you register it in a \fBpanel.py\fP file like so:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import horizon

from openstack_dashboard.dashboards.project import dashboard


class Images(horizon.Panel):
    name = "Images"
    slug = \(aqimages\(aq
    permissions = (\(aqopenstack.roles.admin\(aq, \(aqmy.other.permission\(aq,)


# You could also register your panel with another application\(aqs dashboard
dashboard.Project.register(Images)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
By default a \fBPanel\fP class looks for a \fBurls.py\fP file in the
same directory as \fBpanel.py\fP to include in the rollup of url patterns from
panels to dashboards to Horizon, resulting in a wholly extensible, configurable
URL structure.
.SS Tutorial: Building a Dashboard using Horizon
.sp
This tutorial covers how to use the various components in horizon to build
an example dashboard and a panel with a tab which has a table containing data
from the back end.
.sp
As an example, we\(aqll create a new \fBMy Dashboard\fP dashboard with a \fBMy Panel\fP
panel that has an \fBInstances Tab\fP tab. The tab has a table which contains the
data pulled by the Nova instances API.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This tutorial assumes you have either a \fBdevstack\fP or \fBopenstack\fP
environment up and running.
There are a variety of other resources which may be helpful to read first.
For example, you may want to start
with the \fBHorizon quickstart guide\fP or the
\fI\%Django tutorial\fP\&.
.UNINDENT
.UNINDENT
.SS Creating a dashboard
.SS The quick version
.sp
Horizon provides a custom management command to create a typical base
dashboard structure for you. Run the following commands at the same location
where the \fBrun_tests.sh\fP file resides. It generates most of the boilerplate
code you need:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mkdir openstack_dashboard/dashboards/mydashboard

\&./run_tests.sh \-m startdash mydashboard \e
              \-\-target openstack_dashboard/dashboards/mydashboard

mkdir openstack_dashboard/dashboards/mydashboard/mypanel

\&./run_tests.sh \-m startpanel mypanel \e
               \-\-dashboard=openstack_dashboard.dashboards.mydashboard \e
               \-\-target=openstack_dashboard/dashboards/mydashboard/mypanel
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
You will notice that the directory \fBmydashboard\fP gets automatically
populated with the files related to a dashboard and the \fBmypanel\fP directory
gets automatically populated with the files related to a panel.
.SS Structure
.sp
If you use the \fBtree mydashboard\fP command to list the \fBmydashboard\fP
directory in \fBopenstack_dashboard/dashboards\fP , you will see a directory
structure that looks like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mydashboard
├── dashboard.py
├── dashboard.pyc
├── __init__.py
├── __init__.pyc
├── models.py
├── mypanel
│\ \  ├── __init__.py
│\ \  ├── models.py
│\ \  ├── panel.py
│\ \  ├── templates
│\ \  │\ \  └── mypanel
│\ \  │\ \      └── index.html
│\ \  ├── tests.py
│\ \  ├── urls.py
│\ \  └── views.py
├── static
│\ \  └── mydashboard
│\ \      ├── css
│\ \      │\ \  └── mydashboard.css
│\ \      └── js
│\ \          └── mydashboard.js
└── templates
    └── mydashboard
        └── base.html
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
For this tutorial, we will not deal with the static directory, the \fBmodels.py\fP
file and tests.py file. Leave them as they are.
.sp
With the rest of the files and directories in place, we can move on to add our
own dashboard.
.SS Defining a dashboard
.sp
Open the \fBdashboard.py\fP file. You will notice the following code has been
automatically generated:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

import horizon


class Mydashboard(horizon.Dashboard):
   name = _("Mydashboard")
   slug = "mydashboard"
   panels = ()           # Add your panels here.
   default_panel = \(aq\(aq    # Specify the slug of the dashboard\(aqs default panel.


horizon.register(Mydashboard)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If you want the dashboard name to be something else, you can change the \fBname\fP
attribute in the \fBdashboard.py\fP file . For example, you can change it
to be \fBMy Dashboard\fP
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
name = _("My Dashboard")
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
A dashboard class will usually contain a \fBname\fP attribute (the display name of
the dashboard), a \fBslug\fP attribute (the internal name that could be referenced
by other components), a list of panels, default panel, etc. We will cover how
to add a panel in the next section.
.SS Creating a panel
.sp
We\(aqll create a panel and call it \fBMy Panel\fP\&.
.SS Structure
.sp
As described above, the \fBmypanel\fP directory under
\fBopenstack_dashboard/dashboards/mydashboard\fP should look like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
mypanel
 ├── __init__.py
 ├── models.py
 ├── panel.py
 ├── templates
 │\ \  └── mypanel
 │\ \  \  └── index.html
 ├── tests.py
 ├── urls.py
 └── views.py
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Defining a panel
.sp
The \fBpanel.py\fP file referenced above has a special meaning. Within a dashboard,
any module name listed in the \fBpanels\fP attribute on the dashboard class will
be auto\-discovered by looking for the \fBpanel.py\fP file in a corresponding
directory (the details are a bit magical, but have been thoroughly vetted in
Django\(aqs admin codebase).
.sp
Open the \fBpanel.py\fP file, you will have the following auto\-generated code:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

import horizon

from openstack_dashboard.dashboards.mydashboard import dashboard


class Mypanel(horizon.Panel):
    name = _("Mypanel")
    slug = "mypanel"


dashboard.Mydashboard.register(Mypanel)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If you want the panel name to be something else, you can change the \fBname\fP
attribute in the \fBpanel.py\fP file . For example, you can change it to be
\fBMy Panel\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
name = _("My Panel")
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Open the \fBdashboard.py\fP file again, insert the following code above the
\fBMydashboard\fP class. This code defines the \fBMygroup\fP class and adds a panel
called \fBmypanel\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class Mygroup(horizon.PanelGroup):
    slug = "mygroup"
    name = _("My Group")
    panels = (\(aqmypanel\(aq,)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Modify the \fBMydashboard\fP class to include \fBMygroup\fP and add \fBmypanel\fP as
the default panel:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class Mydashboard(horizon.Dashboard):
   name = _("My Dashboard")
   slug = "mydashboard"
   panels = (Mygroup,)  # Add your panels here.
   default_panel = \(aqmypanel\(aq  # Specify the slug of the default panel.
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The completed \fBdashboard.py\fP file should look like
the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

import horizon


class Mygroup(horizon.PanelGroup):
    slug = "mygroup"
    name = _("My Group")
    panels = (\(aqmypanel\(aq,)


class Mydashboard(horizon.Dashboard):
    name = _("My Dashboard")
    slug = "mydashboard"
    panels = (Mygroup,)  # Add your panels here.
    default_panel = \(aqmypanel\(aq  # Specify the slug of the default panel.


horizon.register(Mydashboard)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Tables, Tabs, and Views
.sp
We\(aqll start with the table, combine that with the tabs, and then build our
view from the pieces.
.SS Defining a table
.sp
Horizon provides a \fBSelfHandlingForm\fP  \fBDataTable\fP class which simplifies
the vast majority of displaying data to an end\-user. We\(aqre just going to skim
the surface here, but it has a tremendous number of capabilities.
.sp
Create a \fBtables.py\fP file under the \fBmypanel\fP directory and add the
following code:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

from horizon import tables


class InstancesTable(tables.DataTable):
    name = tables.Column("name", verbose_name=_("Name"))
    status = tables.Column("status", verbose_name=_("Status"))
    zone = tables.Column(\(aqavailability_zone\(aq,
                          verbose_name=_("Availability Zone"))
    image_name = tables.Column(\(aqimage_name\(aq, verbose_name=_("Image Name"))

    class Meta:
        name = "instances"
        verbose_name = _("Instances")
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
There are several things going on here... we created a table subclass,
and defined four columns that we want to retrieve data and display.
Each of those columns defines what attribute it accesses on the instance object
as the first argument, and since we like to make everything translatable,
we give each column a \fBverbose_name\fP that\(aqs marked for translation.
.sp
Lastly, we added a \fBMeta\fP class which indicates the meta object that describes
the \fBinstances\fP table.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This is a slight simplification from the reality of how the instance
object is actually structured. In reality, accessing other attributes
requires an additional step.
.UNINDENT
.UNINDENT
.SS Adding actions to a table
.sp
Horizon provides three types of basic action classes which can be taken
on a table\(aqs data:
.INDENT 0.0
.IP \(bu 2
\fBAction\fP
.IP \(bu 2
\fBLinkAction\fP
.IP \(bu 2
\fBFilterAction\fP
.UNINDENT
.sp
There are also additional actions which are extensions of the basic Action classes:
.INDENT 0.0
.IP \(bu 2
\fBBatchAction\fP
.IP \(bu 2
\fBDeleteAction\fP
.IP \(bu 2
\fBUpdateAction\fP
.IP \(bu 2
\fBFixedFilterAction\fP
.UNINDENT
.sp
Now let\(aqs create and add a filter action to the table. To do so, we will need
to edit the \fBtables.py\fP file used above. To add a filter action which will
only show rows which contain the string entered in the filter field, we
must first define the action:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class MyFilterAction(tables.FilterAction):
    name = "myfilter"
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The action specified above will default the \fBfilter_type\fP to be \fB"query"\fP\&.
This means that the filter will use the client side table sorter.
.UNINDENT
.UNINDENT
.sp
Then, we add that action to the table actions for our table.:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class InstancesTable:
    class Meta:
        table_actions = (MyFilterAction,)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The completed \fBtables.py\fP file should look like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

from horizon import tables


class MyFilterAction(tables.FilterAction):
    name = "myfilter"


class InstancesTable(tables.DataTable):
    name = tables.Column(\(aqname\(aq, \e
                         verbose_name=_("Name"))
    status = tables.Column(\(aqstatus\(aq, \e
                           verbose_name=_("Status"))
    zone = tables.Column(\(aqavailability_zone\(aq, \e
                         verbose_name=_("Availability Zone"))
    image_name = tables.Column(\(aqimage_name\(aq, \e
                               verbose_name=_("Image Name"))

    class Meta:
        name = "instances"
        verbose_name = _("Instances")
        table_actions = (MyFilterAction,)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Defining tabs
.sp
So we have a table, ready to receive our data. We could go straight to a view
from here, but in this case we\(aqre also going to use horizon\(aqs
\fBTabGroup\fP class.
.sp
Create a \fBtabs.py\fP file under the \fBmypanel\fP directory. Let\(aqs make a tab
group which has one tab. The completed code should look like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

from horizon import exceptions
from horizon import tabs

from openstack_dashboard import api
from openstack_dashboard.dashboards.mydashboard.mypanel import tables


class InstanceTab(tabs.TableTab):
    name = _("Instances Tab")
    slug = "instances_tab"
    table_classes = (tables.InstancesTable,)
    template_name = ("horizon/common/_detail_table.html")
    preload = False

    def has_more_data(self, table):
        return self._has_more

    def get_instances_data(self):
        try:
            marker = self.request.GET.get(
                        tables.InstancesTable._meta.pagination_param, None)

            instances, self._has_more = api.nova.server_list(
                self.request,
                search_opts={\(aqmarker\(aq: marker, \(aqpaginate\(aq: True})

            return instances
        except Exception:
            self._has_more = False
            error_message = _(\(aqUnable to get instances\(aq)
            exceptions.handle(self.request, error_message)

            return []

class MypanelTabs(tabs.TabGroup):
    slug = "mypanel_tabs"
    tabs = (InstanceTab,)
    sticky = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This tab gets a little more complicated. The tab handles data tables (and
all their associated features), and it also uses the \fBpreload\fP attribute to
specify that this tab shouldn\(aqt be loaded by default. It will instead be loaded
via AJAX when someone clicks on it, saving us on API calls in the vast majority
of cases.
.sp
Additionally, the displaying of the table is handled by a reusable template,
\fBhorizon/common/_detail_table.html\fP\&. Some simple pagination code was added
to handle large instance lists.
.sp
Lastly, this code introduces the concept of error handling in horizon.
The \fBhorizon.exceptions.handle()\fP function is a centralized error
handling mechanism that takes all the guess\-work and inconsistency out of
dealing with exceptions from the API. Use it everywhere.
.SS Tying it together in a view
.sp
There are lots of pre\-built class\-based views in horizon. We try to provide
the starting points for all the common combinations of components.
.sp
Open the \fBviews.py\fP file, the auto\-generated code is like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from horizon import views


class IndexView(views.APIView):
    # A very simple class\-based view...
    template_name = \(aqmydashboard/mypanel/index.html\(aq

    def get_data(self, request, context, *args, **kwargs):
        # Add data to the context here...
        return context
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
In this case we want a starting view type that works with both tabs and
tables... that\(aqd be the \fBTabbedTableView\fP class. It takes
the best of the dynamic delayed\-loading capabilities tab groups provide and
mixes in the actions and AJAX\-updating that tables are capable of with almost
no work on the user\(aqs end. Change \fBviews.APIView\fP to be
\fBtabs.TabbedTableView\fP and add \fBMypanelTabs\fP as the tab group class in the
\fBIndexView\fP class:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class IndexView(tabs.TabbedTableView):
    tab_group_class = mydashboard_tabs.MypanelTabs
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
After importing the proper package, the completed \fBviews.py\fP file  now looks like
the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from horizon import tabs

from openstack_dashboard.dashboards.mydashboard.mypanel \e
    import tabs as mydashboard_tabs


class IndexView(tabs.TabbedTableView):
    tab_group_class = mydashboard_tabs.MypanelTabs
    template_name = \(aqmydashboard/mypanel/index.html\(aq

    def get_data(self, request, context, *args, **kwargs):
        # Add data to the context here...
        return context
.ft P
.fi
.UNINDENT
.UNINDENT
.SS URLs
.sp
The auto\-generated \fBurls.py\fP file is like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.conf.urls import patterns
from django.conf.urls import url

from openstack_dashboard.dashboards.mydashboard.mypanel.views \e
    import IndexView


urlpatterns = patterns(
    \(aq\(aq,
    url(r\(aq^$\(aq, IndexView.as_view(), name=\(aqindex\(aq),
)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Adjust the import of \fBIndexView\fP to make the code readable:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from openstack_dashboard.dashboards.mydashboard.mypanel import views
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Replace the existing \fBurl\fP pattern with the following line:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
url(r\(aq^$\(aq,
    views.IndexView.as_view(), name=\(aqindex\(aq),
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The completed \fBurls.py\fP file should look like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.conf.urls import patterns
from django.conf.urls import url

from openstack_dashboard.dashboards.mydashboard.mypanel import views


urlpatterns = patterns(\(aq\(aq,
    url(r\(aq^$\(aq,
        views.IndexView.as_view(), name=\(aqindex\(aq),
)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS The template
.sp
Open the \fBindex.html\fP file in the \fBmydashboard/mypanel/templates/mypanel\fP
directory, the auto\-generated code is like the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends \(aqbase.html\(aq %}
{% load i18n %}
{% block title %}{% trans "Mypanel" %}{% endblock %}

{% block page_header %}
    {% include "horizon/common/_page_header.html" with title=_("Mypanel") %}
{% endblock page_header %}

{% block main %}
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fBmain\fP block must be modified to insert the following code:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<div class="row">
   <div class="col\-sm\-12">
   {{ tab_group.render }}
   </div>
</div>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If you want to change the title of the \fBindex.html\fP file to be something else,
you can change it. For example, change it to be \fBMy Panel\fP in the
\fBblock title\fP section.  If you want the \fBtitle\fP in the \fBblock page_header\fP
section to be something else, you can change it. For example, change it to be
\fBMy Panel\fP\&. The updated code could be like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends \(aqbase.html\(aq %}
{% load i18n %}
{% block title %}{% trans "My Panel" %}{% endblock %}

{% block page_header %}
   {% include "horizon/common/_page_header.html" with title=_("My Panel") %}
{% endblock page_header %}

{% block main %}
<div class="row">
   <div class="col\-sm\-12">
   {{ tab_group.render }}
   </div>
</div>
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This gives us a custom page title, a header, and renders our tab group provided
by the view.
.sp
With all our code in place, the only thing left to do is to integrate it into
our OpenStack Dashboard site.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
For more information about Django views, URLs and templates, please refer
to the \fI\%Django documentation\fP\&.
.UNINDENT
.UNINDENT
.SS Enable and show the dashboard
.sp
In order to make \fBMy Dashboard\fP show up along with the existing dashboards
like \fBProject\fP or \fBAdmin\fP on horizon, you need to create a file called
\fB_50_mydashboard.py\fP under \fBopenstack_dashboard/enabled\fP and add the
following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# The name of the dashboard to be added to HORIZON[\(aqdashboards\(aq]. Required.
DASHBOARD = \(aqmydashboard\(aq

# If set to True, this dashboard will not be added to the settings.
DISABLED = False

# A list of applications to be added to INSTALLED_APPS.
ADD_INSTALLED_APPS = [
    \(aqopenstack_dashboard.dashboards.mydashboard\(aq,
]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Run and check the dashboard
.sp
Everything is in place, now run \fBHorizon\fP on the different port:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-runserver 0.0.0.0:8877
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Go to \fBhttp://<your server>:8877\fP using a browser. After login as an admin
you should be able see \fBMy Dashboard\fP shows up at the left side on horizon.
Click it, \fBMy Group\fP will expand with \fBMy Panel\fP\&. Click on \fBMy Panel\fP,
the right side panel will display an \fBInstances Tab\fP which has an
\fBInstances\fP table.
.sp
If you don\(aqt see any instance data, you haven\(aqt created any instances yet.  Go to
dashboard \fBProject\fP \-> \fBImages\fP, select a small image, for example,
\fBcrioos\-0.3.1\-x86_64\-uec\fP , click \fBLaunch\fP and enter an \fBInstance Name\fP,
click the button \fBLaunch\fP\&. It should create an instance if the OpenStack or
devstack is correctly set up. Once the creation of an instance is successful, go
to \fBMy Dashboard\fP again to check the data.
.SS Adding a complex action to a table
.sp
For a more detailed look into adding a table action, one that requires forms for
gathering data, you can walk through \fBAdding a complex action to a table\fP tutorial.
.SS Conclusion
.sp
What you\(aqve learned here is the fundamentals of how to write interfaces for
your own project based on the components horizon provides.
.sp
If you have feedback on how this tutorial could be improved, please feel free
to submit a bug against \fBHorizon\fP in \fI\%launchpad\fP\&.
.INDENT 0.0
.INDENT 3.5
.UNINDENT
.UNINDENT
.SS Contributing Guide
.sp
First and foremost, thank you for wanting to contribute! It\(aqs the only way
open source works!
.sp
Before you dive into writing patches, here are some of the basics:
.INDENT 0.0
.IP \(bu 2
Project page: \fI\%http://launchpad.net/horizon\fP
.IP \(bu 2
Bug tracker: \fI\%https://bugs.launchpad.net/horizon\fP
.IP \(bu 2
Source code: \fI\%https://github.com/openstack/horizon\fP
.IP \(bu 2
Code review: \fI\%https://review.openstack.org/#q,status:open+project:openstack/horizon,n,z\fP
.IP \(bu 2
Continuous integration:
* Jenkins: \fI\%https://jenkins.openstack.org\fP
* Zuul: \fI\%http://status.openstack.org/zuul\fP
.IP \(bu 2
IRC Channel: #openstack\-horizon on Freenode.
.UNINDENT
.SS Making Contributions
.SS Getting Started
.sp
We\(aqll start by assuming you\(aqve got a working checkout of the repository (if
not then please see the \fBquickstart\fP).
.sp
Second, you\(aqll need to take care of a couple administrative tasks:
.INDENT 0.0
.IP 1. 3
Create an account on Launchpad.
.IP 2. 3
Sign the \fI\%OpenStack Contributor License Agreement\fP and follow the associated
instructions to verify your signature.
.IP 3. 3
Join the \fI\%Horizon Developers\fP team on Launchpad.
.IP 4. 3
Follow the \fI\%instructions for setting up git\-review\fP in your
development environment.
.UNINDENT
.sp
Whew! Got all that? Okay! You\(aqre good to go.
.SS Ways To Contribute
.sp
The easiest way to get started with Horizon\(aqs code is to pick a bug on
Launchpad that interests you, and start working on that. Bugs tagged as
\fBlow\-hanging\-fruit\fP are a good place to start. Alternatively, if there\(aqs an
OpenStack API feature you would like to see implemented in Horizon feel free
to try building it.
.sp
If those are too big, there are lots of great ways to get involved without
plunging in head\-first:
.INDENT 0.0
.IP \(bu 2
Report bugs, triage new tickets, and review old tickets on
the \fI\%bug tracker\fP\&.
.IP \(bu 2
Propose ideas for improvements via \fI\%Launchpad Blueprints\fP, via the
mailing list on the project page, or on IRC.
.IP \(bu 2
Write documentation!
.IP \(bu 2
Write unit tests for untested code!
.IP \(bu 2
Help improve the \fI\%User Experience Design\fP or contribute to the \fI\%Persona Working Group\fP\&.
.UNINDENT
.SS Choosing Issues To Work On
.sp
In general, if you want to write code, there are three cases for issues
you might want to work on:
.INDENT 0.0
.IP 1. 3
Confirmed bugs
.IP 2. 3
Approved blueprints (features)
.IP 3. 3
New bugs you\(aqve discovered
.UNINDENT
.sp
If you have an idea for a new feature that isn\(aqt in a blueprint yet, it\(aqs
a good idea to write the blueprint first, so you don\(aqt end up writing a bunch
of code that may not go in the direction the community wants.
.sp
For bugs, open the bug first, but if you can reproduce the bug reliably and
identify its cause then it\(aqs usually safe to start working on it. However,
getting independent confirmation (and verifying that it\(aqs not a duplicate)
is always a good idea if you can be patient.
.SS After You Write Your Patch
.sp
Once you\(aqve made your changes, there are a few things to do:
.INDENT 0.0
.IP \(bu 2
Make sure the unit tests pass: \fB\&./run_tests.sh\fP for Python, and \fBnpm run test\fP for JS.
.IP \(bu 2
Make sure the linting tasks pass: \fB\&./run_tests.sh \-\-pep8\fP for Python, and \fBnpm run lint\fP for JS.
.IP \(bu 2
Make sure your code is ready for translation: \fB\&./run_tests.sh \-\-pseudo de\fP See the Translatability section below for details.
.IP \(bu 2
Make sure your code is up\-to\-date with the latest master: \fBgit pull \-\-rebase\fP
.IP \(bu 2
Finally, run \fBgit review\fP to upload your changes to Gerrit for review.
.UNINDENT
.sp
The Horizon core developers will be notified of the new review and will examine
it in a timely fashion, either offering feedback or approving it to be merged.
If the review is approved, it is sent to Jenkins to verify the unit tests pass
and it can be merged cleanly. Once Jenkins approves it, the change will be
merged to the master repository and it\(aqs time to celebrate!
.SS Etiquette
.sp
The community\(aqs guidelines for etiquette are fairly simple:
.INDENT 0.0
.IP \(bu 2
Treat everyone respectfully and professionally.
.IP \(bu 2
If a bug is "in progress" in the bug tracker, don\(aqt start working on it
without contacting the author. Try on IRC, or via the launchpad email
contact link. If you don\(aqt get a response after a reasonable time, then go
ahead. Checking first avoids duplicate work and makes sure nobody\(aqs toes
get stepped on.
.IP \(bu 2
If a blueprint is assigned, even if it hasn\(aqt been started, be sure you
contact the assignee before taking it on. These larger issues often have a
history of discussion or specific implementation details that the assignee
may be aware of that you are not.
.IP \(bu 2
Please don\(aqt re\-open tickets closed by a core developer. If you disagree with
the decision on the ticket, the appropriate solution is to take it up on
IRC or the mailing list.
.IP \(bu 2
Give credit where credit is due; if someone helps you substantially with
a piece of code, it\(aqs polite (though not required) to thank them in your
commit message.
.UNINDENT
.SS Translatability
.sp
Horizon gets translated into multiple languages. The pseudo translation tool
can be used to verify that code is ready to be translated. The pseudo tool
replaces a language\(aqs translation with a complete, fake translation. Then
you can verify that your code properly displays fake translations to validate
that your code is ready for translation.
.SS Running the pseudo translation tool
.INDENT 0.0
.IP 1. 3
Make sure your English po file is up to date: \fB\&./run_tests.sh \-\-makemessages\fP
.IP 2. 3
Run the pseudo tool to create pseudo translations. For example, to replace the German translation with a pseudo translation: \fB\&./run_tests.sh \-\-pseudo de\fP
.IP 3. 3
Compile the catalog: \fB\&./run_tests.sh \-\-compilemessages\fP
.IP 4. 3
Run your development server.
.IP 5. 3
Log in and change to the language you pseudo translated.
.UNINDENT
.sp
It should look weird. More specifically, the translatable segments are going
to start and end with a bracket and they are going to have some added
characters. For example, "Log In" will become "[~Log In~您好яшçあ]"
This is useful because you can inspect for the following, and consider if your
code is working like it should:
.INDENT 0.0
.IP \(bu 2
If you see a string in English it\(aqs not translatable. Should it be?
.IP \(bu 2
If you see brackets next to each other that might be concatenation. Concatenation
can make quality translations difficult or impossible. See
\fI\%https://wiki.openstack.org/wiki/I18n/TranslatableStrings#Use_string_formating_variables.2C_never_perform_string_concatenation\fP
for additional information.
.IP \(bu 2
If there is unexpected wrapping/truncation there might not be enough
space for translations.
.IP \(bu 2
If you see a string in the proper translated language, it comes from an
external source. (That\(aqs not bad, just sometimes useful to know)
.IP \(bu 2
If you get new crashes, there is probably a bug.
.UNINDENT
.sp
Don\(aqt forget to cleanup any pseudo translated po files. Those don\(aqt get merged!
.SS Code Style
.sp
As a project, Horizon adheres to code quality standards.
.SS Python
.sp
We follow \fI\%PEP8\fP for all our Python code, and use \fBpep8.py\fP (available
via the shortcut \fB\&./run_tests.sh \-\-pep8\fP) to validate that our code
meets proper Python style guidelines.
.SS Django
.sp
Additionally, we follow \fI\%Django\(aqs style guide\fP for templates, views, and
other miscellany.
.SS JavaScript
.sp
The following standards are divided into required and recommended sections.
Our main goal in establishing these best practices is to have code that is
reliable, readable, and maintainable.
.SS Required
.sp
\fBReliable\fP
.INDENT 0.0
.IP \(bu 2
The code has to work on the stable and latest versions of Firefox, Chrome,
Safari, and Opera web browsers, and on Microsoft Internet Explorer 9 and
later.
.IP \(bu 2
If you turned compression off during development via \fBCOMPRESS_ENABLED =
False\fP in local_settings.py, re\-enable compression and test your code
before submitting.
.IP \(bu 2
Use \fB===\fP as opposed to \fB==\fP for equality checks. The \fB==\fP will do a
type cast before comparing, which can lead to unwanted results.
.UNINDENT
.INDENT 0.0
.INDENT 3.5
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If typecasting is desired, explicit casting is preferred to keep the
meaning of your code clear.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
Keep document reflows to a minimum. DOM manipulation is expensive, and can
become a performance issue. If you are accessing the DOM, make sure that you
are doing it in the most optimized way. One example is to build up a document
fragment and then append the fragment to the DOM in one pass instead of doing
multiple smaller DOM updates.
.IP \(bu 2
Use “strict”, enclosing each JavaScript file inside a self\-executing
function. The self\-executing function keeps the strict scoped to the file,
so its variables and methods are not exposed to other JavaScript files in
the product.
.sp
\fBNOTE:\fP
.INDENT 2.0
.INDENT 3.5
Using strict will throw exceptions for common coding errors, like
accessing global vars, that normally are not flagged.
.UNINDENT
.UNINDENT
.sp
Example:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
(function(){
  \(aquse strict\(aq;
  // code...
})();
.ft P
.fi
.UNINDENT
.UNINDENT
.IP \(bu 2
Use \fBforEach\fP | \fBeach\fP when looping whenever possible. AngularJS and
jQuery both provide for each loops that provide both iteration and scope.
.sp
AngularJS:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
angular.forEach(objectToIterateOver, function(value, key) {
  // loop logic
});
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
jQuery:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
$.each(objectToIterateOver, function(key, value) {
  // loop logic
});
.ft P
.fi
.UNINDENT
.UNINDENT
.IP \(bu 2
Do not put variables or functions in the global namespace. There are several
reasons why globals are bad, one being that all JavaScript included in an
application runs in the same scope. The issue with that is if another script
has the same method or variable names they overwrite each other.
.IP \(bu 2
Always put \fBvar\fP in front of your variables. Not putting \fBvar\fP in front
of a variable puts that variable into the global space, see above.
.IP \(bu 2
Do not use \fBeval( )\fP\&. The eval (expression) evaluates the expression
passed to it. This can open up your code to security vulnerabilities and
other issues.
.IP \(bu 2
Do not use \(aq\fBwith\fP object {code}\(aq. The \fBwith\fP statement is used to access
properties of an object. The issue with \fBwith\fP is that its execution is not
consistent, so by reading the statement in the code it is not always clear
how it is being used.
.UNINDENT
.sp
\fBReadable & Maintainable\fP
.INDENT 0.0
.IP \(bu 2
Give meaningful names to methods and variables.
.IP \(bu 2
Avoid excessive nesting.
.IP \(bu 2
Avoid HTML and CSS in JS code. HTML and CSS belong in templates and
stylesheets respectively. For example:
.INDENT 2.0
.IP \(bu 2
In our HTML files, we should focus on layout.
.INDENT 2.0
.IP 1. 3
Reduce the small/random \fB<script>\fP and \fB<style>\fP elements in HTML.
.IP 2. 3
Avoid in\-lining styles into element in HTML. Use attributes and
classes instead.
.UNINDENT
.IP \(bu 2
In our JS files, we should focus on logic rather than attempting to
manipulate/style elements.
.INDENT 2.0
.IP 1. 3
Avoid statements such as \fBelement.css({property1,property2...})\fP they
belong in a CSS class.
.IP 2. 3
Avoid statements such as \fB$("<div><span>abc</span></div>")\fP they
belong in a HTML template file. Use \fBshow\fP | \fBhide\fP | \fBclone\fP
elements if dynamic content is required.
.IP 3. 3
Avoid using classes for detection purposes only, instead, defer to
attributes. For example to find a div:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
<div class="something"></div>
  $(".something").html("Don\(aqt find me this way!");
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 2.0
.INDENT 3.5
Is better found like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
<div data\-something></div>
  $("div[data\-something]").html("You found me correctly!");
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.IP \(bu 2
Avoid commented\-out code.
.IP \(bu 2
Avoid dead code.
.UNINDENT
.sp
\fBPerformance\fP
.INDENT 0.0
.IP \(bu 2
Avoid creating instances of the same object repeatedly within the same scope.
Instead, assign the object to a variable and re\-use the existing object. For
example:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
$(document).on(\(aqclick\(aq, function() { /* do something. */ });
$(document).on(\(aqmouseover\(aq, function() { /* do something. */ });
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
A better approach:
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
var $document = $(document);
$document.on(\(aqclick\(aq, function() { /* do something. */ });
$document.on(\(aqmouseover\(aq, function() { /* do something. */ });
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
In the first approach a jQuery object for \fBdocument\fP is created each time.
The second approach creates only one jQuery object and reuses it. Each object
needs to be created, uses memory, and needs to be garbage collected.
.UNINDENT
.SS Recommended
.sp
\fBReadable & Maintainable\fP
.INDENT 0.0
.IP \(bu 2
Put a comment at the top of every file explaining what the purpose of this
file is when the naming is not obvious. This guideline also applies to
methods and variables.
.IP \(bu 2
Source\-code formatting – (or “beautification”) is recommended but should be
used with caution. Keep in mind that if you reformat an entire file that was
not previously formatted the same way, it will mess up the diff during the
code review. It is best to use a formatter when you are working on a new file
by yourself, or with others who are using the same formatter. You can also
choose to format a selected portion of a file only. Instructions for setting
up ESLint for Eclipse, Sublime Text, Notepad++ and WebStorm/PyCharm are
\fI\%provided\fP\&.
.IP \(bu 2
Use 2 spaces for code indentation.
.IP \(bu 2
Use \fB{ }\fP for \fBif\fP, \fBfor\fP, \fBwhile\fP statements, and don\(aqt combine them
on one line.
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
// Do this          //Not this          // Not this
if(x) {             if(x)               if(x) y =x;
  y=x;                y=x;
}
.ft P
.fi
.UNINDENT
.UNINDENT
.IP \(bu 2
Use ESLint in your development environment.
.UNINDENT
.SS AngularJS
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This section is intended as a quick intro to contributing with AngularJS. For
more detailed information, check the \fBtopics/angularjs\fP\&.
.UNINDENT
.UNINDENT
.SS "John Papa Style Guide"
.sp
The John Papa Style Guide is the primary point of reference for Angular
code style. This style guide has been endorsed by the AngularJS
team:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
"The most current and detailed Angular Style Guide is the
community\-driven effort led by John Papa and Todd Motto."

\- http://angularjs.blogspot.com/2014/02/an\-angularjs\-style\-guide\-and\-best.html
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The style guide is found at the below location:
.sp
\fI\%https://github.com/johnpapa/angular\-styleguide\fP
.sp
When reviewing / writing, please refer to the sections of this guide.
If an issue is encountered, note it with a comment and provide a link back
to the specific issue. For example, code should use named functions. A
review noting this should provide the following link in the comments:
.sp
\fI\%https://github.com/johnpapa/angular\-styleguide#style\-y024\fP
.sp
In addition to John Papa, the following guidelines are divided into
required and recommended sections.
.SS Required
.INDENT 0.0
.IP \(bu 2
Scope is not the model (model is your JavaScript Objects). The scope
references the model. Use isolate scopes wherever possible.
.INDENT 2.0
.IP \(bu 2
\fI\%https://github.com/angular/angular.js/wiki/Understanding\-Scopes\fP
.IP \(bu 2
Read\-only in templates.
.IP \(bu 2
Write\-only in controllers.
.UNINDENT
.IP \(bu 2
Since Django already uses \fB{{ }}\fP, use \fB{$ $}\fP or \fB{% verbatim %}\fP
instead.
.IP \(bu 2
For localization in Angular files, use the Angular service
horizon.framework.util.i18n.gettext. Ensure that the injected dependency
is named \fBgettext\fP\&. For regular Javascript files, use either \fBgettext\fP or
\fBngettext\fP\&. Only those two methods are recognized by our tools and will be
included in the .po file after running \fB\&./run_tests \-\-makemessages\fP\&.
.INDENT 2.0
.INDENT 3.5
.sp
.nf
.ft C
// Angular
angular.module(\(aqmyModule\(aq)
  .factory(\(aqmyFactory\(aq, myFactory);

myFactory.$inject = [\(aqhorizon.framework.util.i18n.gettext\(aq];
function myFactory(gettext) {
  gettext(\(aqtranslatable text\(aq);
}

// Javascript
gettext(apple);
ngettext(\(aqapple\(aq, \(aqapples\(aq, count);

// Not valid
var _ = gettext;
_(\(aqtranslatable text\(aq);

$window.gettext(\(aqtranslatable text\(aq);
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS ESLint
.sp
ESLint is a great tool to be used during your code editing to improve
JavaScript quality by checking your code against a configurable list of checks.
Therefore, JavaScript developers should configure their editors to use ESLint
to warn them of any such errors so they can be addressed. Since ESLint has a
ton of configuration options to choose from, links are provided below to the
options Horizon wants enforced along with the instructions for setting up
ESLint for Eclipse, Sublime Text, Notepad++ and WebStorm/PyCharm.
.sp
Instructions for setting up ESLint: \fI\%ESLint setup instructions\fP
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
ESLint is part of the automated unit tests performed by Jenkins. The
automated test use the default configurations, which are less strict than
the configurations we recommended to run in your local development
environment.
.UNINDENT
.UNINDENT
.SS CSS
.sp
Style guidelines for CSS are currently quite minimal. Do your best to make the
code readable and well\-organized. Two spaces are preferred for indentation
so as to match both the JavaScript and HTML files.
.SS JavaScript and CSS libraries
.sp
We do not bundle third\-party code in Horizon\(aqs source tree. Instead, we package
the required files as XStatic Python packages and add them as dependencies to
Horizon. In particular, when you need to add a new third\-party JavaScript or
CSS library to Horizon, follow those steps:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Check if the library is already packaged as Xstatic on PyPi, by searching
for the library name. If it already is, go to step 5. If it is, but not in
the right version, contact the original packager.
.IP 2. 3
Package the library as an Xstatic package by following the instructions in
Xstatic \fI\%documentation\fP\&.
.IP 3. 3
\fI\%Create a new repository on StackForge\fP\&. Use "xstatic\-core" and
"xstatic\-ptl" groups for the ACLs. Make sure to include the
\fBpublish\-to\-pypi\fP job.
.IP 4. 3
\fI\%Setup PyPi\fP to allow OpenStack to publish your package.
.IP 5. 3
\fI\%Tag your release\fP\&. That will cause it to be automatically packaged and
released to PyPi.
.IP 6. 3
Add the package to \fI\%global\-requirements\fP\&. Make sure to mention the license.
.IP 7. 3
Add the package to Horizon\(aqs \fBrequirements.txt\fP file, to its
\fBsettings.py\fP, and to the \fB_scripts.html\fP or \fB_stylesheets.html\fP
templates. Make sure to keep the order alphabetic.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBWARNING:\fP
.INDENT 0.0
.INDENT 3.5
Note that once a package is released, you can not "un\-release" it. You
should never attempt to modify, delete or rename a released package without
a lot of careful planning and feedback from all projects that use it.
.sp
For the purpose of fixing packaging mistakes, XStatic has the build number
mechanism. Simply fix the error, increment the build number and release the
newer package.
.UNINDENT
.UNINDENT
.SS HTML
.sp
Again, readability is paramount; however be conscientious of how the browser
will handle whitespace when rendering the output. Two spaces is the preferred
indentation style to match all front\-end code.
.SS Documentation
.sp
Horizon\(aqs documentation is written in reStructuredText (reST) and uses Sphinx
for additional parsing and functionality, and should follow standard practices
for writing reST. This includes:
.INDENT 0.0
.IP \(bu 2
Flow paragraphs such that lines wrap at 80 characters or less.
.IP \(bu 2
Use proper grammar, spelling, capitalization and punctuation at all times.
.IP \(bu 2
Make use of Sphinx\(aqs autodoc feature to document modules, classes
and functions. This keeps the docs close to the source.
.IP \(bu 2
Where possible, use Sphinx\(aqs cross\-reference syntax (e.g.
\fB:class:\(ga~horizon.foo.Bar\(ga\fP) when referring to other Horizon components.
The better\-linked our docs are, the easier they are to use.
.UNINDENT
.sp
Be sure to generate the documentation before submitting a patch for review.
Unexpected warnings often appear when building the documentation, and slight
reST syntax errors frequently cause links or cross\-references not to work
correctly.
.SS Conventions
.sp
Simply by convention, we have a few rules about naming:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
The term "project" is used in place of Keystone\(aqs "tenant" terminology
in all user\-facing text. The term "tenant" is still used in API code to
make things more obvious for developers.
.IP \(bu 2
The term "dashboard" refers to a top\-level dashboard class, and "panel" to
the sub\-items within a dashboard. Referring to a panel as a dashboard is
both confusing and incorrect.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Horizon\(aqs tests and you
.SS How to run the tests
.sp
Because Horizon is composed of both the \fBhorizon\fP app and the
\fBopenstack_dashboard\fP reference project, there are in fact two sets of unit
tests. While they can be run individually without problem, there is an easier
way:
.sp
Included at the root of the repository is the \fBrun_tests.sh\fP script
which invokes both sets of tests, and  optionally generates analyses on both
components in the process. This script is what Jenkins uses to verify the
stability of the project, so you should make sure you run it and it passes
before you submit any pull requests/patches.
.sp
To run the tests:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ ./run_tests.sh
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
It\(aqs also possible to \fBrun a subset of unit tests\fP\&.
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \fBref/run_tests\fP
Full reference for the \fBrun_tests.sh\fP script.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
By default running the Selenium tests will open your Firefox browser (you have
to install it first, else an error is raised), and you will be able to see the
tests actions.
If you want to run the suite headless, without being able to see them (as they
are ran on Jenkins), you can run the tests:
.INDENT 0.0
.INDENT 3.5
$ ./run_tests.sh \-\-with\-selenium \-\-selenium\-headless
.UNINDENT
.UNINDENT
.sp
Selenium will use a virtual display in this case, instead of your own. In order
to run the tests this way you have to install the dependency \fIxvfb\fP, like this:
.INDENT 0.0
.INDENT 3.5
$ sudo apt\-get install xvfb
.UNINDENT
.UNINDENT
.sp
for a Debian OS flavour, or for Fedora/Red Hat flavours:
.INDENT 0.0
.INDENT 3.5
$ sudo yum install xorg\-x11\-server\-Xvfb
.UNINDENT
.UNINDENT
.SS Writing tests
.sp
Horizon uses Django\(aqs unit test machinery (which extends Python\(aqs \fBunittest2\fP
library) as the core of its test suite. As such, all tests for the Python code
should be written as unit tests. No doctests please.
.sp
In general new code without unit tests will not be accepted, and every bugfix
\fImust\fP include a regression test.
.sp
For a much more in\-depth discussion of testing, see the \fBtesting topic
guide\fP\&.
.SS Horizon Plugin Registry
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Currently, Horizon plugins are responsible for their own compatibility.
Check the individual repos for information on support.
.UNINDENT
.UNINDENT
.TS
center;
|l|l|.
_
T{
Plugin
T}	T{
URL
T}
_
T{
Akanda RUG Extension
T}	T{
\fI\%https://github.com/stackforge/akanda\-horizon\fP
T}
_
T{
App Catalog UI
T}	T{
\fI\%https://github.com/openstack/app\-catalog\-ui\fP
T}
_
T{
Cerberus Dashboard
T}	T{
\fI\%https://github.com/stackforge/cerberus\-dashboard\fP
T}
_
T{
Cisco UI
T}	T{
\fI\%http://github.com/openstack/horizon\-cisco\-ui\fP
T}
_
T{
Cloudkitty Dashboard
T}	T{
\fI\%https://github.com/stackforge/cloudkitty\-dashboard\fP
T}
_
T{
Cue Dashboard
T}	T{
\fI\%https://github.com/openstack/cue\-dashboard\fP
T}
_
T{
Designate Dashboard
T}	T{
\fI\%https://github.com/openstack/designate\-dashboard\fP
T}
_
T{
Group Based Policy UI
T}	T{
\fI\%https://github.com/stackforge/group\-based\-policy\-ui\fP
T}
_
T{
Magnum UI
T}	T{
\fI\%http://github.com/openstack/magnum\-ui\fP
T}
_
T{
Manila UI
T}	T{
\fI\%http://github.com/openstack/manila\-ui\fP
T}
_
T{
Mistral Dashboard
T}	T{
\fI\%https://github.com/openstack/mistral\-dashboard\fP
T}
_
T{
Monasca UI
T}	T{
\fI\%https://github.com/stackforge/monasca\-ui\fP
T}
_
T{
Murano Dashboard
T}	T{
\fI\%http://github.com/openstack/murano\-dashboard\fP
T}
_
T{
Neutron LBaaS Dashboard
T}	T{
\fI\%https://github.com/openstack/neutron\-lbaas\-dashboard\fP
T}
_
T{
Tacker UI
T}	T{
\fI\%https://github.com/stackforge/tacker\-horizon\fP
T}
_
T{
Tuskar UI
T}	T{
\fI\%http://github.com/openstack/tuskar\-ui\fP
T}
_
.TE
.SS Topic Guides
.sp
Information on how to work with specific areas of Horizon can be found in
the following topic guides.
.SS Workflows Topic Guide
.sp
One of the most challenging aspects of building a compelling user experience
is crafting complex multi\-part workflows. Horizon\(aqs \fBworkflows\fP module
aims to bring that capability within everyday reach.
.INDENT 0.0
.INDENT 3.5
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
For detailed API information refer to the \fBWorkflows Reference
Guide\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Workflows
.sp
Workflows are complex forms with tabs, each workflow must consist of classes
extending the \fBWorkflow\fP,
\fBStep\fP and \fBAction\fP
.SS Complex example of a workflow
.sp
The following is a complex example of how data is exchanged between
urls, views, workflows and templates:
.INDENT 0.0
.IP 1. 3
In \fBurls.py\fP, we have the named parameter. E.g. \fBresource_class_id\fP\&.
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
RESOURCE_CLASS = r\(aq^(?P<resource_class_id>[^/]+)/%s$\(aq

urlpatterns = patterns(
\(aq\(aq,
url(RESOURCE_CLASS % \(aqupdate\(aq, UpdateView.as_view(), name=\(aqupdate\(aq))
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 2. 3
In \fBviews.py\fP, we pass data to the template and to the action(form)
(action can also pass data to the \fBget_context_data\fP method and to the
template).
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
class UpdateView(workflows.WorkflowView):
    workflow_class = UpdateResourceClass

    def get_context_data(self, **kwargs):
        context = super(UpdateView, self).get_context_data(**kwargs)
        # Data from URL are always in self.kwargs, here we pass the data
        # to the template.
        context["resource_class_id"] = self.kwargs[\(aqresource_class_id\(aq]
        # Data contributed by Workflow\(aqs Steps are in the
        # context[\(aqworkflow\(aq].context list. We can use that in the
        # template too.
        return context

    def _get_object(self, *args, **kwargs):
        # Data from URL are always in self.kwargs, we can use them here
        # to load our object of interest.
        resource_class_id = self.kwargs[\(aqresource_class_id\(aq]
        # Code omitted, this method should return some object obtained
        # from API.

    def get_initial(self):
        resource_class = self._get_object()
        # This data will be available in the Action\(aqs methods and
        # Workflow\(aqs handle method.
        # But only if the steps will depend on them.
        return {\(aqresource_class_id\(aq: resource_class.id,
                \(aqname\(aq: resource_class.name,
                \(aqservice_type\(aq: resource_class.service_type}
.ft P
.fi
.UNINDENT
.UNINDENT
.IP 3. 3
In \fBworkflows.py\fP we process the data, it is just more complex django
form.
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
class ResourcesAction(workflows.Action):
    # The name field will be automatically available in all action\(aqs
    # methods.
    # If we want this field to be used in the another Step or Workflow,
    # it has to be contributed by this step, then depend on in another
    # step.
    name = forms.CharField(max_length=255,
                           label=_("Testing Name"),
                           help_text="",
                           required=True)

    def handle(self, request, data):
        pass
        # If we want to use some data from the URL, the Action\(aqs step
        # has to depend on them. It\(aqs then available in
        # self.initial[\(aqresource_class_id\(aq] or data[\(aqresource_class_id\(aq].
        # In other words, resource_class_id has to be passed by view\(aqs
        # get_initial and listed in step\(aqs depends_on list.

        # We can also use here the data from the other steps. If we want
        # the data from the other step, the step needs to contribute the
        # data and the steps needs to be ordered properly.

class UpdateResources(workflows.Step):
    # This passes data from Workflow context to action methods
    # (handle, clean). Workflow context consists of URL data and data
    # contributed by other steps.
    depends_on = ("resource_class_id",)

    # By contributing, the data on these indexes will become available to
    # Workflow and to other Steps (if they will depend on them). Notice,
    # that the resources_object_ids key has to be manually added in
    # contribute method first.
    contributes = ("resources_object_ids", "name")

    def contribute(self, data, context):
        # We can obtain the http request from workflow.
        request = self.workflow.request
        if data:
            # Only fields defined in Action are automatically
            # available for contribution. If we want to contribute
            # something else, We need to override the contribute method
            # and manually add it to the dictionary.
            context["resources_object_ids"] =\e
                request.POST.getlist("resources_object_ids")

        # We have to merge new context with the passed data or let
        # the superclass do this.
        context.update(data)
        return context

class UpdateResourceClass(workflows.Workflow):
    default_steps = (UpdateResources,)

    def handle(self, request, data):
        pass
        # This method is called as last (after all Action\(aqs handle
        # methods). All data that are listed in step\(aqs \(aqcontributes=\(aq
        # and \(aqdepends_on=\(aq are available here.
        # It can be easier to have the saving logic only here if steps
        # are heavily connected or complex.

        # data["resources_object_ids"], data["name"] and
        # data["resources_class_id"] are available here.
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS DataTables Topic Guide
.sp
Horizon provides the \fBhorizon.tables\fP module to provide
a convenient, reusable API for building data\-driven displays and interfaces.
The core components of this API fall into three categories: \fBDataTables\fP,
\fBActions\fP, and \fBClass\-based Views\fP\&.
.INDENT 0.0
.INDENT 3.5
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
For a detailed API information check out the \fBDataTables Reference
Guide\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Tables
.sp
The majority of interface in a dashboard\-style interface ends up being
tabular displays of the various resources the dashboard interacts with.
The \fBDataTable\fP class exists so you don\(aqt have to
reinvent the wheel each time.
.SS Creating your own tables
.sp
Creating a table is fairly simple:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Create a subclass of \fBDataTable\fP\&.
.IP 2. 3
Define columns on it using \fBColumn\fP\&.
.IP 3. 3
Create an inner \fBMeta\fP class to contain the special options for
this table.
.IP 4. 3
Define any actions for the table, and add them to
\fBtable_actions\fP or
\fBrow_actions\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Examples of this can be found in any of the \fBtables.py\fP modules included
in the reference modules under \fBhorizon.dashboards\fP\&.
.SS Connecting a table to a view
.sp
Once you\(aqve got your table set up the way you like it, the next step is to
wire it up to a view. To make this as easy as possible Horizon provides the
\fBDataTableView\fP class\-based view which can be subclassed
to display your table with just a couple lines of code. At its simplest, it
looks like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from horizon import tables
from .tables import MyTable


class MyTableView(tables.DataTableView):
    table_class = MyTable
    template_name = "my_app/my_table_view.html"

    def get_data(self):
        return my_api.objects.list()
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
In the template you would just need to include the following to render the
table:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{{ table.render }}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
That\(aqs it! Easy, right?
.SS Actions
.sp
Actions comprise any manipulations that might happen on the data in the table
or the table itself. For example, this may be the standard object CRUD, linking
to related views based on the object\(aqs id, filtering the data in the table,
or fetching updated data when appropriate.
.SS When actions get run
.sp
There are two points in the request\-response cycle in which actions can
take place; prior to data being loaded into the table, and after the data
is loaded. When you\(aqre using one of the pre\-built class\-based views for
working with your tables the pseudo\-workflow looks like this:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
The request enters view.
.IP 2. 3
The table class is instantiated without data.
.IP 3. 3
Any "preemptive" actions are checked to see if they should run.
.IP 4. 3
Data is fetched and loaded into the table.
.IP 5. 3
All other actions are checked to see if they should run.
.IP 6. 3
If none of the actions have caused an early exit from the view,
the standard response from the view is returned (usually the
rendered table).
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The benefit of the multi\-step table instantiation is that you can use
preemptive actions which don\(aqt need access to the entire collection of data
to save yourself on processing overhead, API calls, etc.
.SS Basic actions
.sp
At their simplest, there are three types of actions: actions which act on the
data in the table, actions which link to related resources, and actions that
alter which data is displayed. These correspond to
\fBAction\fP, \fBLinkAction\fP, and
\fBFilterAction\fP\&.
.sp
Writing your own actions generally starts with subclassing one of those
action classes and customizing the designated attributes and methods.
.SS Shortcut actions
.sp
There are several common tasks for which Horizon provides pre\-built shortcut
classes. These include \fBBatchAction\fP, and
\fBDeleteAction\fP\&. Each of these abstracts away nearly
all of the boilerplate associated with writing these types of actions and
provides consistent error handling, logging, and user\-facing interaction.
.sp
It is worth noting that \fBBatchAction\fP and \fBDeleteAction\fP are extensions
of the standard \fBAction\fP class. Some \fBBatchAction\fP or \fBDeleteAction\fP
classes may cause some unrecoverable results, like deleted images or
unrecoverable instances. It may be helpful to specify specific help_text to
explain the concern to the user, such as "Deleted images are not recoverable".
.SS Preemptive actions
.sp
Action classes which have their \fBpreempt\fP
attribute set to \fBTrue\fP will be evaluated before any data is loaded into
the table. As such, you must be careful not to rely on any table methods that
require data, such as \fBget_object_display()\fP or
\fBget_object_by_id()\fP\&. The advantage of preemptive
actions is that you can avoid having to do all the processing, API calls, etc.
associated with loading data into the table for actions which don\(aqt require
access to that information.
.SS Policy checks on actions
.sp
The \fBpolicy_rules\fP attribute, when set, will
validate access to the action using the policy rules specified.  The attribute
is a list of scope/rule pairs.  Where the scope is the service type defining
the rule and the rule is a rule from the corresponding service policy.json
file.  The format of \fBhorizon.tables.Action.policy_rules\fP looks like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
(("identity", "identity:get_user"),)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Multiple checks can be made for the same action by merely adding more tuples
to the list.  The policy check will use information stored in the session
about the user and the result of
\fBget_policy_target()\fP (which can be overridden in
the derived action class) to determine if the user
can execute the action.  If the user does not have access to the action, the
action is not added to the table.
.sp
If \fBpolicy_rules\fP is not set, no policy checks
will be made to determine if the action should be visible and will be
displayed solely based on the result of
\fBallowed()\fP\&.
.sp
For more information on policy based Role Based Access Control see:
\fBHorizon Policy Enforcement (RBAC: Role Based Access Control)\fP\&.
.SS Table Cell filters (decorators)
.sp
DataTable displays lists of objects in rows and object attributes in cell.
How should we proceed, if we want to decorate some column, e.g. if we have
column \fBmemory\fP which returns a number e.g. 1024, and we want to show
something like 1024.00 GB inside table?
.SS Decorator pattern
.sp
The clear anti\-pattern is defining the new attributes on object like
\fBram_float_format_2_gb\fP or to tweak a DataTable in any way for displaying
purposes.
.sp
The cleanest way is to use \fBfilters\fP\&. Filters are decorators, following GOF
\fBDecorator pattern\fP\&. This way \fBDataTable logic\fP and \fBdisplayed object
logic\fP are correctly separated from \fBpresentation logic\fP of the object
inside of the various tables. And therefore the filters are reusable in all
tables.
.SS Filter function
.sp
Horizon DatablesTable takes a tuple of pointers to filter functions
or anonymous lambda functions. When displaying a \fBCell\fP, \fBDataTable\fP
takes \fBColumn\fP filter functions from left to right, using the returned value
of the previous function as a parameter of the following function. Then
displaying the returned value of the last filter function.
.sp
A valid filter function takes one parameter and returns the decorated value.
So e.g. these are valid filter functions
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
# Filter function.
def add_unit(v):
  return str(v) + " GB"

# Or filter lambda function.
lambda v: str(v) + " GB"

# This is also a valid definition of course, although for the change of the
# unit parameter, function has to be wrapped by lambda
# (e.g. floatformat function example below).
def add_unit(v, unit="GB"):
  return str(v) + " " + unit
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Using filters in DataTable column
.sp
DataTable takes tuple of filter functions, so e.g. this is valid decorating
of a value with float format and with unit
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ram = tables.Column(
    "ram",
    verbose_name=_(\(aqMemory\(aq),
    filters=(lambda v: floatformat(v, 2),
             add_unit))
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
It always takes tuple, so using only one filter would look like this
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
filters=(lambda v: floatformat(v, 2),)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The decorated parameter doesn\(aqt have to be only a string or number, it can
be anything e.g. list or an object. So decorating of object, that has
attributes value and unit would look like this
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ram = tables.Column(
        "ram",
        verbose_name=_(\(aqMemory\(aq),
        filters=(lambda x: getattr(x, \(aqvalue\(aq, \(aq\(aq) +
                 " " + getattr(x, \(aqunit\(aq, \(aq\(aq),))
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Available filters
.sp
There are a load of filters, that can be used, defined in django already:
\fI\%https://github.com/django/django/blob/master/django/template/defaultfilters.py\fP
.sp
So it\(aqs enough to just import and use them, e.g.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.template import defaultfilters as filters

# code omitted
filters=(filters.yesno, filters.capfirst)


from django.template.defaultfilters import timesince
from django.template.defaultfilters import title

# code omitted
filters=(parse_isotime, timesince)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Inline editing
.sp
Table cells can be easily upgraded with in\-line editing. With use of
django.form.Field, we are able to run validations of the field and correctly
parse the data. The updating process is fully encapsulated into table
functionality, communication with the server goes through AJAX in JSON format.
The javascript wrapper for inline editing allows each table cell that has
in\-line editing available to:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Refresh itself with new data from the server.
.IP 2. 3
Display in edit mod.
.IP 3. 3
Send changed data to server.
.IP 4. 3
Display validation errors.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
There are basically 3 things that need to be defined in the table in order
to enable in\-line editing.
.SS Fetching the row data
.sp
Defining an \fBget_data\fP method in a class inherited from \fBtables.Row\fP\&.
This method takes care of fetching the row data. This class has to be then
defined in the table Meta class as \fBrow_class = UpdateRow\fP\&.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class UpdateRow(tables.Row):
    # this method is also used for automatic update of the row
    ajax = True

    def get_data(self, request, project_id):
        # getting all data of all row cells
        project_info = api.keystone.tenant_get(request, project_id,
                                               admin=True)
        return project_info
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Updating changed cell data
.sp
Define an \fBupdate_cell\fP method in the class inherited from
\fBtables.UpdateAction\fP\&. This method takes care of saving the data of the
table cell. There can be one class for every cell thanks to the
\fBcell_name\fP parameter. This class is then defined in tables column as
\fBupdate_action=UpdateCell\fP, so each column can have its own updating
method.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class UpdateCell(tables.UpdateAction):
    def allowed(self, request, project, cell):
        # Determines whether given cell or row will be inline editable
        # for signed in user.
        return api.keystone.keystone_can_edit_project()

    def update_cell(self, request, project_id, cell_name, new_cell_value):
        # in\-line update project info
        try:
            project_obj = datum
            # updating changed value by new value
            setattr(project_obj, cell_name, new_cell_value)

            # sending new attributes back to API
            api.keystone.tenant_update(
                request,
                project_id,
                name=project_obj.name,
                description=project_obj.description,
                enabled=project_obj.enabled)

        except Conflict:
            # Validation error for naming conflict, raised when user
            # choose the existing name. We will raise a
            # ValidationError, that will be sent back to the client
            # browser and shown inside of the table cell.
            message = _("This name is already taken.")
            raise ValidationError(message)
        except:
            # Other exception of the API just goes through standard
            # channel
            exceptions.handle(request, ignore=True)
            return False
        return True
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Defining a form_field for each Column that we want to be in\-line edited.
.sp
Form field should be \fBdjango.form.Field\fP instance, so we can use django
validations and parsing of the values sent by POST (in example validation
\fBrequired=True\fP and correct parsing of the checkbox value from the POST
data).
.sp
Form field can be also \fBdjango.form.Widget\fP class, if we need to just
display the form widget in the table and we don\(aqt need Field functionality.
.sp
Then connecting \fBUpdateRow\fP and \fBUpdateCell\fP classes to the table.
.sp
Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class TenantsTable(tables.DataTable):
    # Adding html text input for inline editing, with required validation.
    # HTML form input will have a class attribute tenant\-name\-input, we
    # can define here any HTML attribute we need.
    name = tables.Column(\(aqname\(aq, verbose_name=_(\(aqName\(aq),
                         form_field=forms.CharField(required=True),
                         form_field_attributes={\(aqclass\(aq:\(aqtenant\-name\-input\(aq},
                         update_action=UpdateCell)

    # Adding html textarea without required validation.
    description = tables.Column(lambda obj: getattr(obj, \(aqdescription\(aq, None),
                                verbose_name=_(\(aqDescription\(aq),
                                form_field=forms.CharField(
                                    widget=forms.Textarea(),
                                    required=False),
                                update_action=UpdateCell)

    # Id will not be inline edited.
    id = tables.Column(\(aqid\(aq, verbose_name=_(\(aqProject ID\(aq))

    # Adding html checkbox, that will be shown inside of the table cell with
    # label
    enabled = tables.Column(\(aqenabled\(aq, verbose_name=_(\(aqEnabled\(aq), status=True,
                            form_field=forms.BooleanField(
                                label=_(\(aqEnabled\(aq),
                                required=False),
                            update_action=UpdateCell)

    class Meta:
        name = "tenants"
        verbose_name = _("Projects")
        # Connection to UpdateRow, so table can fetch row data based on
        # their primary key.
        row_class = UpdateRow
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Horizon Policy Enforcement (RBAC: Role Based Access Control)
.SS Introduction
.sp
Horizon\(aqs policy enforcement builds on the oslo\-incubator policy engine.
The basis of which is \fBopenstack_dashboard/openstack/common/policy.py\fP\&.
Services in OpenStack use the oslo policy engine to define policy rules
to limit access to APIs based primarily on role grants and resource
ownership.
.sp
The Keystone v3 API provides an interface for creating/reading/updating
policy files in the keystone database. However, at this time services
do not load the policy files into Keystone. Thus, the implementation in
Horizon is based on copies of policy.json files found in the service\(aqs
source code. The long\-term goal is to read/utilize/update these policy
files in Horizon.
.sp
The service rules files are loaded into the policy engine to determine
access rights to actions and service APIs.
.SS Horizon Settings
.sp
There are a few settings that must be in place for the Horizon policy
engine to work.
.SS \fBPOLICY_FILES_PATH\fP
.sp
Default:  \fBos.path.join(ROOT_PATH, "conf")\fP
.sp
Specifies where service based policy files are located.  These are used to
define the policy rules actions are verified against.  This value must contain
the files listed in \fBPOLICY_FILES\fP or all policy checks will pass.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The path to deployment specific policy files can be specified in
\fBlocal_settings.py\fP to override the default location.
.UNINDENT
.UNINDENT
.SS \fBPOLICY_FILES\fP
.sp
Default: \fB{\(aqidentity\(aq: \(aqkeystone_policy.json\(aq, \(aqcompute\(aq: \(aqnova_policy.json\(aq}\fP
.sp
This should essentially be the mapping of the contents of \fBPOLICY_FILES_PATH\fP
to service types.  When policy.json files are added to the directory
\fBPOLICY_FILES_PATH\fP, they should be included here too. Without this mapping,
there is no way to map service types with policy rules, thus two policy.json
files containing a "default" rule would be ambiguous.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Deployment specific policy files can be specified in \fBlocal_settings.py\fP
to override the default policy files. It is imperative that these policy
files match those deployed in the target OpenStack installation. Otherwise,
the displayed actions and the allowed action will not match.
.UNINDENT
.UNINDENT
.SS \fBPOLICY_CHECK_FUNCTION\fP
.sp
Default: \fBpolicy.check\fP
.sp
This value should not be changed, although removing it would be a means to
bypass all policy checks.
.SS How user\(aqs roles are determined
.sp
Each policy check uses information about the user stored on the request to
determine the user\(aqs roles. This information was extracted from the scoped
token received from Keystone when authenticating.
.sp
Entity ownership is also a valid role. To verify access to specific entities
like a project, the target must be specified. See the section
\fIrule targets\fP later in this document.
.SS How to Utilize RBAC
.sp
The primary way to add role based access control checks to panels is in the
definition of table actions. When implementing a derived action class,
setting the \fBpolicy_rules\fP attribute to valid
policy rules will force a policy check before the
\fBhorizon.tables.Action.allowed()\fP method is called on the action. These
rules are defined in the policy files pointed to by \fBPOLICY_PATH\fP and
\fBPOLICY_FILES\fP\&. The rules are role based, where entity owner is also a
role. The format for the \fBpolicy_rules\fP is a list of two item tuples. The
first component of the tuple is the scope of the policy rule, this is the
service type. This informs the policy engine which policy file to reference.
The second component is the rule to enforce from the policy file specified by
the scope. An example tuple is:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
("identity", "identity:get_user")
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
x tuples can be added to enforce x rules.
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
If a rule specified is not found in the policy file, the policy check
will return False and the action will not be allowed.
.UNINDENT
.UNINDENT
.sp
The secondary way to add a role based check is to directly use the
\fBcheck()\fP method.  The method takes a list
of actions, same format as the \fBpolicy_rules\fP
attribute detailed above; the current request object; and a dictionary of
action targets. This is the method that \fBhorizon.tables.Action\fP class
utilizes.  Examples look like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from openstack_dashboard import policy

allowed = policy.check((("identity", "identity:get_user"),
                       ("identity", "identity:get_project"),), request)

can_see = policy.check((("identity", "identity:get_user"),), request,
                       target={"domain_id": domainId})
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Any time multiple rules are specified in a single \fIpolicy.check\fP method
call, the result is the logical \fIand\fP of each rule check. So, if any
rule fails verification, the result is \fIFalse\fP\&.
.UNINDENT
.UNINDENT
.SS Rule Targets
.sp
Some rules allow access if the user owns the entity. Policy check targets
specify particular entities to check for user ownership. The target parameter
to the \fBcheck()\fP method is a simple dictionary.
For instance, the target for checking access a project looks like:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{"project_id": "0905760626534a74979afd3f4a9d67f1"}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If the value matches the \fBproject_id\fP to which the user\(aqs token is scoped,
then access is allowed.
.sp
When deriving the \fBhorizon.tables.Action\fP class for use in a table, if
a policy check is desired for a particular target, the implementer should
override the \fBhorizon.tables.Action.get_policy_target()\fP method. This
allows a programmatic way to specify the target based on the current datum. The
value returned should be the target dictionary.
.SS Testing Topic Guide
.sp
Having good tests in place is absolutely critical for ensuring a stable,
maintainable codebase. Hopefully that doesn\(aqt need any more explanation.
.sp
However, what defines a "good" test is not always obvious, and there are
a lot of common pitfalls that can easily shoot your test suite in the
foot.
.sp
If you already know everything about testing but are fed up with trying to
debug why a specific test failed, you can skip the intro and jump
straight to \fIdebugging_unit_tests\fP\&.
.SS An overview of testing
.sp
There are three main types of tests, each with their associated pros and cons:
.SS Unit tests
.sp
These are isolated, stand\-alone tests with no external dependencies. They are
written from the perspective of "knowing the code", and test the assumptions
of the codebase and the developer.
.sp
Pros:
.INDENT 0.0
.IP \(bu 2
Generally lightweight and fast.
.IP \(bu 2
Can be run anywhere, anytime since they have no external dependencies.
.UNINDENT
.sp
Cons:
.INDENT 0.0
.IP \(bu 2
Easy to be lax in writing them, or lazy in constructing them.
.IP \(bu 2
Can\(aqt test interactions with live external services.
.UNINDENT
.SS Functional tests
.sp
These are generally also isolated tests, though sometimes they may interact
with other services running locally. The key difference between functional
tests and unit tests, however, is that functional tests are written from the
perspective of the user (who knows nothing about the code) and only knows
what they put in and what they get back. Essentially this is a higher\-level
testing of "does the result match the spec?".
.sp
Pros:
.INDENT 0.0
.IP \(bu 2
Ensures that your code \fIalways\fP meets the stated functional requirements.
.IP \(bu 2
Verifies things from an "end user" perspective, which helps to ensure
a high\-quality experience.
.IP \(bu 2
Designing your code with a functional testing perspective in mind helps
keep a higher\-level viewpoint in mind.
.UNINDENT
.sp
Cons:
.INDENT 0.0
.IP \(bu 2
Requires an additional layer of thinking to define functional requirements
in terms of inputs and outputs.
.IP \(bu 2
Often requires writing a separate set of tests and/or using a different
testing framework from your unit tests.
.IP \(bu 2
Doesn\(aqt offer any insight into the quality or status of the underlying code,
only verifies that it works or it doesn\(aqt.
.UNINDENT
.SS Integration Tests
.sp
This layer of testing involves testing all of the components that your
codebase interacts with or relies on in conjunction. This is equivalent to
"live" testing, but in a repeatable manner.
.sp
Pros:
.INDENT 0.0
.IP \(bu 2
Catches \fImany\fP bugs that unit and functional tests will not.
.IP \(bu 2
Doesn\(aqt rely on assumptions about the inputs and outputs.
.IP \(bu 2
Will warn you when changes in external components break your code.
.UNINDENT
.sp
Cons:
.INDENT 0.0
.IP \(bu 2
Difficult and time\-consuming to create a repeatable test environment.
.IP \(bu 2
Did I mention that setting it up is a pain?
.UNINDENT
.SS So what should I write?
.sp
A few simple guidelines:
.INDENT 0.0
.IP 1. 3
Every bug fix should have a regression test. Period.
.IP 2. 3
When writing a new feature, think about writing unit tests to verify
the behavior step\-by\-step as you write the feature. Every time you\(aqd
go to run your code by hand and verify it manually, think "could I
write a test to do this instead?". That way when the feature is done
and you\(aqre ready to commit it you\(aqve already got a whole set of tests
that are more thorough than anything you\(aqd write after the fact.
.IP 3. 3
Write tests that hit every view in your application. Even if they
don\(aqt assert a single thing about the code, it tells you that your
users aren\(aqt getting fatal errors just by interacting with your code.
.UNINDENT
.SS What makes a good unit test?
.sp
Limiting our focus just to unit tests, there are a number of things you can
do to make your unit tests as useful, maintainable, and unburdensome as
possible.
.SS Test data
.sp
Use a single, consistent set of test data. Grow it over time, but do everything
you can not to fragment it. It quickly becomes unmaintainable and perniciously
out\-of\-sync with reality.
.sp
Make your test data as accurate to reality as possible. Supply \fIall\fP the
attributes of an object, provide objects in all the various states you may want
to test.
.sp
If you do the first suggestion above \fIfirst\fP it makes the second one far less
painful. Write once, use everywhere.
.sp
To make your life even easier, if your codebase doesn\(aqt have a built\-in
ORM\-like function to manage your test data you can consider building (or
borrowing) one yourself. Being able to do simple retrieval queries on your
test data is incredibly valuable.
.SS Mocking
.sp
Mocking is the practice of providing stand\-ins for objects or pieces of code
you don\(aqt need to test. While convenient, they should be used with \fIextreme\fP
caution.
.sp
Why? Because overuse of mocks can rapidly land you in a situation where you\(aqre
not testing any real code. All you\(aqve done is verified that your mocking
framework returns what you tell it to. This problem can be very tricky to
recognize, since you may be mocking things in \fBsetUp\fP methods, other modules,
etc.
.sp
A good rule of thumb is to mock as close to the source as possible. If you have
a function call that calls an external API in a view , mock out the external
API, not the whole function. If you mock the whole function you\(aqve suddenly
lost test coverage for an entire chunk of code \fIinside\fP your codebase. Cut the
ties cleanly right where your system ends and the external world begins.
.sp
Similarly, don\(aqt mock return values when you could construct a real return
value of the correct type with the correct attributes. You\(aqre just adding
another point of potential failure by exercising your mocking framework instead
of real code. Following the suggestions for testing above will make this a lot
less burdensome.
.SS Assertions and verification
.sp
Think long and hard about what you really want to verify in your unit test. In
particular, think about what custom logic your code executes.
.sp
A common pitfall is to take a known test object, pass it through your code,
and then verify the properties of that object on the output. This is all well
and good, except if you\(aqre verifying properties that were untouched by your
code. What you want to check are the pieces that were \fIchanged\fP, \fIadded\fP, or
\fIremoved\fP\&. Don\(aqt check the object\(aqs id attribute unless you have reason to
suspect it\(aqs not the object you started with. But if you added a new attribute
to it, be damn sure you verify that came out right.
.sp
It\(aqs also very common to avoid testing things you really care about because
it\(aqs more difficult. Verifying that the proper messages were displayed to the
user after an action, testing for form errors, making sure exception handling
is tested... these types of things aren\(aqt always easy, but they\(aqre extremely
necessary.
.sp
To that end, Horizon includes several custom assertions to make these tasks
easier. \fBassertNoFormErrors()\fP,
\fBassertMessageCount()\fP, and
\fBassertNoMessages()\fP all exist for exactly
these purposes. Moreover, they provide useful output when things go wrong so
you\(aqre not left scratching your head wondering why your view test didn\(aqt
redirect as expected when you posted a form.
.SS Debugging Unit Tests
.SS Tips and tricks
.INDENT 0.0
.IP 1. 3
Use \fBassertNoFormErrors()\fP
immediately after your \fBclient.post\fP call for tests that handle form views.
This will immediately fail if your form POST failed due to a validation error
and tell you what the error was.
.IP 2. 3
Use \fBassertMessageCount()\fP and
\fBassertNoMessages()\fP when a piece of code
is failing inexplicably. Since the core error handlers attach user\-facing
error messages (and since the core logging is silenced during test runs)
these methods give you the dual benefit of verifying the output you expect
while clearly showing you the problematic error message if they fail.
.IP 3. 3
Use Python\(aqs \fBpdb\fP module liberally. Many people don\(aqt realize it works
just as well in a test case as it does in a live view. Simply inserting
\fBimport pdb; pdb.set_trace()\fP anywhere in your codebase will drop the
interpreter into an interactive shell so you can explore your test
environment and see which of your assumptions about the code isn\(aqt,
in fact, flawlessly correct.
.IP 4. 3
If the error is in the Selenium test suite, you\(aqre likely getting very little
information about the error. To increase the information provided to you,
edit \fBhorizon/test/settings.py\fP to set \fBDEBUG = True\fP and set the logging
level to \(aqDEBUG\(aq for the default \(aqtest\(aq logger. Also, add a logger config
for Django:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
     },
     \(aqloggers\(aq: {
+        \(aqdjango\(aq: {
+            \(aqhandlers\(aq: [\(aqtest\(aq],
+            \(aqpropagate\(aq: False,
+        },
         \(aqdjango.db.backends\(aq: {
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.SS Common pitfalls
.sp
There are a number of typical (and non\-obvious) ways to break the unit tests.
Some common things to look for:
.INDENT 0.0
.IP 1. 3
Make sure you stub out the method exactly as it\(aqs called in the code
being tested. For example, if your real code calls
\fBapi.keystone.tenant_get\fP, stubbing out \fBapi.tenant_get\fP (available
for legacy reasons) will fail.
.IP 2. 3
When defining the expected input to a stubbed call, make sure the
arguments are \fIidentical\fP, this includes \fBstr\fP vs. \fBint\fP differences.
.IP 3. 3
Make sure your test data are completely in line with the expected inputs.
Again, \fBstr\fP vs. \fBint\fP or missing properties on test objects will
kill your tests.
.IP 4. 3
Make sure there\(aqs nothing amiss in your templates (particularly the
\fB{% url %}\fP tag and its arguments). This often comes up when refactoring
views or renaming context variables. It can easily result in errors that
you might not stumble across while clicking around the development server.
.IP 5. 3
Make sure you\(aqre not redirecting to views that no longer exist, e.g.
the \fBindex\fP view for a panel that got combined (such as instances &
volumes).
.IP 6. 3
Make sure your mock calls are in order before calling \fBmox.ReplayAll\fP\&.
The order matters.
.IP 7. 3
Make sure you repeat any stubbed out method calls that happen more than
once. They don\(aqt automatically repeat, you have to explicitly define them.
While this is a nuisance, it makes you acutely aware of how many API
calls are involved in a particular function.
.UNINDENT
.SS Understanding the output from \fBmox\fP
.sp
Horizon uses \fBmox\fP as its mocking framework of choice, and while it
offers many nice features, its output when a test fails can be quite
mysterious.
.SS Unexpected Method Call
.sp
This occurs when you stubbed out a piece of code, and it was subsequently
called in a way that you didn\(aqt specify it would be. There are two reasons
this tends to come up:
.INDENT 0.0
.IP 1. 3
You defined the expected call, but a subtle difference crept in. This
may be a string versus integer difference, a string versus unicode
difference, a slightly off date/time, or passing a name instead of an id.
.IP 2. 3
The method is actually being called \fImultiple times\fP\&. Since mox uses
a call stack internally, it simply pops off the expected method calls to
verify them. That means once a call is used once, it\(aqs gone. An easy way
to see if this is the case is simply to copy and paste your method call a
second time to see if the error changes. If it does, that means your method
is being called more times than you think it is.
.UNINDENT
.SS Expected Method Never Called
.sp
This one is the opposite of the unexpected method call. This one means you
told mox to expect a call and it didn\(aqt happen. This is almost always the
result of an error in the conditions of the test. Using the
\fBassertNoFormErrors()\fP and
\fBassertMessageCount()\fP will make it readily
apparent what the problem is in the majority of cases. If not, then use \fBpdb\fP
and start interrupting the code flow to see where things are getting off track.
.SS Tutorial: Adding a complex action to a table
.sp
This tutorial covers how to add a more complex action to a table, one that requires
an action and form definitions, as well as changes to the view, urls, and table.
.sp
This tutorial assumes you have already completed \fBBuilding a Dashboard using
Horizon\fP\&. If not, please do so now as we will be modifying the
files created there.
.sp
This action will create a snapshot of the instance. When the action is taken,
it will display a form that will allow the user to enter a snapshot name,
and will create that snapshot when the form is closed using the \fBCreate snapshot\fP
button.
.SS Defining the view
.sp
To define the view, we must create a view class, along with the template (\fBHTML\fP)
file and the form class for that view.
.SS The template file
.sp
The template file contains the HTML that will be used to show the view.
.sp
Create a \fBcreate_snapshot.html\fP file under the \fBmypanel/templates/mypanel\fP
directory and add the following code:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends \(aqbase.html\(aq %}
{% load i18n %}
{% block title %}{% trans "Create Snapshot" %}{% endblock %}

{% block page_header %}
  {% include "horizon/common/_page_header.html" with title=_("Create a Snapshot") %}
{% endblock page_header %}

{% block main %}
    {% include \(aqmydashboard/mypanel/_create_snapshot.html\(aq %}
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
As you can see, the main body will be defined in \fB_create_snapshot.html\fP,
so we must also create that file under the \fBmypanel/templates/mypanel\fP
directory. It should contain the following code:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
{% extends "horizon/common/_modal_form.html" %}
{% load i18n %}

{% block modal\-body\-right %}
    <h3>{% trans "Description:" %}</h3>
    <p>{% trans "Snapshots preserve the disk state of a running instance." %}</p>
{% endblock %}
.ft P
.fi
.UNINDENT
.UNINDENT
.SS The form
.sp
Horizon provides a \fBSelfHandlingForm\fP class which simplifies
some of the details involved in creating a form. Our form will derive from this
class, adding a character field to allow the user to specify a name for the
snapshot, and handling the successful closure of the form by calling the nova
api to create the snapshot.
.sp
Create the \fBforms.py\fP file under the \fBmypanel\fP directory and add the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.core.urlresolvers import reverse
from django.utils.translation import ugettext_lazy as _

from horizon import exceptions
from horizon import forms

from openstack_dashboard import api


class CreateSnapshot(forms.SelfHandlingForm):
    instance_id = forms.CharField(label=_("Instance ID"),
                                  widget=forms.HiddenInput(),
                                  required=False)
    name = forms.CharField(max_length=255, label=_("Snapshot Name"))

    def handle(self, request, data):
        try:
            snapshot = api.nova.snapshot_create(request,
                                                data[\(aqinstance_id\(aq],
                                                data[\(aqname\(aq])
            return snapshot
        except Exception:
            exceptions.handle(request,
                              _(\(aqUnable to create snapshot.\(aq))
.ft P
.fi
.UNINDENT
.UNINDENT
.SS The view
.sp
Now, the view will tie together the template and the form. Horizon provides a
\fBModalFormView\fP class which simplifies the creation of a
view that will contain a modal form.
.sp
Open the \fBviews.py\fP file under the \fBmypanel\fP directory and add the code
for the CreateSnapshotView and the necessary imports. The complete
file should now look something like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.core.urlresolvers import reverse
from django.core.urlresolvers import reverse_lazy
from django.utils.translation import ugettext_lazy as _

from horizon import tabs
from horizon import exceptions
from horizon import forms

from horizon.utils import memoized

from openstack_dashboard import api

from openstack_dashboard.dashboards.mydashboard.mypanel \e
    import forms as project_forms

from openstack_dashboard.dashboards.mydashboard.mypanel \e
    import tabs as mydashboard_tabs


class IndexView(tabs.TabbedTableView):
    tab_group_class = mydashboard_tabs.MypanelTabs
    # A very simple class\-based view...
    template_name = \(aqmydashboard/mypanel/index.html\(aq

    def get_data(self, request, context, *args, **kwargs):
        # Add data to the context here...
        return context


class CreateSnapshotView(forms.ModalFormView):
    form_class = project_forms.CreateSnapshot
    template_name = \(aqmydashboard/mypanel/create_snapshot.html\(aq
    success_url = reverse_lazy("horizon:project:images:index")
    modal_id = "create_snapshot_modal"
    modal_header = _("Create Snapshot")
    submit_label = _("Create Snapshot")
    submit_url = "horizon:mydashboard:mypanel:create_snapshot"

    @memoized.memoized_method
    def get_object(self):
        try:
            return api.nova.server_get(self.request,
                                       self.kwargs["instance_id"])
        except Exception:
            exceptions.handle(self.request,
                              _("Unable to retrieve instance."))

    def get_initial(self):
        return {"instance_id": self.kwargs["instance_id"]}

    def get_context_data(self, **kwargs):
        context = super(CreateSnapshotView, self).get_context_data(**kwargs)
        instance_id = self.kwargs[\(aqinstance_id\(aq]
        context[\(aqinstance_id\(aq] = instance_id
        context[\(aqinstance\(aq] = self.get_object()
        context[\(aqsubmit_url\(aq] = reverse(self.submit_url, args=[instance_id])
        return context
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Adding the url
.sp
We must add the url for our new view.  Open the \fBurls.py\fP file under
the \fBmypanel\fP directory and add the following as a new url pattern:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
url(r\(aq^(?P<instance_id>[^/]+)/create_snapshot/$\(aq,
    views.CreateSnapshotView.as_view(),
    name=\(aqcreate_snapshot\(aq),
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The complete \fBurls.py\fP file should look like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.conf.urls import patterns
from django.conf.urls import url

from openstack_dashboard.dashboards.mydashboard.mypanel import views


urlpatterns = patterns(\(aq\(aq,
    url(r\(aq^$\(aq,
        views.IndexView.as_view(), name=\(aqindex\(aq),
    url(r\(aq^(?P<instance_id>[^/]+)/create_snapshot/$\(aq,
        views.CreateSnapshotView.as_view(),
        name=\(aqcreate_snapshot\(aq),
)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Define the action
.sp
Horizon provides a \fBLinkAction\fP class which simplifies
adding an action which can be used to display another view.
.sp
We will add a link action to the table that will be accessible from each row
in the table. The action will use the view defined above to create a snapshot
of the instance represented by the row in the table.
.sp
To do this, we must edit the \fBtables.py\fP file under the \fBmypanel\fP directory
and add the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
def is_deleting(instance):
    task_state = getattr(instance, "OS\-EXT\-STS:task_state", None)
    if not task_state:
        return False
    return task_state.lower() == "deleting"


class CreateSnapshotAction(tables.LinkAction):
    name = "snapshot"
    verbose_name = _("Create Snapshot")
    url = "horizon:mydashboard:mypanel:create_snapshot"
    classes = ("ajax\-modal",)
    icon = "camera"

    # This action should be disabled if the instance
    # is not active, or the instance is being deleted
    def allowed(self, request, instance=None):
        return instance.status in ("ACTIVE") \e
            and not is_deleting(instance)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
We must also add our new action as a row action for the table:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
row_actions = (CreateSnapshotAction,)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The complete \fBtables.py\fP file should look like this:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
from django.utils.translation import ugettext_lazy as _

from horizon import tables


def is_deleting(instance):
    task_state = getattr(instance, "OS\-EXT\-STS:task_state", None)
    if not task_state:
        return False
    return task_state.lower() == "deleting"


class CreateSnapshotAction(tables.LinkAction):
    name = "snapshot"
    verbose_name = _("Create Snapshot")
    url = "horizon:mydashboard:mypanel:create_snapshot"
    classes = ("ajax\-modal",)
    icon = "camera"

    def allowed(self, request, instance=None):
        return instance.status in ("ACTIVE") \e
            and not is_deleting(instance)


class MyFilterAction(tables.FilterAction):
    name = "myfilter"


class InstancesTable(tables.DataTable):
    name = tables.Column("name", verbose_name=_("Name"))
    status = tables.Column("status", verbose_name=_("Status"))
    zone = tables.Column(\(aqavailability_zone\(aq, verbose_name=_("Availability Zone"))
    image_name = tables.Column(\(aqimage_name\(aq, verbose_name=_("Image Name"))

    class Meta:
        name = "instances"
        verbose_name = _("Instances")
        table_actions = (MyFilterAction,)
        row_actions = (CreateSnapshotAction,)
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Run and check the dashboard
.sp
We must once again run horizon to verify our dashboard is working:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-runserver 0.0.0.0:8877
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Go to \fBhttp://<your server>:8877\fP using a browser. After login as an admin,
display \fBMy Panel\fP to see the \fBInstances\fP table. For every \fBACTIVE\fP
instance in the table, there will be a \fBCreate Snapshot\fP action on the row.
Click on \fBCreate Snapshot\fP, enter a snapshot name in the form that is shown,
then click to close the form. The \fBProject Images\fP view should be shown with
the new snapshot added to the table.
.SS Conclusion
.sp
What you\(aqve learned here is the fundamentals of how to add a table action that
requires a form for data entry. This can easily be expanded from creating a
snapshot to other API calls that require more complex forms to gather the
necessary information.
.sp
If you have feedback on how this tutorial could be improved, please feel free
to submit a bug against \fBHorizon\fP in \fI\%launchpad\fP\&.
.INDENT 0.0
.INDENT 3.5
.UNINDENT
.UNINDENT
.SS AngularJS Topic Guide
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This guide is a work in progress. It has been uploaded to encourage faster
reviewing and code development in Angular, and to help the community
standardize on a set of guidelines. There are notes inline on sections
that are likely to change soon, and the docs will be updated promptly
after any changes.
.UNINDENT
.UNINDENT
.SS Getting Started
.sp
The tooling for AngularJS testing and code linting relies on npm, the
node package manager, and thus relies on Node.js. While it is not a
prerequisite to developing with Horizon, it is advisable to install Node.js,
either through \fI\%downloading\fP or
\fI\%via a package manager\fP\&.
.sp
Once you have npm available on your system, run \fBnpm install\fP from the
horizon root directory.
.SS Code Style
.sp
We currently use the \fI\%Angular Style Guide\fP by John Papa as reference material.
When reviewing AngularJS code, it is helpful to link directly to the style
guide to reinforce a point, e.g.
\fI\%https://github.com/johnpapa/angular\-styleguide#style\-y024\fP
.SS ESLint
.sp
ESLint is a tool for identifying and reporting on patterns in your JS code, and
is part of the automated tests run by Jenkins. You can run ESLint from the
horizon root directory with \fBnpm run lint\fP, or alternatively on a specific
directory or file with \fBeslint file.js\fP\&.
.sp
Horizon includes a \fI\&.eslintrc\fP in its root directory, that is used by the
local tests. An explanation of the options, and details of others you may want
to use, can be found in the
\fI\%ESLint user guide\fP\&.
.SS Application Structure
.sp
OpenStack Dashboard is an example of a Horizon\-based Angular application. Other
applications built on the Horizon framework can follow a similar structure. It
is composed of two key Angular modules:
.INDENT 0.0
.TP
.B \fBapp.module.js\fP \- The root of the application. Defines the modules required by
the application, and includes modules from its pluggable dashboards.
.TP
.B \fBframework.module.js\fP \- Reusable Horizon components. It is one of the
application dependencies.
.UNINDENT
.SS File Structure
.sp
Horizon has three kinds of angular code:
.INDENT 0.0
.IP 1. 3
Specific to one dashboard in the OpenStack Dashboard application
.IP 2. 3
Specific to the OpenStack Dashboard application, but reusable by multiple
dashboards
.IP 3. 3
Reusable by any application based on the Horizon framework
.UNINDENT
.sp
When adding code to horizon, consider whether it is dashboard\-specific or should be
broken out as a reusable utility or widget.
.SS Code specific to one dashboard
.sp
Code that isn\(aqt shared beyond a single dashboard is placed in
\fBopenstack_dashboard/dashboards/mydashboard/static\fP\&. Entire dashboards may be
enabled or disabled using Horizon\(aqs plugin mechanism. Therefore no dashboards
other than \fBmydashboard\fP can safely use this code.
.sp
The \fBopenstack_dashboard/dashboards/static\fP directory structure determines
how the code is deployed and matches the module structure.
For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
openstack_dashboard/dashboards/identity/static/dashboard/identity/
├── identity.module.js
├── identity.module.spec.js
└── identity.scss
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Because the code is in \fBopenstack_dashboard/dashboards/identity\fP we know it
is specific to just the \fBidentity\fP dashboard and not used by any others.
.SS Code shared by multiple dashboards
.sp
Views or utilities needed by multiple dashboards are placed in
\fBopenstack_dashboard/static/app\fP\&. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
openstack_dashboard/static/app/core/cloud\-services/
├── cloud\-services.js
└── cloud\-services.spec.js
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fBcloud\-services\fP module is used by panels in multiple dashboards. It
cannot be placed within \fBopenstack_dashboard/dashboards/mydashboard\fP because
disabling that one dashboard would break others. Therefore, it is included as
part of the application \fBcore\fP module. Code in \fBapp/\fP is guaranteed to
always be present, even if all other dashboards are disabled.
.SS Reusable components
.sp
Finally, components that are easily reused by any application are placed in
\fBhorizon/static/framework/\fP\&. These do not contain URLs or business logic
that is specific to any application (even the OpenStack Dashboard application).
.sp
The modal directive \fBhorizon/static/framework/widgets/modal/\fP is a good
example of a reusable component.
.SS One folder per component
.sp
Each component should have its own folder, with the code broken up into one JS
component per file. (See \fI\%Single Responsibility\fP
in the style guide).
Each folder may include styling (\fB\&.scss\fP), as well as templates(\fB\&.html\fP)
and tests (\fB\&.spec.js\fP).
You may also include examples, by appending \fB\&.example\fP\&.
.sp
For larger components, such as workflows with multiple steps, consider breaking
the code down further. For example, the Launch Instance workflow, has one
directory per step. See
\fBopenstack_dashboard/dashboards/project/static/dashboard/project/workflow/launch\-instance/\fP
.SS SCSS files
.sp
The top\-level SCSS file in \fBopenstack_dashboard/static/app/app.scss\fP\&. It
includes any styling that is part of the application \fBcore\fP and may be
reused by multiple dashboards. SCSS files that are specific to a particular
dashboard are linked to the application by adding them in that dashboard\(aqs
enabled file. For example, \fI_1000_project.py\fP is the enabled file for the
\fBProject\fP dashboard and includes:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ADD_SCSS_FILES = [
    \(aqdashboard/project/project.scss\(aq,
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Styling files are hierarchical, and include any direct child SCSS files. For
example, \fBproject.scss\fP includes the \fBworkflow\fP SCSS file, which in turn
includes any launch instance styling:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
@import "workflow/workflow";
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This allows the application to easily include all needed styling, simply by
including a dashboards top\-level SCSS file.
.SS Module Structure
.sp
Horizon Angular modules use names that map to the source code directory structure.
This provides namespace isolation for modules and services, which makes
dependency injection clearer. It also reduces code conflicts where two
different modules define a module, service or constant of the same name. For
example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
openstack_dashboard/dashboards/identity/static/dashboard/identity/
└── identity.module.js
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The preferred Angular module name in this example is
\fBhorizon.dashboard.identity\fP\&. The \fBhorizon\fP part of the module name maps to
the \fBstatic\fP directory and indicates this is a \fBhorizon\fP based application.
\fBdashboard.identity\fP maps to folders that are created within \fBstatic\fP\&. This
allows a direct mapping between the angular module name of
\fBhorizon.dashboard.identity\fP and the source code directory of
\fBstatic\edashboard\eidentity\fP\&.
.sp
Services and constants within these modules should all start with their module
name to avoid dependency injection collisions. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$provide.constant(\(aqhorizon.dashboard.identity.basePath\(aq, path);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Directives do not require the module name but are encouraged to begin with the
\fBhz\fP prefix. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&.directive(\(aqhzMagicSearchBar\(aq, hzMagicSearchBar);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Finally, each module lists its child modules as a dependency. This allows the
root module to be included by an application, which will automatically define
all child modules. For example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&.module(\(aqhorizon.framework\(aq, [
  \(aqhorizon.framework.conf\(aq,
  \(aqhorizon.framework.util\(aq,
  \(aqhorizon.framework.widgets\(aq
])
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBhorizon.framework\fP declares a dependency on \fBhorizon.framework.widgets\fP,
which declares dependencies on each individual widget. This allows the
application to access any widget, simply by depending on the top\-level
\fBhorizon.framework\fP module.
.SS Testing
.INDENT 0.0
.IP 1. 3
Open <dev_server_ip:port>/jasmine in a browser. The development server can be run
with\(ga\(ga./run_tests.sh \-\-runserver\(ga\(ga from the horizon root directory.
.IP 2. 3
\fBnpm run test\fP from the horizon root directory.
.UNINDENT
.sp
The code linting job can be run with \fBnpm run lint\fP\&.
.sp
For more detailed information, see \fBjavascript_testing\fP\&.
.SS Translation (Internationalization and Localization)
.sp
Translations are handled in Transifex, as with Django. They are merged daily
with the horizon upstream codebase. See
\fI\%Translations\fP in the
OpenStack wiki to learn more about this process.
.sp
To translate text in HTML files, you may use the \fBtranslate\fP directive or
filter. The directive be used as an element, or an attribute:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
// Translate singular, as element
<translate>Lorem ipsum</translate>

// Translate singular, as attribute
<h1 translate>Lorem ipsum</h1>

// Translate plural (attribute only)
<div translate translate\-n="count" translate\-plural="apples">apple</div>

// Filter singular
<input type="text" placeholder="{$ \(aqUsername\(aq | translate $}" />

// Comments for translators, to add context
<h1 translate\-comment="Verb" translate>File</h1>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The filter does not support plural strings.
.UNINDENT
.UNINDENT
.sp
To translate text in JS files, such as Angular controllers, use either
\fBgettext\fP (singular) or \fBngettext\fP (plural):
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
gettext(\(aqapple\(aq);
ngettext(\(aqapple\(aq, \(aqapples\(aq, count);
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The \fItranslatability\fP section contains information about the
pseudo translation tool, and how to make sure your translations are working
locally.
.sp
Horizon uses the \fI\%angular\-gettext\fP
library to provide directives and filters for extracting translatable text.
.SS Creating your own panel
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
This section will be extended as standard practices are adopted upstream.
Currently, it may be useful to use
\fI\%this patch\fP and its dependants
as an example.
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
Currently, Angular module names must still be manually declared with
\fBADD_ANGULAR_MODULES\fP, even when using automatic file discovery.
.UNINDENT
.UNINDENT
.sp
This section serves as a basic introduction to writing your own panel for
horizon, using AngularJS. A panel may be included with the plugin system, or it may be
part of the upstream horizon project.
.SS Upstream
.sp
JavaScript files can be discovered automatically, handled manually, or a mix of
the two. Where possible, use the automated mechanism.
To use the automatic functionality, add:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
AUTO_DISCOVER_STATIC_FILES = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to your enabled file (\fBenabled/<plugin_name>.py\fP). To make this possible,
you need to follow some structural conventions:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Static files should be put in a \fBstatic/\fP folder, which should be found directly under
the folder for the dashboard/panel/panel groups Python package.
.IP \(bu 2
JS code that defines an Angular module should be in a file with extension of \fB\&.module.js\fP\&.
.IP \(bu 2
JS code for testing should be named with extension of \fB\&.mock.js\fP and of \fB\&.spec.js\fP\&.
.IP \(bu 2
Angular templates should have extension of \fB\&.html\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
You can read more about the functionality in the
\fIauto_discover_static_files\fP section of the settings documentation.
.sp
To manually add files, add the following arrays and file paths to the enabled file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ADD_JS_FILES = [
  ...
  \(aqpath\-to/my\-angular\-code.js\(aq,
  ...
]

ADD_JS_SPEC_FILES = [
  ...
  \(aqpath\-to/my\-angular\-code.spec.js\(aq,
  ...
]

ADD_ANGULAR_MODULES = [
  ...
  \(aqangular.module\(aq,
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Plugins
.sp
Add a new panel/ panel group/ dashboard (See \fBtutorial\fP). JavaScript file
inclusion is the same as the Upstream process.
.sp
To include external stylesheets, you must ensure that \fBADD_SCSS_FILES\fP is
defined in your enabled file, and add the relevant filepath, as below:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ADD_SCSS_FILES = [
  ...
  \(aqpath\-to/my\-styles.scss\(aq,
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
We highly recommend using a single SCSS file for your plugin. SCSS supports
nesting with @import, so if you have multiple files (i.e. per panel styling)
it is best to import them all into one, and include that single file. You can
read more in the \fI\%SASS documentation\fP\&.
.UNINDENT
.UNINDENT
.SS JavaScript Testing
.INDENT 0.0
.TP
.B There are multiple components in our JavaScript testing framework:
.INDENT 7.0
.IP \(bu 2
\fI\%Jasmine\fP is our testing framework, so this defines the syntax and file
structure we use to test our JavaScript.
.IP \(bu 2
\fI\%Karma\fP is our test runner. Amongst other things, this lets us run the
tests against multiple browsers and generate test coverage reports.
Alternatively, tests can be run inside the browser with the Jasmine spec
runner.
.IP \(bu 2
\fI\%PhantomJS\fP provides a headless WebKit (the browser engine). This gives us
native support for many web features without relying on specific browsers
being installed.
.IP \(bu 2
\fI\%ESLint\fP is a pluggable code linting utilty. This will catch small errors
and inconsistencies in your JS, which may lead to bigger issues later on.
See \fIjs_code_style\fP for more detail.
.UNINDENT
.UNINDENT
.sp
Jasmine uses specs (\fB\&.spec.js\fP) which are kept with the JavaScript files
that they are testing. See the \fIjs_file_structure\fP section or the \fI\%Examples\fP
below for more detail on this.
.SS Running Tests
.sp
Tests can be run in two ways:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Open <dev_server_ip:port>/jasmine in a browser. The development server can be
run with \fB\&./run_tests.sh \-\-runserver\fP from the horizon root directory.
.IP 2. 3
\fBnpm run test\fP from the horizon root directory. This runs Karma,
so it will run all the tests against PhantomJS and generate coverage
reports.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
The code linting job can be run with \fBnpm run lint\fP\&.
.SS Coverage Reports
.sp
Our Karma setup includes a plugin to generate test coverage reports. When
developing, be sure to check the coverage reports on the master branch and
compare your development branch; this will help identify missing tests.
.sp
To generate coverage reports, run \fBnpm run test\fP\&. The coverage reports can be
found at \fBhorizon/.coverage\-karma/\fP (framework tests) and
\fBopenstack_dashboard/.coverage\-karma/\fP (dashboard tests). Load
\fB<browser>/index.html\fP in a browser to view the reports.
.SS Writing Tests
.INDENT 0.0
.TP
.B Jasmine uses suites and specs:
.INDENT 7.0
.IP \(bu 2
Suites begin with a call to \fBdescribe\fP, which takes two parameters; a
string and a function. The string is a name or title for the spec suite,
whilst the function is a block that implements the suite.
.IP \(bu 2
Specs begin with a call to \fBit\fP, which also takes a string and a function
as parameters. The string is a name or title, whilst the function is a
block with one or more expectations (\fBexpect\fP) that test the state of
the code. An expectation in Jasmine is an assertion that is either true or
false; every expectation in a spec must be true for the spec to pass.
.UNINDENT
.UNINDENT
.sp
\fB\&.spec.js\fP files can be handled manually or automatically. To use the
automatic file discovery add:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
AUTO_DISCOVER_STATIC_FILES = True
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
to your enabled file. JS code for testing should use the extensions
\fB\&.mock.js\fP and \fB\&.spec.js\fP\&.
.sp
You can read more about the functionality in the
\fIauto_discover_static_files\fP section of the settings documentation.
.sp
To manually add specs, add the following array and relevant file paths to your
enabled file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
ADD_JS_SPEC_FILES = [
  ...
  \(aqpath_to/my_angular_code.spec.js\(aq,
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Examples
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
The code below is just for example purposes, and may not be current in
horizon. Ellipses (...) are used to represent code that has been
removed for the sake of brevity.
.UNINDENT
.UNINDENT
.SS Example 1 \- A reusable component in the \fBhorizon\fP directory
.sp
File tree:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
horizon/static/framework/widgets/modal
├── modal.controller.js
├── modal.module.js
├── modal.service.js
└── modal.spec.js
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Lines added to \fBhorizon/test/jasmine/jasmine_tests.py\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class ServicesTests(test.JasmineTests):
  sources = [
    ...
    \(aqframework/widgets/modal/modal.module.js\(aq,
    \(aqframework/widgets/modal/modal.controller.js\(aq,
    \(aqframework/widgets/modal/modal.service.js\(aq,
    ...
  ]

  specs = [
    ...
    \(aqframework/widgets/modal/modal.spec.js\(aq,
    ...
  ]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBmodal.spec.js\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&...

(function() {
  "use strict";

  describe(\(aqhorizon.framework.widgets.modal module\(aq, function() {

    beforeEach(module(\(aqhorizon.framework.widgets.modal\(aq));

    describe(\(aqsimpleModalCtrl\(aq, function() {
      var scope;
      var modalInstance;
      var context;
      var ctrl;

      beforeEach(inject(function($controller) {
        scope = {};
        modalInstance = {
          close: function() {},
          dismiss: function() {}
        };
        context = { what: \(aqis it\(aq };
        ctrl = $controller(\(aqsimpleModalCtrl\(aq, {
               $scope: scope,
               $modalInstance: modalInstance,
               context: context
        });
      }));

      it(\(aqestablishes a controller\(aq, function() {
        expect(ctrl).toBeDefined();
      });

      it(\(aqsets context on the scope\(aq, function() {
        expect(scope.context).toBeDefined();
        expect(scope.context).toEqual({ what: \(aqis it\(aq });
      });

      it(\(aqsets action functions\(aq, function() {
        expect(scope.submit).toBeDefined();
        expect(scope.cancel).toBeDefined();
      });

      it(\(aqmakes submit close the modal instance\(aq, function() {
        expect(scope.submit).toBeDefined();
        spyOn(modalInstance, \(aqclose\(aq);
        scope.submit();
        expect(modalInstance.close.calls.count()).toBe(1);
      });

      it(\(aqmakes cancel close the modal instance\(aq, function() {
        expect(scope.cancel).toBeDefined();
        spyOn(modalInstance, \(aqdismiss\(aq);
        scope.cancel();
        expect(modalInstance.dismiss).toHaveBeenCalledWith(\(aqcancel\(aq);
      });
    });

    ...

  });
})();
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Example 2 \- Panel\-specific code in the \fBopenstack_dashboard\fP directory
.sp
File tree:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
openstack_dashboard/static/dashboard/launch\-instance/network/
├── network.help.html
├── network.html
├── network.js
├── network.scss
└── network.spec.js
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Lines added to \fBopenstack_dashboard/enabled/_10_project.py\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
LAUNCH_INST = \(aqdashboard/launch\-instance/\(aq

ADD_JS_FILES = [
  ...
  LAUNCH_INST + \(aqnetwork/network.js\(aq,
  ...
]

ADD_JS_SPEC_FILES = [
  ...
  LAUNCH_INST + \(aqnetwork/network.spec.js\(aq,
  ...
]
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBnetwork.spec.js\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&...

(function(){
  \(aquse strict\(aq;

  describe(\(aqLaunch Instance Network Step\(aq, function() {

    describe(\(aqLaunchInstanceNetworkCtrl\(aq, function() {
      var scope;
      var ctrl;

      beforeEach(module(\(aqhorizon.dashboard.project.workflow.launch\-instance\(aq));

      beforeEach(inject(function($controller) {
        scope = {
          model: {
            newInstanceSpec: {networks: [\(aqnet\-a\(aq]},
            networks: [\(aqnet\-a\(aq, \(aqnet\-b\(aq]
          }
        };
        ctrl = $controller(\(aqLaunchInstanceNetworkCtrl\(aq, {$scope:scope});
      }));

      it(\(aqhas correct network statuses\(aq, function() {
        expect(ctrl.networkStatuses).toBeDefined();
        expect(ctrl.networkStatuses.ACTIVE).toBeDefined();
        expect(ctrl.networkStatuses.DOWN).toBeDefined();
        expect(Object.keys(ctrl.networkStatuses).length).toBe(2);
      });

      it(\(aqhas correct network admin states\(aq, function() {
        expect(ctrl.networkAdminStates).toBeDefined();
        expect(ctrl.networkAdminStates.UP).toBeDefined();
        expect(ctrl.networkAdminStates.DOWN).toBeDefined();
        expect(Object.keys(ctrl.networkStatuses).length).toBe(2);
      });

      it(\(aqdefines a multiple\-allocation table\(aq, function() {
        expect(ctrl.tableLimits).toBeDefined();
        expect(ctrl.tableLimits.maxAllocation).toBe(\-1);
      });

      it(\(aqcontains its own labels\(aq, function() {
        expect(ctrl.label).toBeDefined();
        expect(Object.keys(ctrl.label).length).toBeGreaterThan(0);
      });

      it(\(aqcontains help text for the table\(aq, function() {
        expect(ctrl.tableHelpText).toBeDefined();
        expect(ctrl.tableHelpText.allocHelpText).toBeDefined();
        expect(ctrl.tableHelpText.availHelpText).toBeDefined();
      });

      it(\(aquses scope to set table data\(aq, function() {
        expect(ctrl.tableDataMulti).toBeDefined();
        expect(ctrl.tableDataMulti.available).toEqual([\(aqnet\-a\(aq, \(aqnet\-b\(aq]);
        expect(ctrl.tableDataMulti.allocated).toEqual([\(aqnet\-a\(aq]);
        expect(ctrl.tableDataMulti.displayedAllocated).toEqual([]);
        expect(ctrl.tableDataMulti.displayedAvailable).toEqual([]);
      });
    });

    ...

  });
})();
.ft P
.fi
.UNINDENT
.UNINDENT
.SS API Reference
.sp
In\-depth documentation for Horizon and its APIs.
.SS The \fBrun_tests.sh\fP Script
.SS Contents:
.INDENT 0.0
.IP \(bu 2
\fI\%First Run\fP
.IP \(bu 2
\fI\%I just want to run the tests!\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Running a subset of tests\fP
.IP \(bu 2
\fI\%Running the integration tests\fP
.UNINDENT
.IP \(bu 2
\fI\%Using Dashboard and Panel Templates\fP
.INDENT 2.0
.IP \(bu 2
\fI\%Dashboards\fP
.IP \(bu 2
\fI\%Panels\fP
.IP \(bu 2
\fI\%JavaScript Tests\fP
.IP \(bu 2
\fI\%JavaScript Code Style Checks\fP
.UNINDENT
.IP \(bu 2
\fI\%Give me metrics!\fP
.INDENT 2.0
.IP \(bu 2
\fI\%ESLint\fP
.IP \(bu 2
\fI\%Coverage\fP
.IP \(bu 2
\fI\%PEP8\fP
.IP \(bu 2
\fI\%PyLint\fP
.IP \(bu 2
\fI\%Tab Characters\fP
.UNINDENT
.IP \(bu 2
\fI\%Running the development server\fP
.IP \(bu 2
\fI\%Generating the documentation\fP
.IP \(bu 2
\fI\%Updating the translation files\fP
.IP \(bu 2
\fI\%Starting clean\fP
.IP \(bu 2
\fI\%Non\-interactive Mode\fP
.IP \(bu 2
\fI\%Environment Backups\fP
.IP \(bu 2
\fI\%Environment Versioning\fP
.UNINDENT
.sp
Horizon ships with a script called \fBrun_tests.sh\fP at the root of the
repository. This script provides many crucial functions for the project,
and also makes several otherwise complex tasks trivial for you as a
developer.
.SS First Run
.sp
If you start with a clean copy of the Horizon repository, the first thing
you should do is to run \fB\&./run_tests.sh\fP from the root of the repository.
This will do two things for you:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Set up a virtual environment for both the \fBhorizon\fP module and
the \fBopenstack_dashboard\fP project using \fB\&./tools/install_venv.py\fP\&.
.IP 2. 3
Run the tests for both \fBhorizon\fP and \fBopenstack_dashboard\fP using
their respective environments and verify that everything is working.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Setting up the environment the first time can take several minutes, but only
needs to be done once. If dependencies are added in the future, updating the
environments will be necessary but not as time consuming.
.SS I just want to run the tests!
.sp
Running the full set of unit tests quickly and easily is the main goal of this
script. All you need to do is:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Yep, that\(aqs it. However, for a more thorough test run you can include the
Selenium tests by using the \fB\-\-with\-selenium\fP flag:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-with\-selenium
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
If you run horizon in a minimal installation VM, you will probably need
the following (steps for Fedora 18 minimal installation):
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.IP 1. 3
Install these packages in the VM:
\fByum install xorg\-x11\-xauth xorg\-x11\-fonts\-Type1.noarch\fP\&.
.IP 2. 3
Install firefox in the VM:
\fByum install firefox\fP\&.
.IP 3. 3
Connect to the VM by \fBssh \-X\fP
(if you run \fBset|grep DISP\fP, you should see that the DISPLAY is set).
.IP 4. 3
Run
\fB\&./run_tests.sh \-\-with\-selenium\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Running a subset of tests
.sp
Instead of running all tests, you can specify an individual directory, file,
class, or method that contains test code.
.sp
To run the tests in the \fBhorizon/test/tests/tables.py\fP file:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh horizon.test.tests.tables
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To run the tests in the \fIWorkflowsTests\fP class in
\fBhorizon/test/tests/workflows\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh horizon.test.tests.workflows:WorkflowsTests
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To run just the \fIWorkflowsTests.test_workflow_view\fP test method:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh horizon.test.tests.workflows:WorkflowsTests.test_workflow_view
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Running the integration tests
.sp
The Horizon integration tests treat Horizon as a black box, and similar
to Tempest must be run against an existing OpenStack system. These
tests are not run by default.
.INDENT 0.0
.IP 1. 3
Update the configuration file
\fIopenstack_dashboard/test/integration_tests/horizon.conf\fP as
required (the format is similar to the Tempest configuration file).
.IP 2. 3
Run the tests with the following command:
.INDENT 3.0
.INDENT 3.5
.sp
.nf
.ft C
$ ./run_tests.sh \-\-integration
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Like for the unit tests, you can choose to only run a subset.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
$ ./run_tests.sh \-\-integration openstack_dashboard.test.integration_tests.tests.test_login
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Using Dashboard and Panel Templates
.sp
Horizon has a set of convenient management commands for creating new
dashboards and panels based on basic templates.
.SS Dashboards
.sp
To create a new dashboard, run the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-m startdash <dash_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will create a directory with the given dashboard name, a \fBdashboard.py\fP
module with the basic dashboard code filled in, and various other common
"boilerplate" code.
.sp
Available options:
.INDENT 0.0
.IP \(bu 2
\fB\-\-target\fP: the directory in which the dashboard files should be created.
Default: A new directory within the current directory.
.UNINDENT
.SS Panels
.sp
To create a new panel, run the following:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests \-m startpanel <panel_name>
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will create a directory with the given panel name, and \fBpanel.py\fP
module with the basic panel code filled in, and various other common
"boilerplate" code.
.sp
Available options:
.INDENT 0.0
.IP \(bu 2
\fB\-d\fP, \fB\-\-dashboard\fP: The dotted python path to your dashboard app (the
module which containers the \fBdashboard.py\fP file.). If not specified, the
target dashboard should be specified in a pluggable settings file for the
panel.
.IP \(bu 2
\fB\-\-target\fP: the directory in which the panel files should be created.
If the value is \fBauto\fP the panel will be created as a new directory inside
the dashboard module\(aqs directory structure. Default: A new directory within
the current directory.
.UNINDENT
.SS JavaScript Tests
.sp
You can also run JavaScript unit tests using Karma.  Karma is a test
environment that allows for multiple test runners and reporters, including
such features as code coverage.  Karma allows developer to run tests live,
as it can watch source and test files for changes.
.sp
The default configuration also performs coverage reports, which are saved
to \fBhorizon/.coverage\-karma/\fP and \fBopenstack_dashboard/.coverage\-karma/\fP\&.
.sp
To run the Karma tests for Horizon and Dashboard using the \fIrun_tests.sh\fP
script:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-karma
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To run the Karma tests for Horizon and Dashboard using \fInpm\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
npm install # You only need to execute this once.
npm test
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
These two methods are equivalent. The former merely executes
the latter.
.UNINDENT
.UNINDENT
.SS JavaScript Code Style Checks
.sp
You can run the JavaScript code style checks, or linting, using eslint.
ESLint is a permissively licensed, sophisticated language parser and
linter that confirms both our style guidelines, and checks the code for
common errors that may create unexpected behavior.
.sp
To run eslint for Horizon and Dashboard using the \fIrun_tests.sh\fP
script:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-eslint
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
To run eslint for Horizon and Dashboard using \fInpm\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
npm install # You only need to execute this once.
npm run lint
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
\fBNOTE:\fP
.INDENT 0.0
.INDENT 3.5
These two methods are equivalent. The former merely executes
the latter.
.UNINDENT
.UNINDENT
.SS Give me metrics!
.sp
You can generate various reports and metrics using command line arguments
to \fBrun_tests.sh\fP\&.
.SS ESLint
.sp
To run ESLint, a JavaScript code style checker:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-eslint
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Coverage
.sp
To run coverage reports:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-coverage
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The reports are saved to \fB\&./reports/\fP and \fB\&./coverage.xml\fP\&.
.SS PEP8
.sp
You can check for PEP8 violations as well:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-pep8
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The results are saved to \fB\&./pep8.txt\fP\&.
.SS PyLint
.sp
For more detailed code analysis you can run:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-pylint
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The output will be saved in \fB\&./pylint.txt\fP\&.
.SS Tab Characters
.sp
For those who dislike having a mix of tab characters and spaces for indentation
there\(aqs a command to check for that in Python, CSS, JavaScript and HTML files:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-tabs
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will output a total "tab count" and a list of the offending files.
.SS Running the development server
.sp
As an added bonus, you can run Django\(aqs development server directly from
the root of the repository with \fBrun_tests.sh\fP like so:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-runserver
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This is effectively just an alias for:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./tools/with_venv.sh ./manage.py runserver
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Generating the documentation
.sp
You can build Horizon\(aqs documentation automatically by running:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-docs
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The output is stored in \fB\&./doc/build/html/\fP\&.
.SS Updating the translation files
.sp
You can update all of the translation files for both the \fBhorizon\fP app and
\fBopenstack_dashboard\fP project with a single command:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-makemessages
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
or, more compactly:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-m
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Starting clean
.sp
If you ever want to start clean with a new environment for Horizon, you can
run:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-force
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
That will blow away the existing environments and create new ones for you.
.SS Non\-interactive Mode
.sp
There is an optional flag which will run the script in a non\-interactive
(and eventually less verbose) mode:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-quiet
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This will automatically take the default action for actions which would
normally prompt for user input such as installing/updating the environment.
.SS Environment Backups
.sp
To speed up the process of doing clean checkouts, running continuous
integration tests, etc. there are options for backing up the current
environment and restoring from a backup:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
\&./run_tests.sh \-\-restore\-environment
\&./run_tests.sh \-\-backup\-environment
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
The environment backup is stored in \fB/tmp/.horizon_environment/\fP\&.
.SS Environment Versioning
.sp
Horizon keeps track of changes to the environment by comparing the
current requirements files (\fBrequirements.txt\fP and
\fBtest\-requirements.txt\fP) and the files last time the virtual
environment was created or updated. If there is any difference,
the virtual environment will be update automatically when you run
\fBrun_tests.sh\fP\&.
.SS The \fBhorizon\fP Module
.sp
Horizon ships with a single point of contact for hooking into your project if
you aren\(aqt developing your own \fBDashboard\fP or
\fBPanel\fP:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
import horizon
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
From there you can access all the key methods you need.
.SS Horizon
.INDENT 0.0
.TP
.B horizon.urls
The auto\-generated URLconf for horizon. Usage:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
url(r\(aq\(aq, include(horizon.urls)),
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B horizon.register(self, dashboard)
Registers a \fBDashboard\fP with Horizon.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.unregister(self, dashboard)
Unregisters a \fBDashboard\fP from Horizon.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.get_absolute_url(self)
Returns the default URL for Horizon\(aqs URLconf.
.sp
The default URL is determined by calling
\fBget_absolute_url()\fP
on the \fBDashboard\fP instance returned by
\fBget_default_dashboard()\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.get_user_home(self, user)
Returns the default URL for a particular user.
.sp
This method can be used to customize where a user is sent when
they log in, etc. By default it returns the value of
\fBget_absolute_url()\fP\&.
.sp
An alternative function can be supplied to customize this behavior
by specifying a either a URL or a function which returns a URL via
the \fB"user_home"\fP key in \fBHORIZON_CONFIG\fP\&. Each of these
would be valid:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
{"user_home": "/home",}  # A URL
{"user_home": "my_module.get_user_home",}  # Path to a function
{"user_home": lambda user: "/" + user.name,}  # A function
{"user_home": None,}  # Will always return the default dashboard
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This can be useful if the default dashboard may not be accessible
to all users. When user_home is missing from HORIZON_CONFIG,
it will default to the settings.LOGIN_REDIRECT_URL value.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.get_dashboard(self, dashboard)
Returns the specified \fBDashboard\fP instance.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.get_default_dashboard(self)
Returns the default \fBDashboard\fP instance.
.sp
If \fB"default_dashboard"\fP is specified in \fBHORIZON_CONFIG\fP
then that dashboard will be returned. If not, the first dashboard
returned by \fBget_dashboards()\fP will be returned.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.get_dashboards(self)
Returns an ordered tuple of \fBDashboard\fP modules.
.sp
Orders dashboards according to the \fB"dashboards"\fP key in
\fBHORIZON_CONFIG\fP or else returns all registered dashboards
in alphabetical order.
.sp
Any remaining \fBDashboard\fP classes registered with
Horizon but not listed in \fBHORIZON_CONFIG[\(aqdashboards\(aq]\fP
will be appended to the end of the list alphabetically.
.UNINDENT
.SS Dashboard
.INDENT 0.0
.TP
.B class horizon.Dashboard(*args, **kwargs)
A base class for defining Horizon dashboards.
.sp
All Horizon dashboards should extend from this base class. It provides the
appropriate hooks for automatic discovery of \fBPanel\fP
modules, automatically constructing URLconfs, and providing
permission\-based access control.
.INDENT 7.0
.TP
.B name
The name of the dashboard. This will be displayed in the
auto\-generated navigation and various other places.
Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A unique "short name" for the dashboard. The slug is used as
a component of the URL path for the dashboard. Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B panels
The \fBpanels\fP attribute can be either a flat list containing the name
of each panel \fBmodule\fP  which should be loaded as part of this
dashboard, or a list of \fBPanelGroup\fP classes which
define groups of panels as in the following example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
class SystemPanels(horizon.PanelGroup):
    slug = "syspanel"
    name = _("System")
    panels = (\(aqoverview\(aq, \(aqinstances\(aq, ...)

class Syspanel(horizon.Dashboard):
    panels = (SystemPanels,)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Automatically generated navigation will use the order of the
modules in this attribute.
.sp
Default: \fB[]\fP\&.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
The values for this attribute should not correspond to the
\fBname\fP attributes of the \fBPanel\fP classes.
They should be the names of the Python modules in which the
\fBpanel.py\fP files live. This is used for the automatic
loading and registration of \fBPanel\fP classes much like
Django\(aqs \fBModelAdmin\fP machinery.
.sp
Panel modules must be listed in \fBpanels\fP in order to be
discovered by the automatic registration mechanism.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_panel
The name of the panel which should be treated as the default
panel for the dashboard, i.e. when you visit the root URL
for this dashboard, that\(aqs the panel that is displayed.
Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names, all of which a user must possess in order
to access any panel registered with this dashboard. This attribute
is combined cumulatively with any permissions required on individual
\fBPanel\fP classes.
.UNINDENT
.INDENT 7.0
.TP
.B urls
Optional path to a URLconf of additional views for this dashboard
which are not connected to specific panels. Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B nav
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
The \fBnav\fP attribute can be either boolean value or a callable
which accepts a \fBRequestContext\fP object as a single argument
to control whether or not this dashboard should appear in
automatically\-generated navigation. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B public
Boolean value to determine whether this dashboard can be viewed
without being logged in. Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B allowed(context)
Checks for role based access for this dashboard.
.sp
Checks for access to any panels in the dashboard and of the the
dashboard itself.
.sp
This method should be overridden to return the result of
any policy checks required for the user to access this dashboard
when more complex checks are required.
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for this dashboard.
.sp
The default URL is defined as the URL pattern with \fBname="index"\fP
in the URLconf for the \fBPanel\fP specified by
\fBdefault_panel\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_panel(panel)
Returns the specified \fBPanel\fP instance registered
with this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B get_panel_group(slug)
Returns the specified :class:~horizon.PanelGroup
or None if not registered
.UNINDENT
.INDENT 7.0
.TP
.B get_panels()
Returns the \fBPanel\fP instances registered with this
dashboard in order, without any panel groupings.
.UNINDENT
.INDENT 7.0
.TP
.B classmethod register(panel)
Registers a \fBPanel\fP with this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B classmethod unregister(panel)
Unregisters a \fBPanel\fP from this dashboard.
.UNINDENT
.UNINDENT
.SS Panel
.INDENT 0.0
.TP
.B class horizon.Panel
A base class for defining Horizon dashboard panels.
.sp
All Horizon dashboard panels should extend from this class. It provides
the appropriate hooks for automatically constructing URLconfs, and
providing permission\-based access control.
.INDENT 7.0
.TP
.B name
The name of the panel. This will be displayed in the
auto\-generated navigation and various other places.
Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A unique "short name" for the panel. The slug is used as
a component of the URL path for the panel. Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names, all of which a user must possess in order
to access any view associated with this panel. This attribute
is combined cumulatively with any permissions required on the
\fBDashboard\fP class with which it is registered.
.UNINDENT
.INDENT 7.0
.TP
.B urls
Path to a URLconf of views for this panel using dotted Python
notation. If no value is specified, a file called \fBurls.py\fP
living in the same package as the \fBpanel.py\fP file is used.
Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B nav
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
The \fBnav\fP attribute can be either boolean value or a callable
which accepts a \fBRequestContext\fP object as a single argument
to control whether or not this panel should appear in
automatically\-generated navigation. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B index_url_name
The \fBname\fP argument for the URL pattern which corresponds to
the index view for this \fBPanel\fP\&. This is the view that
\fBPanel.get_absolute_url()\fP will attempt to reverse.
.UNINDENT
.INDENT 7.0
.TP
.B static can_register()
This optional static method can be used to specify conditions that
need to be satisfied to load this panel. Unlike \fBpermissions\fP and
\fBallowed\fP this method is intended to handle settings based
conditions rather than user based permission and policy checks.
The return value is boolean. If the method returns \fBTrue\fP, then the
panel will be registered and available to user (if \fBpermissions\fP and
\fBallowed\fP runtime checks are also satisfied). If the method returns
\fBFalse\fP, then the panel will not be registered and will not be
available via normal navigation or direct URL access.
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for this panel.
.sp
The default URL is defined as the URL pattern with \fBname="index"\fP in
the URLconf for this panel.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.PanelGroup(dashboard, slug=None, name=None, panels=None)
A container for a set of \fBPanel\fP classes.
.sp
When iterated, it will yield each of the \fBPanel\fP instances it
contains.
.INDENT 7.0
.TP
.B slug
A unique string to identify this panel group. Required.
.UNINDENT
.INDENT 7.0
.TP
.B name
A user\-friendly name which will be used as the group heading in
places such as the navigation. Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B panels
A list of panel module names which should be contained within this
grouping.
.UNINDENT
.UNINDENT
.SS Horizon Workflows
.sp
One of the most challenging aspects of building a compelling user experience
is crafting complex multi\-part workflows. Horizon\(aqs \fBworkflows\fP module
aims to bring that capability within everyday reach.
.INDENT 0.0
.INDENT 3.5
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
For usage information, tips & tricks and more examples check out the
\fBWorkflows Topic Guide\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Workflows
.INDENT 0.0
.TP
.B class horizon.workflows.Workflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
A Workflow is a collection of Steps. Its interface is very
straightforward, but it is responsible for handling some very
important tasks such as:
.INDENT 7.0
.IP \(bu 2
Handling the injection, removal, and ordering of arbitrary steps.
.IP \(bu 2
Determining if the workflow can be completed by a given user at runtime
based on all available information.
.IP \(bu 2
Dispatching connections between steps to ensure that when context data
changes all the applicable callback functions are executed.
.IP \(bu 2
Verifying/validating the overall data integrity and subsequently
triggering the final method to complete the workflow.
.UNINDENT
.sp
The \fBWorkflow\fP class has the following attributes:
.INDENT 7.0
.TP
.B name
The verbose name for this workflow which will be displayed to the user.
Defaults to the class name.
.UNINDENT
.INDENT 7.0
.TP
.B slug
The unique slug for this workflow. Required.
.UNINDENT
.INDENT 7.0
.TP
.B steps
Read\-only access to the final ordered set of step instances for
this workflow.
.UNINDENT
.INDENT 7.0
.TP
.B default_steps
A list of \fBStep\fP classes which serve as the
starting point for this workflow\(aqs ordered steps. Defaults to an empty
list (\fB[]\fP).
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name
The name which will appear on the submit button for the workflow\(aqs
form. Defaults to \fB"Save"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B success_message
A string which will be displayed to the user upon successful completion
of the workflow. Defaults to
\fB"{{ workflow.name }} completed successfully."\fP
.UNINDENT
.INDENT 7.0
.TP
.B failure_message
A string which will be displayed to the user upon failure to complete
the workflow. Defaults to \fB"{{ workflow.name }} did not complete."\fP
.UNINDENT
.INDENT 7.0
.TP
.B depends_on
A roll\-up list of all the \fBdepends_on\fP values compiled from the
workflow\(aqs steps.
.UNINDENT
.INDENT 7.0
.TP
.B contributions
A roll\-up list of all the \fBcontributes\fP values compiled from the
workflow\(aqs steps.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
Path to the template which should be used to render this workflow.
In general the default common template should be used. Default:
\fB"horizon/common/_workflow.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B entry_point
The slug of the step which should initially be active when the
workflow is rendered. This can be passed in upon initialization of
the workflow, or set anytime after initialization but before calling
either \fBget_entry_point\fP or \fBrender\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B redirect_param_name
The name of a parameter used for tracking the URL to redirect to upon
completion of the workflow. Defaults to \fB"next"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B object
The object (if any) which this workflow relates to. In the case of
a workflow which creates a new resource the object would be the created
resource after the relevant creation steps have been undertaken. In
the case of a workflow which updates a resource it would be the
resource being updated after it has been retrieved.
.UNINDENT
.INDENT 7.0
.TP
.B wizard
Whether to present the workflow as a wizard, with "prev" and "next"
buttons and validation after every step.
.UNINDENT
.INDENT 7.0
.TP
.B fullscreen
If the workflow is presented in a modal, and this attribute is
set to True, then the \fBfullscreen\fP css class will be added so
the modal can take advantage of the available screen estate.
Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B add_error_to_step(message, slug)
Adds an error to the workflow\(aqs Step with the
specified slug based on API issues. This is useful
when you wish for API errors to appear as errors on
the form rather than using the messages framework.
.UNINDENT
.INDENT 7.0
.TP
.B finalize()
Finalizes a workflow by running through all the actions in order
and calling their \fBhandle\fP methods. Returns \fBTrue\fP on full success,
or \fBFalse\fP for a partial success, e.g. there were non\-critical
errors. (If it failed completely the function wouldn\(aqt return.)
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
Hook to allow customization of the message returned to the user
upon successful or unsuccessful completion of the workflow.
.sp
By default it simply inserts the workflow\(aqs name into the message
string.
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the canonical URL for this workflow.
.sp
This is used for the POST action attribute on the form element
wrapping the workflow.
.sp
For convenience it defaults to the value of
\fBrequest.get_full_path()\fP with any query string stripped off,
e.g. the path at which the workflow was requested.
.UNINDENT
.INDENT 7.0
.TP
.B get_entry_point()
Returns the slug of the step which the workflow should begin on.
.sp
This method takes into account both already\-available data and errors
within the steps.
.UNINDENT
.INDENT 7.0
.TP
.B get_step(slug)
Returns the instantiated step matching the given slug.
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
Returns a URL to redirect the user to upon completion. By default it
will attempt to parse a \fBsuccess_url\fP attribute on the workflow,
which can take the form of a reversible URL pattern name, or a
standard HTTP URL.
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
Handles any final processing for this workflow. Should return a
boolean value indicating success.
.UNINDENT
.INDENT 7.0
.TP
.B is_valid()
Verified that all required data is present in the context and
calls the \fBvalidate\fP method to allow for finer\-grained checks
on the context data.
.UNINDENT
.INDENT 7.0
.TP
.B classmethod register(step_class)
Registers a \fBStep\fP with the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B classmethod unregister(step_class)
Unregisters a \fBStep\fP from the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B validate(context)
Hook for custom context data validation. Should return a boolean
value or raise \fBWorkflowValidationError\fP\&.
.UNINDENT
.UNINDENT
.SS Steps
.INDENT 0.0
.TP
.B class horizon.workflows.Step(workflow)
A step is a wrapper around an action which defines its context in a
workflow. It knows about details such as:
.INDENT 7.0
.IP \(bu 2
The workflow\(aqs context data (data passed from step to step).
.IP \(bu 2
The data which must be present in the context to begin this step (the
step\(aqs dependencies).
.IP \(bu 2
The keys which will be added to the context data upon completion of the
step.
.IP \(bu 2
The connections between this step\(aqs fields and changes in the context
data (e.g. if that piece of data changes, what needs to be updated in
this step).
.UNINDENT
.sp
A \fBStep\fP class has the following attributes:
.INDENT 7.0
.TP
.B action_class
The \fBAction\fP class which this step wraps.
.UNINDENT
.INDENT 7.0
.TP
.B depends_on
A list of context data keys which this step requires in order to
begin interaction.
.UNINDENT
.INDENT 7.0
.TP
.B contributes
A list of keys which this step will contribute to the workflow\(aqs
context data. Optional keys should still be listed, even if their
values may be set to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B connections
A dictionary which maps context data key names to lists of callbacks.
The callbacks may be functions, dotted python paths to functions
which may be imported, or dotted strings beginning with \fB"self"\fP
to indicate methods on the current \fBStep\fP instance.
.UNINDENT
.INDENT 7.0
.TP
.B before
Another \fBStep\fP class. This optional attribute is used to provide
control over workflow ordering when steps are dynamically added to
workflows. The workflow mechanism will attempt to place the current
step before the step specified in the attribute.
.UNINDENT
.INDENT 7.0
.TP
.B after
Another \fBStep\fP class. This attribute has the same purpose as
\fBbefore()\fP except that it will instead
attempt to place the current step after the given step.
.UNINDENT
.INDENT 7.0
.TP
.B help_text
A string of simple help text which will be prepended to the \fBAction\fP
class\(aq help text if desired.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
A path to a template which will be used to render this step. In
general the default common template should be used. Default:
\fB"horizon/common/_workflow_step.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B has_errors
A boolean value which indicates whether or not this step has any
errors on the action within it or in the scope of the workflow. This
attribute will only accurately reflect this status after validation
has occurred.
.UNINDENT
.INDENT 7.0
.TP
.B slug
Inherited from the \fBAction\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B name
Inherited from the \fBAction\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
Inherited from the \fBAction\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B add_step_error(message)
Adds an error to the Step based on API issues.
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
Adds the data listed in \fBcontributes\fP to the workflow\(aqs shared
context. By default, the context is simply updated with all the data
returned by the action.
.sp
Note that even if the value of one of the \fBcontributes\fP keys is
not present (e.g. optional) the key should still be added to the
context with a value of \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text()
Returns the help text for this step.
.UNINDENT
.INDENT 7.0
.TP
.B get_id()
Returns the ID for this step. Suitable for use in HTML markup.
.UNINDENT
.INDENT 7.0
.TP
.B has_required_fields()
Returns True if action contains any required fields.
.UNINDENT
.INDENT 7.0
.TP
.B prepare_action_context(request, context)
Allows for customization of how the workflow context is passed to
the action; this is the reverse of what "contribute" does to make the
action outputs sane for the workflow. Changes to the context are not
saved globally here. They are localized to the action.
.sp
Simply returns the unaltered context by default.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the step.
.UNINDENT
.UNINDENT
.SS Actions
.INDENT 0.0
.TP
.B class horizon.workflows.Action(request, context, *args, **kwargs)
An \fBAction\fP represents an atomic logical interaction you can have with
the system. This is easier to understand with a conceptual example: in the
context of a "launch instance" workflow, actions would include "naming
the instance", "selecting an image", and ultimately "launching the
instance".
.sp
Because \fBActions\fP are always interactive, they always provide form
controls, and thus inherit from Django\(aqs \fBForm\fP class. However, they
have some additional intelligence added to them:
.INDENT 7.0
.IP \(bu 2
\fBActions\fP are aware of the permissions required to complete them.
.IP \(bu 2
\fBActions\fP have a meta\-level concept of "help text" which is meant to be
displayed in such a way as to give context to the action regardless of
where the action is presented in a site or workflow.
.IP \(bu 2
\fBActions\fP understand how to handle their inputs and produce outputs,
much like \fBSelfHandlingForm\fP does now.
.UNINDENT
.sp
\fBAction\fP classes may define the following attributes in a \fBMeta\fP
class within them:
.INDENT 7.0
.TP
.B name
The verbose name for this action. Defaults to the name of the class.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A semi\-unique slug for this action. Defaults to the "slugified" name
of the class.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names which this action requires in order to be
completed. Defaults to an empty list (\fB[]\fP).
.UNINDENT
.INDENT 7.0
.TP
.B help_text
A string of simple help text to be displayed alongside the Action\(aqs
fields.
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template
A path to a template which contains more complex help text to be
displayed alongside the Action\(aqs fields. In conjunction with
\fBget_help_text()\fP method you can
customize your help text template to display practically anything.
.UNINDENT
.INDENT 7.0
.TP
.B add_action_error(message)
Adds an error to the Action\(aqs Step based on API issues.
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text(extra_context=None)
Returns the help text for this step.
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
Handles any requisite processing for this action. The method should
return either \fBNone\fP or a dictionary of data to be passed to
\fBcontribute()\fP\&.
.sp
Returns \fBNone\fP by default, effectively making it a no\-op.
.UNINDENT
.UNINDENT
.SS WorkflowView
.INDENT 0.0
.TP
.B class horizon.workflows.WorkflowView
A generic class\-based view which handles the intricacies of workflow
processing with minimal user configuration.
.INDENT 7.0
.TP
.B workflow_class
The \fBWorkflow\fP class which this view handles.
Required.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
The template to use when rendering this view via standard HTTP
requests. Required.
.UNINDENT
.INDENT 7.0
.TP
.B ajax_template_name
The template to use when rendering the workflow for AJAX requests.
In general the default common template should be used. Defaults to
\fB"horizon/common/_workflow.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B context_object_name
The key which should be used for the workflow object in the template
context. Defaults to \fB"workflow"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
Handler for HTTP GET requests.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
Returns the template context, including the workflow class.
.sp
This method should be overridden in subclasses to provide additional
context data to the template.
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
Returns initial data for the workflow. Defaults to using the GET
parameters to allow pre\-seeding of the workflow context values.
.UNINDENT
.INDENT 7.0
.TP
.B get_layout()
returns classes for the workflow element in template based on
the workflow characteristics
.UNINDENT
.INDENT 7.0
.TP
.B get_template_names()
Returns the template name to use for this request.
.UNINDENT
.INDENT 7.0
.TP
.B get_workflow()
Returns the instantiated workflow class.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
Handler for HTTP POST requests.
.UNINDENT
.INDENT 7.0
.TP
.B validate_steps(request, workflow, start, end)
Validates the workflow steps from \fBstart\fP to \fBend\fP, inclusive.
.sp
Returns a dict describing the validation state of the workflow.
.UNINDENT
.UNINDENT
.SS Horizon DataTables
.sp
Horizon includes a componentized API for programmatically creating tables
in the UI. Why would you want this? It means that every table renders
correctly and consistently, table\- and row\-level actions all have a consistent
API and appearance, and generally you don\(aqt have to reinvent the wheel or
copy\-and\-paste every time you need a new table!
.INDENT 0.0
.INDENT 3.5
.sp
\fBSEE ALSO:\fP
.INDENT 0.0
.INDENT 3.5
For usage information, tips & tricks and more examples check out the \fBDataTables Topic
Guide\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS DataTable
.sp
The core class which defines the high\-level structure of the table being
represented. Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class MyTable(DataTable):
    name = Column(\(aqname\(aq)
    email = Column(\(aqemail\(aq)

    class Meta:
        name = "my_table"
        table_actions = (MyAction, MyOtherAction)
        row_actions \- (MyAction)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
A full reference is included below:
.INDENT 0.0
.TP
.B class horizon.tables.DataTable(request, data=None, needs_form_wrapper=None, **kwargs)
A class which defines a table with all data and associated actions.
.INDENT 7.0
.TP
.B name
String. Read\-only access to the name specified in the
table\(aqs Meta options.
.UNINDENT
.INDENT 7.0
.TP
.B multi_select
Boolean. Read\-only access to whether or not this table
should display a column for multi\-select checkboxes.
.UNINDENT
.INDENT 7.0
.TP
.B data
Read\-only access to the data this table represents.
.UNINDENT
.INDENT 7.0
.TP
.B filtered_data
Read\-only access to the data this table represents, filtered by
the \fBfilter()\fP method of the table\(aqs
\fBFilterAction\fP class (if one is provided)
using the current request\(aqs query parameters.
.UNINDENT
.INDENT 7.0
.TP
.B calculate_row_status(statuses)
Returns a boolean value determining the overall row status
based on the dictionary of column name to status mappings passed in.
.sp
By default, it uses the following logic:
.INDENT 7.0
.IP 1. 3
If any statuses are \fBFalse\fP, return \fBFalse\fP\&.
.IP 2. 3
If no statuses are \fBFalse\fP but any or \fBNone\fP, return \fBNone\fP\&.
.IP 3. 3
If all statuses are \fBTrue\fP, return \fBTrue\fP\&.
.UNINDENT
.sp
This provides the greatest protection against false positives without
weighting any particular columns.
.sp
The \fBstatuses\fP parameter is passed in as a dictionary mapping
column names to their statuses in order to allow this function to
be overridden in such a way as to weight one column\(aqs status over
another should that behavior be desired.
.UNINDENT
.INDENT 7.0
.TP
.B classmethod check_handler(request)
Determine whether the request should be handled by this table.
.UNINDENT
.INDENT 7.0
.TP
.B css_classes()
Returns the additional CSS class to be added to <table> tag.
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the canonical URL for this table.
.sp
This is used for the POST action attribute on the form element
wrapping the table. In many cases it is also useful for redirecting
after a successful action on the table.
.sp
For convenience it defaults to the value of
\fBrequest.get_full_path()\fP with any query string stripped off,
e.g. the path at which the table was requested.
.UNINDENT
.INDENT 7.0
.TP
.B get_columns()
Returns this table\(aqs columns including auto\-generated ones.
.UNINDENT
.INDENT 7.0
.TP
.B get_empty_message()
Returns the message to be displayed when there is no data.
.UNINDENT
.INDENT 7.0
.TP
.B get_filter_field()
Get the filter field value used for \(aqserver\(aq type filters. This
is the value from the filter action\(aqs list of filter choices.
.UNINDENT
.INDENT 7.0
.TP
.B get_filter_string()
Get the filter string value. For \(aqserver\(aq type filters this is
saved in the session so that it gets persisted across table loads.
For other filter types this is obtained from the POST dict.
.UNINDENT
.INDENT 7.0
.TP
.B get_full_url()
Returns the full URL path for this table.
.sp
This is used for the POST action attribute on the form element
wrapping the table. We use this method to persist the
pagination marker.
.UNINDENT
.INDENT 7.0
.TP
.B get_marker()
Returns the identifier for the last object in the current data set
for APIs that use marker/limit\-based paging.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_by_id(lookup)
Returns the data object from the table\(aqs dataset which matches
the \fBlookup\fP parameter specified. An error will be raised if
the match is not a single data object.
.sp
We will convert the object id and \fBlookup\fP to unicode before
comparison.
.sp
Uses \fBget_object_id()\fP internally.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(datum)
Returns a display name that identifies this object.
.sp
By default, this returns a \fBname\fP attribute from the given object,
but this can be overridden to return other values.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(datum)
Returns the identifier for the object this row will represent.
.sp
By default this returns an \fBid\fP attribute on the given object,
but this can be overridden to return other values.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
Make sure that the value returned is a unique value for the id
otherwise rendering issues can occur.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_pagination_string()
Returns the query parameter string to paginate this table
to the next page.
.UNINDENT
.INDENT 7.0
.TP
.B get_prev_marker()
Returns the identifier for the first object in the current data set
for APIs that use marker/limit\-based paging.
.UNINDENT
.INDENT 7.0
.TP
.B get_prev_pagination_string()
Returns the query parameter string to paginate this table
to the previous page.
.UNINDENT
.INDENT 7.0
.TP
.B get_row_actions(datum)
Returns a list of the action instances for a specific row.
.UNINDENT
.INDENT 7.0
.TP
.B get_row_status_class(status)
Returns a css class name determined by the status value. This class
name is used to indicate the status of the rows in the table if
any \fBstatus_columns\fP have been specified.
.UNINDENT
.INDENT 7.0
.TP
.B get_rows()
Return the row data for this table broken out by columns.
.UNINDENT
.INDENT 7.0
.TP
.B get_table_actions()
Returns a list of the action instances for this table.
.UNINDENT
.INDENT 7.0
.TP
.B has_actions
Boolean. Indicates whether there are any available actions on this
table.
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data()
Returns a boolean value indicating whether there is more data
available to this table from the source (generally an API).
.sp
The method is largely meant for internal use, but if you want to
override it to provide custom behavior you can do so at your own risk.
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data()
Returns a boolean value indicating whether there is previous data
available to this table from the source (generally an API).
.sp
The method is largely meant for internal use, but if you want to
override it to provide custom behavior you can do so at your own risk.
.UNINDENT
.INDENT 7.0
.TP
.B inline_edit_handle(request, table_name, action_name, obj_id, new_row)
Inline edit handler.
.sp
Showing form or handling update by POST of the cell.
.UNINDENT
.INDENT 7.0
.TP
.B inline_update_action(request, datum, cell, obj_id, cell_name)
Handling update by POST of the cell.
.UNINDENT
.INDENT 7.0
.TP
.B maybe_handle()
Determine whether the request should be handled by any action on
this table after data has been loaded.
.UNINDENT
.INDENT 7.0
.TP
.B maybe_preempt()
Determine whether the request should be handled by a preemptive
action on this table or by an AJAX row update before loading any data.
.UNINDENT
.INDENT 7.0
.TP
.B needs_form_wrapper
Boolean. Indicates whether this table should be rendered wrapped in
a \fB<form>\fP tag or not.
.UNINDENT
.INDENT 7.0
.TP
.B static parse_action(action_string)
Parses the \fBaction\fP parameter (a string) sent back with the
POST data. By default this parses a string formatted as
\fB{{ table_name }}__{{ action_name }}__{{ row_id }}\fP and returns
each of the pieces. The \fBrow_id\fP is optional.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the table using the template from the table options.
.UNINDENT
.INDENT 7.0
.TP
.B render_row_actions(datum, pull_right=True, row=False)
Renders the actions specified in \fBMeta.row_actions\fP using the
current row data. If \fIrow\fP is True, the actions are rendered in a row
of buttons. Otherwise they are rendered in a dropdown box.
.UNINDENT
.INDENT 7.0
.TP
.B render_table_actions()
Renders the actions specified in \fBMeta.table_actions\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B sanitize_id(obj_id)
Override to modify an incoming obj_id to match existing
API data types or modify the format.
.UNINDENT
.INDENT 7.0
.TP
.B set_multiselect_column_visibility(visible=True)
hide checkbox column if no current table action is allowed.
.UNINDENT
.INDENT 7.0
.TP
.B take_action(action_name, obj_id=None, obj_ids=None)
Locates the appropriate action and routes the object
data to it. The action should return an HTTP redirect
if successful, or a value which evaluates to \fBFalse\fP
if unsuccessful.
.UNINDENT
.UNINDENT
.SS DataTable Options
.sp
The following options can be defined in a \fBMeta\fP class inside a
\fBDataTable\fP class. Example:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
class MyTable(DataTable):
    class Meta:
        name = "my_table"
        verbose_name = "My Table"
.ft P
.fi
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.base.DataTableOptions(options)
Contains options for \fBDataTable\fP objects.
.INDENT 7.0
.TP
.B name
A short name or slug for the table.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A more verbose name for the table meant for display purposes.
.UNINDENT
.INDENT 7.0
.TP
.B columns
A list of column objects or column names. Controls ordering/display
of the columns in the table.
.UNINDENT
.INDENT 7.0
.TP
.B table_actions
A list of action classes derived from the
\fBAction\fP class. These actions will handle tasks
such as bulk deletion, etc. for multiple objects at once.
.UNINDENT
.INDENT 7.0
.TP
.B table_actions_menu
A list of action classes similar to \fBtable_actions\fP except these
will be displayed in a menu instead of as individual buttons. Actions
from this list will take precedence over actions from the
\fBtable_actions\fP list.
.UNINDENT
.INDENT 7.0
.TP
.B row_actions
A list similar to \fBtable_actions\fP except tailored to appear for
each row. These actions act on a single object at a time.
.UNINDENT
.INDENT 7.0
.TP
.B actions_column
Boolean value to control rendering of an additional column containing
the various actions for each row. Defaults to \fBTrue\fP if any actions
are specified in the \fBrow_actions\fP option.
.UNINDENT
.INDENT 7.0
.TP
.B multi_select
Boolean value to control rendering of an extra column with checkboxes
for selecting multiple objects in the table. Defaults to \fBTrue\fP if
any actions are specified in the \fBtable_actions\fP option.
.UNINDENT
.INDENT 7.0
.TP
.B filter
Boolean value to control the display of the "filter" search box
in the table actions. By default it checks whether or not an instance
of \fBFilterAction\fP is in \fBtable_actions\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B template
String containing the template which should be used to render the
table. Defaults to \fB"horizon/common/_data_table.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B context_var_name
The name of the context variable which will contain the table when
it is rendered. Defaults to \fB"table"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B prev_pagination_param
The name of the query string parameter which will be used when
paginating backward in this table. When using multiple tables in a
single view this will need to be changed to differentiate between the
tables. Default: \fB"prev_marker"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B pagination_param
The name of the query string parameter which will be used when
paginating forward in this table. When using multiple tables in a
single view this will need to be changed to differentiate between the
tables. Default: \fB"marker"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B status_columns
A list or tuple of column names which represents the "state"
of the data object being represented.
.sp
If \fBstatus_columns\fP is set, when the rows are rendered the value
of this column will be used to add an extra class to the row in
the form of \fB"status_up"\fP or \fB"status_down"\fP for that row\(aqs
data.
.sp
The row status is used by other Horizon components to trigger tasks
such as dynamic AJAX updating.
.UNINDENT
.INDENT 7.0
.TP
.B cell_class
The class which should be used for rendering the cells of this table.
Optional. Default: \fBCell\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B row_class
The class which should be used for rendering the rows of this table.
Optional. Default: \fBRow\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B column_class
The class which should be used for handling the columns of this table.
Optional. Default: \fBColumn\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B css_classes
A custom CSS class or classes to add to the \fB<table>\fP tag of the
rendered table, for when the particular table requires special styling.
Default: \fB""\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B mixed_data_type
A toggle to indicate if the table accepts two or more types of data.
Optional. Default: \fBFalse\fP
.UNINDENT
.INDENT 7.0
.TP
.B data_types
A list of data types that this table would accept. Default to be an
empty list, but if the attribute \fBmixed_data_type\fP is set to
\fBTrue\fP, then this list must have at least one element.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_name
The name of an attribute to assign to data passed to the table when it
accepts mix data. Default: \fB"_table_data_type"\fP
.UNINDENT
.INDENT 7.0
.TP
.B footer
Boolean to control whether or not to show the table\(aqs footer.
Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B hidden_title
Boolean to control whether or not to show the table\(aqs title.
Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names which this table requires in order to be
displayed. Defaults to an empty list (\fB[]\fP).
.UNINDENT
.UNINDENT
.SS FormsetDataTable
.sp
You can integrate the \fBDataTable\fP with a Django Formset using one of following classes:
.INDENT 0.0
.TP
.B class horizon.tables.formset.FormsetDataTableMixin(*args, **kwargs)
A mixin for DataTable to support Django Formsets.
.sp
This works the same as the \fBFormsetDataTable\fP below, but can be used
to add to existing DataTable subclasses.
.INDENT 7.0
.TP
.B get_empty_row()
Return a row with no data, for adding at the end of the table.
.UNINDENT
.INDENT 7.0
.TP
.B get_formset()
Provide the formset corresponding to this DataTable.
.sp
Use this to validate the formset and to get the submitted data back.
.UNINDENT
.INDENT 7.0
.TP
.B get_required_columns()
Lists names of columns that have required fields.
.UNINDENT
.INDENT 7.0
.TP
.B get_rows()
Return the row data for this table broken out by columns.
.sp
The row objects get an additional \fBform\fP parameter, with the
formset form corresponding to that row.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.formset.FormsetDataTable(*args, **kwargs)
A DataTable with support for Django Formsets.
.sp
Note that \fBhorizon.tables.DataTableOptions.row_class\fP and
\fBhorizon.tables.DataTaleOptions.cell_class\fP are overwritten in this
class, so setting them in \fBMeta\fP has no effect.
.INDENT 7.0
.TP
.B formset_class
A class made with \fBdjango.forms.formsets.formset_factory\fP
containing the definition of the formset to use with this data table.
.sp
The columns that are named the same as the formset fields will be
replaced with form widgets in the table. Any hidden fields from the
formset will also be included. The fields that are not hidden and
don\(aqt correspond to any column will not be included in the form.
.UNINDENT
.UNINDENT
.SS Table Components
.INDENT 0.0
.TP
.B class horizon.tables.Column(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
A class which represents a single column in a \fBDataTable\fP\&.
.INDENT 7.0
.TP
.B transform
A string or callable. If \fBtransform\fP is a string, it should be the
name of the attribute on the underlying data class which
should be displayed in this column. If it is a callable, it
will be passed the current row\(aqs data at render\-time and should
return the contents of the cell. Required.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
The name for this column which should be used for display purposes.
Defaults to the value of \fBtransform\fP with the first letter
of each word capitalized if the \fBtransform\fP is not callable,
otherwise it defaults to an empty string (\fB""\fP).
.UNINDENT
.INDENT 7.0
.TP
.B sortable
Boolean to determine whether this column should be sortable or not.
Defaults to \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B hidden
Boolean to determine whether or not this column should be displayed
when rendering the table. Default: \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B link
A string or callable which returns a URL which will be wrapped around
this column\(aqs text as a link.
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types
A list of data types for which the link should be created.
Default is an empty list (\fB[]\fP).
.sp
When the list is empty and the \fBlink\fP attribute is not None, all the
rows under this column will be links.
.UNINDENT
.INDENT 7.0
.TP
.B status
Boolean designating whether or not this column represents a status
(i.e. "enabled/disabled", "up/down", "active/inactive").
Default: \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B status_choices
A tuple of tuples representing the possible data values for the
status column and their associated boolean equivalent. Positive
states should equate to \fBTrue\fP, negative states should equate
to \fBFalse\fP, and indeterminate states should be \fBNone\fP\&.
.sp
Values are compared in a case\-insensitive manner.
.sp
Example (these are also the default values):
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
status_choices = (
        (\(aqenabled\(aq, True),
        (\(aqtrue\(aq, True)
        (\(aqup\(aq, True),
        (\(aqactive\(aq, True),
        (\(aqyes\(aq, True),
        (\(aqon\(aq, True),
        (\(aqnone\(aq, None),
        (\(aqunknown\(aq, None),
        (\(aq\(aq, None),
        (\(aqdisabled\(aq, False),
        (\(aqdown\(aq, False),
        (\(aqfalse\(aq, False),
        (\(aqinactive\(aq, False),
        (\(aqno\(aq, False),
        (\(aqoff\(aq, False),
    )
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B display_choices
A tuple of tuples representing the possible values to substitute
the data when displayed in the column cell.
.UNINDENT
.INDENT 7.0
.TP
.B empty_value
A string or callable to be used for cells which have no data.
Defaults to the string \fB"\-"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B summation
A string containing the name of a summation method to be used in
the generation of a summary row for this column. By default the
options are \fB"sum"\fP or \fB"average"\fP, which behave as expected.
Optional.
.UNINDENT
.INDENT 7.0
.TP
.B filters
A list of functions (often template filters) to be applied to the
value of the data for this column prior to output. This is effectively
a shortcut for writing a custom \fBtransform\fP function in simple cases.
.UNINDENT
.INDENT 7.0
.TP
.B classes
An iterable of CSS classes which should be added to this column.
Example: \fBclasses=(\(aqfoo\(aq, \(aqbar\(aq)\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B attrs
A dict of HTML attribute strings which should be added to this column.
Example: \fBattrs={"data\-foo": "bar"}\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B cell_attributes_getter
A callable to get the HTML attributes of a column cell depending
on the data. For example, to add additional description or help
information for data in a column cell (e.g. in Images panel, for the
column \(aqformat\(aq):
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
helpText = {
  \(aqARI\(aq:\(aqAmazon Ramdisk Image\(aq
  \(aqQCOW2\(aq:\(aqQEMU\(aq Emulator\(aq
  }

getHoverHelp(data):
  text = helpText.get(data, None)
  if text:
      return {\(aqtitle\(aq: text}
  else:
      return {}
\&...
\&...
cell_attributes_getter = getHoverHelp
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B truncate
An integer for the maximum length of the string in this column. If the
length of the data in this column is larger than the supplied number,
the data for this column will be truncated and an ellipsis will be
appended to the truncated data.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B link_classes
An iterable of CSS classes which will be added when the column\(aqs text
is displayed as a link.
This is left for backward compatibility. Deprecated in favor of the
link_attributes attribute.
Example: \fBlink_classes=(\(aqlink\-foo\(aq, \(aqlink\-bar\(aq)\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B wrap_list
Boolean value indicating whether the contents of this cell should be
wrapped in a \fB<ul></ul>\fP tag. Useful in conjunction with Django\(aqs
\fBunordered_list\fP template filter. Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B form_field
A form field used for inline editing of the column. A django
forms.Field can be used or django form.Widget can be used.
.sp
Example: \fBform_field=forms.CharField(required=True)\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B form_field_attributes
The additional html attributes that will be rendered to form_field.
Example: \fBform_field_attributes={\(aqclass\(aq: \(aqbold_input_field\(aq}\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B update_action
The class that inherits from tables.actions.UpdateAction, update_cell
method takes care of saving inline edited data. The tables.base.Row
get_data method needs to be connected to table for obtaining the data.
Example: \fBupdate_action=UpdateCell\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B link_attrs
A dict of HTML attribute strings which should be added when the
column\(aqs text is displayed as a link.
Examples:
\fBlink_attrs={"data\-foo": "bar"}\fP\&.
\fBlink_attrs={"target": "_blank", "class": "link\-foo link\-bar"}\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B help_text
A string of simple help text displayed in a tooltip when you hover
over the help icon beside the Column name. Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_data(datum)
Returns the final display data for this column from the given
inputs.
.sp
The return value will be either the attribute specified for this column
or the return value of the attr:\fI~horizon.tables.Column.transform\fP
method for this column.
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
Returns the final value for the column\(aqs \fBlink\fP property.
.sp
If \fBallowed_data_types\fP of this column  is not empty and the datum
has an assigned type, check if the datum\(aqs type is in the
\fBallowed_data_types\fP list. If not, the datum won\(aqt be displayed
as a link.
.sp
If \fBlink\fP is a callable, it will be passed the current data object
and should return a URL. Otherwise \fBget_link_url\fP will attempt to
call \fBreverse\fP on \fBlink\fP with the object\(aqs id as a parameter.
Failing that, it will simply return the value of \fBlink\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_raw_data(datum)
Returns the raw data for this column, before any filters or
formatting are applied to it. This is useful when doing calculations
on data in the table.
.UNINDENT
.INDENT 7.0
.TP
.B get_summation()
Returns the summary value for the data in this column if a
valid summation method is specified for it. Otherwise returns \fBNone\fP\&.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.Row(table, datum=None)
Represents a row in the table.
.sp
When iterated, the \fBRow\fP instance will yield each of its cells.
.sp
Rows are capable of AJAX updating, with a little added work:
.sp
The \fBajax\fP property needs to be set to \fBTrue\fP, and
subclasses need to define a \fBget_data\fP method which returns a data
object appropriate for consumption by the table (effectively the "get"
lookup versus the table\(aqs "list" lookup).
.sp
The automatic update interval is configurable by setting the key
\fBajax_poll_interval\fP in the \fBHORIZON_CONFIG\fP dictionary.
Default: \fB2500\fP (measured in milliseconds).
.INDENT 7.0
.TP
.B table
The table which this row belongs to.
.UNINDENT
.INDENT 7.0
.TP
.B datum
The data object which this row represents.
.UNINDENT
.INDENT 7.0
.TP
.B id
A string uniquely representing this row composed of the table name
and the row data object\(aqs identifier.
.UNINDENT
.INDENT 7.0
.TP
.B cells
The cells belonging to this row stored in a \fBOrderedDict\fP object.
This attribute is populated during instantiation.
.UNINDENT
.INDENT 7.0
.TP
.B status
Boolean value representing the status of this row calculated from
the values of the table\(aqs \fBstatus_columns\fP if they are set.
.UNINDENT
.INDENT 7.0
.TP
.B status_class
Returns a css class for the status of the row based on \fBstatus\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B ajax
Boolean value to determine whether ajax updating for this row is
enabled.
.UNINDENT
.INDENT 7.0
.TP
.B ajax_action_name
String that is used for the query parameter key to request AJAX
updates. Generally you won\(aqt need to change this value.
Default: \fB"row_update"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B ajax_cell_action_name
String that is used for the query parameter key to request AJAX
updates of cell. Generally you won\(aqt need to change this value.
It is also used for inline edit of the cell.
Default: \fB"cell_update"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B can_be_selected(datum)
By default if multiselect enabled return True. You can remove the
checkbox after an ajax update here if required.
.UNINDENT
.INDENT 7.0
.TP
.B get_cells()
Returns the bound cells for this row in order.
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, obj_id)
Fetches the updated data for the row based on the object id
passed in. Must be implemented by a subclass to allow AJAX updating.
.UNINDENT
.INDENT 7.0
.TP
.B load_cells(datum=None)
Load the row\(aqs data (either provided at initialization or as an
argument to this function), initialize all the cells contained
by this row, and set the appropriate row properties which require
the row\(aqs data to be determined.
.sp
This function is called automatically by
\fB__init__()\fP if the \fBdatum\fP argument is
provided. However, by not providing the data during initialization
this function allows for the possibility of a two\-step loading
pattern when you need a row instance but don\(aqt yet have the data
available.
.UNINDENT
.UNINDENT
.SS Actions
.INDENT 0.0
.TP
.B class horizon.tables.Action(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Represents an action which can be taken on this table\(aqs data.
.INDENT 7.0
.TP
.B name
Required. The short name or "slug" representing this
action. This name should not be changed at runtime.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A descriptive name used for display purposes. Defaults to the
value of \fBname\fP with the first letter of each word capitalized.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name_plural
Used like \fBverbose_name\fP in cases where \fBhandles_multiple\fP is
\fBTrue\fP\&. Defaults to \fBverbose_name\fP with the letter "s" appended.
.UNINDENT
.INDENT 7.0
.TP
.B method
The HTTP method for this action. Defaults to \fBPOST\fP\&. Other methods
may or may not succeed currently.
.UNINDENT
.INDENT 7.0
.TP
.B requires_input
Boolean value indicating whether or not this action can be taken
without any additional input (e.g. an object id). Defaults to \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B preempt
Boolean value indicating whether this action should be evaluated in
the period after the table is instantiated but before the data has
been loaded.
.sp
This can allow actions which don\(aqt need access to the full table data
to bypass any API calls and processing which would otherwise be
required to load the table.
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types
A list that contains the allowed data types of the action.  If the
datum\(aqs type is in this list, the action will be shown on the row
for the datum.
.sp
Default to be an empty list (\fB[]\fP). When set to empty, the action
will accept any kind of data.
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules
list of scope and rule tuples to do policy checks on, the
composition of which is (scope, rule)
.INDENT 7.0
.INDENT 3.5
scope: service type managing the policy for action
rule: string representing the action to be checked
.INDENT 0.0
.TP
.B for a policy that requires a single rule check:
.INDENT 7.0
.TP
.B policy_rules should look like
"(("compute", "compute:create_instance"),)"
.UNINDENT
.TP
.B for a policy that requires multiple rule checks:
.INDENT 7.0
.TP
.B rules should look like
.INDENT 7.0
.TP
.B "(("identity", "identity:list_users"),
("identity", "identity:list_roles"))"
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
At least one of the following methods must be defined:
.INDENT 7.0
.TP
.B single(self, data_table, request, object_id)
Handler for a single\-object action.
.UNINDENT
.INDENT 7.0
.TP
.B multiple(self, data_table, request, object_ids)
Handler for multi\-object actions.
.UNINDENT
.INDENT 7.0
.TP
.B handle(self, data_table, request, object_ids)
If a single function can work for both single\-object and
multi\-object cases then simply providing a \fBhandle\fP function
will internally route both \fBsingle\fP and \fBmultiple\fP requests
to \fBhandle\fP with the calls from \fBsingle\fP being transformed
into a list containing only the single object id.
.UNINDENT
.INDENT 7.0
.TP
.B get_param_name()
Returns the full POST parameter name for this action.
.sp
Defaults to
\fB{{ table.name }}__{{ action.name }}\fP\&.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.LinkAction(attrs=None, **kwargs)
A table action which is simply a link rather than a form POST.
.INDENT 7.0
.TP
.B name
Required. The short name or "slug" representing this
action. This name should not be changed at runtime.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A string which will be rendered as the link text. (Required)
.UNINDENT
.INDENT 7.0
.TP
.B url
A string or a callable which resolves to a url to be used as the link
target. You must either define the \fBurl\fP attribute or override
the \fBget_link_url\fP method on the class.
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types
A list that contains the allowed data types of the action.  If the
datum\(aqs type is in this list, the action will be shown on the row
for the datum.
.sp
Defaults to be an empty list (\fB[]\fP). When set to empty, the action
will accept any kind of data.
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
Returns the final URL based on the value of \fBurl\fP\&.
.sp
If \fBurl\fP is callable it will call the function.
If not, it will then try to call \fBreverse\fP on \fBurl\fP\&.
Failing that, it will simply return the value of \fBurl\fP as\-is.
.sp
When called for a row action, the current row data object will be
passed as the first parameter.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.FilterAction(**kwargs)
A base class representing a filter action for a table.
.INDENT 7.0
.TP
.B name
The short name or "slug" representing this action. Defaults to
\fB"filter"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A descriptive name used for display purposes. Defaults to the
value of \fBname\fP with the first letter of each word capitalized.
.UNINDENT
.INDENT 7.0
.TP
.B param_name
A string representing the name of the request parameter used for the
search term. Default: \fB"q"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B filter_type
A string representing the type of this filter. If this is set to
\fB"server"\fP then \fBfilter_choices\fP must also be provided.
Default: \fB"query"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices
Required for server type filters. A tuple of tuples representing the
filter options. Tuple composition should evaluate to (string, string,
boolean), representing the filter parameter, display value, and whether
or not it should be applied to the API request as an API query
attribute. API type filters do not need to be accounted for in the
filter method since the API will do the filtering. However, server
type filters in general will need to be performed in the filter method.
By default this attribute is not provided.
.UNINDENT
.INDENT 7.0
.TP
.B needs_preloading
If True, the filter function will be called for the initial
GET request with an empty \fBfilter_string\fP, regardless of the
value of \fBmethod\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, data, filter_string)
Provides the actual filtering logic.
.sp
This method must be overridden by subclasses and return
the filtered data.
.UNINDENT
.INDENT 7.0
.TP
.B get_param_name()
Returns the full query parameter name for this action.
.sp
Defaults to
\fB{{ table.name }}__{{ action.name }}__{{ action.param_name }}\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B is_api_filter(filter_field)
Determine if the given filter field should be used as an
API filter.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.FixedFilterAction(**kwargs)
A filter action with fixed buttons.
.INDENT 7.0
.TP
.B categorize(table, images)
Override to separate images into categories.
.sp
Return a dict with a key for the value of each fixed button,
and a value that is a list of images in that category.
.UNINDENT
.INDENT 7.0
.TP
.B get_fixed_buttons()
Returns a list of dictionaries describing the fixed buttons
to use for filtering.
.sp
Each list item should be a dict with the following keys:
.INDENT 7.0
.IP \(bu 2
\fBtext\fP: Text to display on the button
.IP \(bu 2
\fBicon\fP: Icon class for icon element (inserted before text).
.IP \(bu 2
\fBvalue\fP: Value returned when the button is clicked. This value is
passed to \fBfilter()\fP as \fBfilter_string\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.BatchAction(**kwargs)
A table action which takes batch action on one or more
objects. This action should not require user input on a
per\-object basis.
.INDENT 7.0
.TP
.B name
An internal name for this action.
.UNINDENT
.INDENT 7.0
.TP
.B action_present()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_present(PendingDeprecation)
String or tuple/list. The display forms of the name.
Should be a transitive verb, capitalized and translated. ("Delete",
"Rotate", etc.) If tuple or list \- then setting
self.current_present_action = n will set the current active item
from the list(action_present[n])
.sp
You can pass a complete action name including \(aqdata_type\(aq by specifying
\(aq%(data_type)s\(aq substitution in action_present ("Delete %(data_type)s").
Otherwise a complete action name is a format of "<action> <data_type>".
<data_type> is determined based on the number of items.
By passing a complete action name you allow translators to control
the order of words as they want.
.sp
NOTE: action_present attribute is bad for translations and should be
avoided. Please use the action_present method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B action_past()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_past(PendingDeprecation)
String or tuple/list. The past tense of action_present. ("Deleted",
"Rotated", etc.) If tuple or list \- then
setting self.current_past_action = n will set the current active item
from the list(action_past[n])
.sp
NOTE: action_past attribute is bad for translations and should be
avoided. Please use the action_past method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular
Optional display name (if the data_type method is not defined) for the
type of data that receives the action. ("Key Pair", "Floating IP", etc.)
.UNINDENT
.INDENT 7.0
.TP
.B data_type_plural
Optional plural word (if the data_type method is not defined) for the
type of data being acted on. Defaults to appending \(aqs\(aq. Relying on the
default is bad for translations and should not be done, so it\(aqs absence
will raise a DeprecationWarning. It is currently kept as optional for
legacy code.
.sp
NOTE: data_type_singular and data_type_plural attributes are bad for
translations and should be avoided. Please use the action_present and
action_past methods. This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B success_url
Optional location to redirect after completion of the delete
action. Defaults to the current page.
.UNINDENT
.INDENT 7.0
.TP
.B help_text
Optional message for providing an appropriate help text for
the horizon user.
.UNINDENT
.INDENT 7.0
.TP
.B action(request, datum_id)
Required. Accepts a single object id and performs the specific
action.
.sp
Return values are discarded, errors raised are caught and logged.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_attrs()
Returns a list of the default HTML attributes for the action.
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request=None)
Returns the URL to redirect to after a successful action.
.UNINDENT
.INDENT 7.0
.TP
.B update(request, datum)
Switches the action verbose name, if needed.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.DeleteAction(**kwargs)
A table action used to perform delete operations on table data.
.INDENT 7.0
.TP
.B name
A short name or "slug" representing this action.
Defaults to \(aqdelete\(aq
.UNINDENT
.INDENT 7.0
.TP
.B action_present()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_present(PendingDeprecation)
A string containing the transitive verb describing the delete action.
Defaults to \(aqDelete\(aq
.sp
NOTE: action_present attribute is bad for translations and should be
avoided. Please use the action_present method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B action_past()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_past(PendingDeprecation)
A string set to the past tense of action_present.
Defaults to \(aqDeleted\(aq
.sp
NOTE: action_past attribute is bad for translations and should be
avoided. Please use the action_past method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular(PendingDeprecation)
A string used to name the data to be deleted.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_plural(PendingDeprecation)
Optional. Plural of \fBdata_type_singular\fP\&.
Defaults to \fBdata_type_singular\fP appended with an \(aqs\(aq.  Relying on
the default is bad for translations and should not be done, so it\(aqs
absence will raise a DeprecationWarning. It is currently kept as
optional for legacy code.
.sp
NOTE: data_type_singular and data_type_plural attributes are bad for
translations and should be avoided. Please use the action_present and
action_past methods. This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B action(request, obj_id)
Action entry point. Overrides base class\(aq action method.
.sp
Accepts a single object id passing it over to the delete method
responsible for the object\(aqs destruction.
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
Required. Deletes an object referenced by obj_id.
.sp
Override to provide delete functionality specific to your data.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Appends \fBbtn\-danger\fP to the action\(aqs default css classes.
.sp
This method ensures the corresponding button is highlighted
as a trigger for a potentially dangerous action.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.UpdateAction
A table action for cell updates by inline editing.
.INDENT 7.0
.TP
.B allowed(request, datum, cell)
Determine whether updating is allowed for the current request.
.sp
This method is meant to be overridden with more specific checks.
Data of the row and of the cell are passed to the method.
.UNINDENT
.INDENT 7.0
.TP
.B update_cell(request, datum, obj_id, cell_name, new_cell_value)
Method for saving data of the cell.
.sp
This method must implements saving logic of the inline edited table
cell.
.UNINDENT
.UNINDENT
.SS Class\-Based Views
.sp
Several class\-based views are provided to make working with DataTables
easier in your UI.
.INDENT 0.0
.TP
.B class horizon.tables.DataTableView(*args, **kwargs)
A class\-based generic view to handle basic DataTable processing.
.sp
Three steps are required to use this view: set the \fBtable_class\fP
attribute with the desired \fBDataTable\fP class;
define a \fBget_data\fP method which returns a set of data for the
table; and specify a template for the \fBtemplate_name\fP attribute.
.sp
Optionally, you can override the \fBhas_more_data\fP method to trigger
pagination handling for APIs that support it.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.MultiTableView(*args, **kwargs)
A class\-based generic view to handle the display and processing of
multiple \fBDataTable\fP classes in a single view.
.sp
Three steps are required to use this view: set the \fBtable_classes\fP
attribute with a tuple of the desired
\fBDataTable\fP classes;
define a \fBget_{{ table_name }}_data\fP method for each table class
which returns a set of data for that table; and specify a template for
the \fBtemplate_name\fP attribute.
.UNINDENT
.SS Horizon Tabs and TabGroups
.sp
Horizon includes a set of reusable components for programmatically
building tabbed interfaces with fancy features like dynamic AJAX loading
and nearly effortless templating and styling.
.SS Tab Groups
.sp
For any tabbed interface, your fundamental element is the tab group which
contains all your tabs. This class provides a dead\-simple API for building
tab groups and encapsulates all the necessary logic behind the scenes.
.INDENT 0.0
.TP
.B class horizon.tabs.TabGroup(request, **kwargs)
A container class which knows how to manage and render
\fBTab\fP objects.
.INDENT 7.0
.TP
.B slug
The URL slug and pseudo\-unique identifier for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
The name of the template which will be used to render this tab group.
Default: \fB"horizon/common/_tab_group.html"\fP
.UNINDENT
.INDENT 7.0
.TP
.B sticky
Boolean to control whether the active tab state should be stored
across requests for a given user. (State storage is all done
client\-side.)
.UNINDENT
.INDENT 7.0
.TP
.B show_single_tab
Boolean to control whether the tab bar is shown when the tab group
has only one tab. Default: \fBFalse\fP
.UNINDENT
.INDENT 7.0
.TP
.B param_name
The name of the GET request parameter which will be used when
requesting specific tab data. Default: \fBtab\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B classes
A list of CSS classes which should be displayed on this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B attrs
A dictionary of HTML attributes which should be rendered into the
markup for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B selected
Read\-only property which is set to the instance of the
currently\-selected tab if there is one, otherwise \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B active
Read\-only property which is set to the value of the current active tab.
This may not be the same as the value of \fBselected\fP if no
specific tab was requested via the \fBGET\fP parameter.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns a list of the default classes for the tab group. Defaults to
\fB["nav", "nav\-tabs", "ajax\-tabs"]\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_id()
Returns the id for this tab group. Defaults to the value of the tab
group\(aqs \fBhorizon.tabs.Tab.slug\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_selected_tab()
Returns the tab specific by the GET request parameter.
.sp
In the event that there is no GET request parameter, the value
of the query parameter is invalid, or the tab is not allowed/enabled,
the return value of this function is None.
.UNINDENT
.INDENT 7.0
.TP
.B get_tab(tab_name, allow_disabled=False)
Returns a specific tab from this tab group.
.sp
If the tab is not allowed or not enabled this method returns \fBNone\fP\&.
.sp
If the tab is disabled but you wish to return it anyway, you can pass
\fBTrue\fP to the allow_disabled argument.
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs()
Returns a list of the allowed tabs for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B load_tab_data()
Preload all data that for the tabs that will be displayed.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the HTML output for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B tabs_not_available()
In the event that no tabs are either allowed or enabled, this method
is the fallback handler. By default it\(aqs a no\-op, but it exists
to make redirecting or raising exceptions possible for subclasses.
.UNINDENT
.UNINDENT
.SS Tabs
.sp
The tab itself is the discrete unit for a tab group, representing one
view of data.
.INDENT 0.0
.TP
.B class horizon.tabs.Tab(tab_group, request=None)
A reusable interface for constructing a tab within a
\fBTabGroup\fP\&.
.INDENT 7.0
.TP
.B name
The display name for the tab which will be rendered as the text for
the tab element in the HTML. Required.
.UNINDENT
.INDENT 7.0
.TP
.B slug
The URL slug and id attribute for the tab. This should be unique for
a given tab group. Required.
.UNINDENT
.INDENT 7.0
.TP
.B preload
Determines whether the contents of the tab should be rendered into
the page\(aqs HTML when the tab group is rendered, or whether it should
be loaded dynamically when the tab is selected. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B classes
A list of CSS classes which should be displayed on this tab.
.UNINDENT
.INDENT 7.0
.TP
.B attrs
A dictionary of HTML attributes which should be rendered into the
markup for this tab.
.UNINDENT
.INDENT 7.0
.TP
.B load
Read\-only access to determine whether or not this tab\(aqs data should
be loaded immediately.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names which this tab requires in order to be
displayed. Defaults to an empty list (\fB[]\fP).
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request)
Determines whether or not the tab is displayed.
.sp
Tab instances can override this method to specify conditions under
which this tab should not be shown at all by returning \fBFalse\fP\&.
.sp
The default behavior is to return \fBTrue\fP for all cases.
.UNINDENT
.INDENT 7.0
.TP
.B enabled(request)
Determines whether or not the tab should be accessible
(e.g. be rendered into the HTML on load and respond to a click event).
.sp
If a tab returns \fBFalse\fP from \fBenabled\fP it will ignore the value
of \fBpreload\fP and only render the HTML of the tab after being clicked.
.sp
The default behavior is to return \fBTrue\fP for all cases.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request, **kwargs)
This method should return a dictionary of context data used to
render the tab. Required.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns a list of the default classes for the tab. Defaults to
and empty list (\fB[]\fP), however additional classes may be added
depending on the state of the tab as follows:
.sp
If the tab is the active tab for the tab group, in which
the class \fB"active"\fP will be added.
.sp
If the tab is not enabled, the classes the class \fB"disabled"\fP
will be added.
.UNINDENT
.INDENT 7.0
.TP
.B get_id()
Returns the id for this tab. Defaults to
\fB"{{ tab_group.slug }}__{{ tab.slug }}"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_template_name(request)
Returns the name of the template to be used for rendering this tab.
.sp
By default it returns the value of the \fBtemplate_name\fP attribute
on the \fBTab\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B is_active()
Method to access whether or not this tab is the active tab.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
Handles POST data sent to a tab.
.sp
Tab instances can override this method to have tab\-specific POST logic
without polluting the TabView code.
.sp
The default behavior is to ignore POST data.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the tab to HTML using the
\fBget_context_data()\fP method and
the \fBget_template_name()\fP method.
.sp
If \fBpreload\fP is \fBFalse\fP and \fBforce_load\fP
is not \fBTrue\fP, or
either \fBallowed()\fP or
\fBenabled()\fP returns \fBFalse\fP this method will
return an empty string.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tabs.TableTab(tab_group, request)
A \fBTab\fP class which knows how to deal with
\fBDataTable\fP classes rendered inside of it.
.sp
This distinct class is required due to the complexity involved in handling
both dynamic tab loading, dynamic table updating and table actions all
within one view.
.INDENT 7.0
.TP
.B table_classes
An iterable containing the \fBDataTable\fP classes
which this tab will contain. Equivalent to the
\fBtable_classes\fP attribute on
\fBMultiTableView\fP\&. For each table class you
need to define a corresponding \fBget_{{ table_name }}_data\fP method
as with \fBMultiTableView\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request, **kwargs)
Adds a \fB{{ table_name }}_table\fP item to the context for each table
in the \fBtable_classes\fP attribute.
.sp
If only one table class is provided, a shortcut \fBtable\fP context
variable is also added containing the single table.
.UNINDENT
.INDENT 7.0
.TP
.B load_table_data()
Calls the \fBget_{{ table_name }}_data\fP methods for each table class
and sets the data on the tables.
.UNINDENT
.UNINDENT
.SS TabView
.sp
There is also a useful and simple generic class\-based view for handling
the display of a \fBTabGroup\fP class.
.INDENT 0.0
.TP
.B class horizon.tabs.TabView
A generic class\-based view for displaying a
\fBhorizon.tabs.TabGroup\fP\&.
.sp
This view handles selecting specific tabs and deals with AJAX requests
gracefully.
.INDENT 7.0
.TP
.B tab_group_class
The only required attribute for \fBTabView\fP\&. It should be a class which
inherits from \fBhorizon.tabs.TabGroup\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
Adds the \fBtab_group\fP variable to the context data.
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, **kwargs)
Returns the initialized tab group for this view.
.UNINDENT
.INDENT 7.0
.TP
.B handle_tabbed_response(tab_group, context)
Sends back an AJAX\-appropriate response for the tab group if
required, otherwise renders the response as normal.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tabs.TabbedTableView(*args, **kwargs)
.INDENT 7.0
.TP
.B get_tables()
A no\-op on this class. Tables are handled at the tab level.
.UNINDENT
.INDENT 7.0
.TP
.B handle_table(table_dict)
For the given dict containing a \fBDataTable\fP and a \fBTableTab\fP
instance, it loads the table data for that tab and calls the
table\(aqs \fBmaybe_handle()\fP method. The
return value will be the result of \fBmaybe_handle\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B load_tabs()
Loads the tab group, and compiles the table instances for each
table attached to any \fBhorizon.tabs.TableTab\fP instances on
the tab group. This step is necessary before processing any
tab or table actions.
.UNINDENT
.UNINDENT
.SS Horizon Forms
.sp
Horizon ships with some very useful base form classes, form fields,
class\-based views, and javascript helpers which streamline most of the common
tasks related to form handling.
.SS Form Classes
.INDENT 0.0
.TP
.B class horizon.forms.base.DateForm(*args, **kwargs)
A simple form for selecting a range of time.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.base.SelfHandlingForm(request, *args, **kwargs)
A base \fBForm\fP class which includes
processing logic in its subclasses.
.INDENT 7.0
.TP
.B api_error(message)
Adds an error to the form\(aqs error dictionary after validation
based on problems reported via the API. This is useful when you
wish for API errors to appear as errors on the form rather than
using the messages framework.
.UNINDENT
.INDENT 7.0
.TP
.B set_warning(message)
Sets a warning on the form.
.sp
Unlike NON_FIELD_ERRORS, this doesn\(aqt fail form validation.
.UNINDENT
.UNINDENT
.SS Form Fields
.INDENT 0.0
.TP
.B class horizon.forms.fields.DynamicChoiceField(add_item_link=None, add_item_link_args=None, *args, **kwargs)
A subclass of \fBChoiceField\fP with additional properties that make
dynamically updating its elements easier.
.sp
Notably, the field declaration takes an extra argument, \fBadd_item_link\fP
which may be a string or callable defining the URL that should be used
for the "add" link associated with the field.
.INDENT 7.0
.TP
.B widget
alias of \fBDynamicSelectWidget\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.DynamicSelectWidget(attrs=None, choices=())
A subclass of the \fBSelect\fP widget which renders extra attributes for
use in callbacks to handle dynamic changes to the available choices.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.DynamicTypedChoiceField(add_item_link=None, add_item_link_args=None, *args, **kwargs)
Simple mix of \fBDynamicChoiceField\fP and \fBTypedChoiceField\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.IPField(*args, **kwargs)
Form field for entering IP/range values, with validation.
Supports IPv4/IPv6 in the format:
.. xxx.xxx.xxx.xxx
.. xxx.xxx.xxx.xxx/zz
.. ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
.. ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/zz
and all compressed forms. Also the short forms
are supported:
xxx/yy
xxx.xxx/yy
.INDENT 7.0
.TP
.B version
Specifies which IP version to validate,
valid values are 1 (fields.IPv4), 2 (fields.IPv6) or
both \- 3 (fields.IPv4 | fields.IPv6).
Defaults to IPv4 (1)
.UNINDENT
.INDENT 7.0
.TP
.B mask
Boolean flag to validate subnet masks along with IP address.
E.g: 10.0.0.1/32
.UNINDENT
.INDENT 7.0
.TP
.B mask_range_from
.TP
.B Subnet range limitation, e.g. 16
.TP
.B That means the input mask will be checked to be in the range
.TP
.B 16:max_value. Useful to limit the subnet ranges
.TP
.B to A/B/C\-class networks.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.MultiIPField(*args, **kwargs)
Extends IPField to allow comma\-separated lists of addresses.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.SelectWidget(attrs=None, choices=(), data_attrs=(), transform=None, transform_html_attrs=None)
Customizable select widget, that allows to render
data\-xxx attributes from choices. This widget also
allows user to specify additional html attributes
for choices.
.INDENT 7.0
.TP
.B data_attrs
Specifies object properties to serialize as
data\-xxx attribute. If passed (\(aqid\(aq, ),
this will be rendered as:
<option data\-id="123">option_value</option>
where 123 is the value of choice_value.id
.UNINDENT
.INDENT 7.0
.TP
.B transform
A callable used to render the display value
from the option object.
.UNINDENT
.INDENT 7.0
.TP
.B transform_html_attrs
A callable used to render additional HTML attributes
for the option object. It returns a dictionary
containing the html attributes and their values.
For example, to define a title attribute for the
choices:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
helpText = { \(aqApple\(aq: \(aqThis is a fruit\(aq,
          \(aqCarrot\(aq: \(aqThis is a vegetable\(aq }

def get_title(data):
    text = helpText.get(data, None)
    if text:
        return {\(aqtitle\(aq: text}
    else:
        return {}

\&....
\&....

widget=forms.SelectWidget( attrs={\(aqclass\(aq: \(aqswitchable\(aq,
                                 \(aqdata\-slug\(aq: \(aqsource\(aq},
                        transform_html_attrs=get_title )

self.fields[<field name>].choices =
    ([
        (\(aqapple\(aq,\(aqApple\(aq),
        (\(aqcarrot\(aq,\(aqCarrot\(aq)
    ])
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.SS Form Views
.INDENT 0.0
.TP
.B class horizon.forms.views.ModalBackdropMixin
This mixin class is to be used for together with ModalFormView and
WorkflowView classes to augment them with modal_backdrop context data.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.views.ModalFormView
The main view class from which all views which handle forms in Horizon
should inherit. It takes care of all details with processing
\fBSelfHandlingForm\fP classes, and modal concerns
when the associated template inherits from
\fIhorizon/common/_modal_form.html\fP\&.
.sp
Subclasses must define a \fBform_class\fP and \fBtemplate_name\fP attribute
at minimum.
.sp
See Django\(aqs documentation on the \fI\%FormView\fP class for
more details.
.INDENT 7.0
.TP
.B get_object_display(obj)
For dynamic insertion of resources created in modals, this method
returns the display name of the created object. Defaults to returning
the \fBname\fP attribute.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(obj)
For dynamic insertion of resources created in modals, this method
returns the id of the created object. Defaults to returning the \fBid\fP
attribute.
.UNINDENT
.UNINDENT
.SS Forms Javascript
.SS Switchable Fields
.sp
By marking fields with the \fB"switchable"\fP and \fB"switched"\fP classes along
with defining a few data attributes you can programmatically hide, show,
and rename fields in a form.
.sp
The triggers are fields using a \fBselect\fP input widget, marked with the
"switchable" class, and defining a "data\-slug" attribute. When they are changed,
any input with the \fB"switched"\fP class and defining a \fB"data\-switch\-on"\fP
attribute which matches the \fBselect\fP input\(aqs \fB"data\-slug"\fP attribute will be
evaluated for necessary changes. In simpler terms, if the \fB"switched"\fP target
input\(aqs \fB"switch\-on"\fP matches the \fB"slug"\fP of the \fB"switchable"\fP trigger
input, it gets switched. Simple, right?
.sp
The \fB"switched"\fP inputs also need to define states. For each state in which
the input should be shown, it should define a data attribute like the
following: \fBdata\-<slug>\-<value>="<desired label>"\fP\&. When the switch event
happens the value of the \fB"switchable"\fP field will be compared to the
data attributes and the correct label will be applied to the field. If
a corresponding label for that value is \fInot\fP found, the field will
be hidden instead.
.sp
A simplified example is as follows:
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
source = forms.ChoiceField(
    label=_(\(aqSource\(aq),
    choices=[
        (\(aqcidr\(aq, _(\(aqCIDR\(aq)),
        (\(aqsg\(aq, _(\(aqSecurity Group\(aq))
    ],
    widget=forms.Select(attrs={
        \(aqclass\(aq: \(aqswitchable\(aq,
        \(aqdata\-slug\(aq: \(aqsource\(aq
    })
)

cidr = fields.IPField(
    label=_("CIDR"),
    required=False,
    widget=forms.TextInput(attrs={
        \(aqclass\(aq: \(aqswitched\(aq,
        \(aqdata\-switch\-on\(aq: \(aqsource\(aq,
        \(aqdata\-source\-cidr\(aq: _(\(aqCIDR\(aq)
    })
)

security_group = forms.ChoiceField(
    label=_(\(aqSecurity Group\(aq),
    required=False,
    widget=forms.Select(attrs={
        \(aqclass\(aq: \(aqswitched\(aq,
        \(aqdata\-switch\-on\(aq: \(aqsource\(aq,
        \(aqdata\-source\-sg\(aq: _(\(aqSecurity Group\(aq)
    })
)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
That code would create the \fB"switchable"\fP control field \fBsource\fP, and the
two \fB"switched"\fP fields \fBcidr\fP and \fBsecurity group\fP which are hidden or
shown depending on the value of \fBsource\fP\&.
.sp
NOTE: A field can only safely define one slug in its \fB"switch\-on"\fP attribute.
While switching on multiple fields is possible, the behavior is very hard to
predict due to the events being fired from the various switchable fields in
order. You generally end up just having it hidden most of the time by accident,
so it\(aqs not recommended. Instead just add a second field to the form and control
the two independently, then merge their results in the form\(aqs clean or handle
methods at the end.
.SS Horizon Middleware
.sp
Middleware provided and used by Horizon.
.INDENT 0.0
.TP
.B class horizon.middleware.HorizonMiddleware
The main Horizon middleware class. Required for use of Horizon.
.INDENT 7.0
.TP
.B process_exception(request, exception)
Catches internal Horizon exception classes such as NotAuthorized,
NotFound and Http302 and handles them gracefully.
.UNINDENT
.INDENT 7.0
.TP
.B process_request(request)
Adds data necessary for Horizon to function to the request.
.UNINDENT
.INDENT 7.0
.TP
.B process_response(request, response)
Convert HttpResponseRedirect to HttpResponse if request is via ajax
to allow ajax request to redirect url
.UNINDENT
.UNINDENT
.SS Horizon Context Processors
.sp
Context processors used by Horizon.
.INDENT 0.0
.TP
.B horizon.context_processors.horizon(request)
The main Horizon context processor. Required for Horizon to function.
.sp
It adds the Horizon config to the context as well as setting the names
\fBTrue\fP and \fBFalse\fP in the context to their boolean equivalents
for convenience.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
Don\(aqt put API calls in context processors; they will be called once
for each template/template fragment which takes context that is used
to render the complete output.
.UNINDENT
.UNINDENT
.UNINDENT
.SS Horizon Decorators
.sp
General\-purpose decorators for use with Horizon.
.INDENT 0.0
.TP
.B horizon.decorators.require_auth(view_func)
Performs user authentication check.
.sp
Similar to Django\(aqs \fIlogin_required\fP decorator, except that this throws
\fBNotAuthenticated\fP exception if the user is not
signed\-in.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.decorators.require_perms(view_func, required)
Enforces permission\-based access controls.
.INDENT 7.0
.TP
.B Parameters
\fBrequired\fP (\fIlist\fP) \-\- A tuple of permission names, all of which the request
user must possess in order access the decorated view.
.UNINDENT
.sp
Example usage:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
from horizon.decorators import require_perms


@require_perms([\(aqfoo.admin\(aq, \(aqfoo.member\(aq])
def my_view(request):
    ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Raises a \fBNotAuthorized\fP exception if the
requirements are not met.
.UNINDENT
.SS Horizon Exceptions
.sp
Exceptions raised by the Horizon code and the machinery for handling them.
.INDENT 0.0
.TP
.B exception horizon.exceptions.AlreadyExists(name, resource_type)
Exception to be raised when trying to create an API resource which
already exists.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.ConfigurationError
Exception to be raised when invalid settings have been provided.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.Conflict
Generic error to replace all "Conflict"\-type API errors.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.HandledException(wrapped)
Used internally to track exceptions that have gone through
\fBhorizon.exceptions.handle()\fP more than once.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.HorizonException
Base exception class for distinguishing our own exception classes.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.exceptions.HorizonReporterFilter
Error report filter that\(aqs always active, even in DEBUG mode.
.INDENT 7.0
.TP
.B get_traceback_frame_variables(request, tb_frame)
Replaces the values of variables marked as sensitive with
stars (\fB*****\fP).
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.Http302(location, message=None)
Error class which can be raised from within a handler to cause an
early bailout and redirect at the middleware level.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotAuthenticated
Raised when a user is trying to make requests and they are not logged
in.
.sp
The included \fBHorizonMiddleware\fP catches
\fBNotAuthenticated\fP and handles it gracefully by displaying an error
message and redirecting the user to a login page.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotAuthorized
Raised whenever a user attempts to access a resource which they do not
have permission\-based access to (such as when failing the
\fBrequire_perms()\fP decorator).
.sp
The included \fBHorizonMiddleware\fP catches
\fBNotAuthorized\fP and handles it gracefully by displaying an error
message and redirecting the user to a login page.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotAvailable
Exception to be raised when something is not available.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotFound
Generic error to replace all "Not Found"\-type API errors.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.RecoverableError
Generic error to replace any "Recoverable"\-type API errors.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.ServiceCatalogException(service_name)
Raised when a requested service is not available in the
\fBServiceCatalog\fP returned by Keystone.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.WorkflowError
Exception to be raised when something goes wrong in a workflow.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.WorkflowValidationError
Exception raised during workflow validation if required data is missing,
or existing data is not valid.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.check_message(keywords, message)
Checks an exception for given keywords and raises a new \fBActionError\fP
with the desired message if the keywords are found. This allows selective
control over API error messages.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.handle(request, message=None, redirect=None, ignore=False, escalate=False, log_level=None, force_log=None)
Centralized error handling for Horizon.
.sp
Because Horizon consumes so many different APIs with completely
different \fBException\fP types, it\(aqs necessary to have a centralized
place for handling exceptions which may be raised.
.sp
Exceptions are roughly divided into 3 types:
.INDENT 7.0
.IP 1. 3
\fBUNAUTHORIZED\fP: Errors resulting from authentication or authorization
problems. These result in being logged out and sent to the login screen.
.IP 2. 3
\fBNOT_FOUND\fP: Errors resulting from objects which could not be
located via the API. These generally result in a user\-facing error
message, but are otherwise returned to the normal code flow. Optionally
a redirect value may be passed to the error handler so users are
returned to a different view than the one requested in addition to the
error message.
.IP 3. 3
RECOVERABLE: Generic API errors which generate a user\-facing message
but drop directly back to the regular code flow.
.UNINDENT
.sp
All other exceptions bubble the stack as normal unless the \fBignore\fP
argument is passed in as \fBTrue\fP, in which case only unrecognized
errors are bubbled.
.sp
If the exception is not re\-raised, an appropriate wrapper exception
class indicating the type of exception that was encountered will be
returned.
.UNINDENT
.SS Horizon TestCase Classes
.sp
Horizon provides a base test case class which provides several useful
pre\-prepared attributes for testing Horizon components.
.INDENT 0.0
.TP
.B class horizon.test.helpers.TestCase(methodName=\(aqrunTest\(aq)
Specialized base test case class for Horizon which gives access to
numerous additional features:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
The \fBmox\fP mocking framework via \fBself.mox\fP\&.
.IP \(bu 2
A \fBRequestFactory\fP class which supports Django\(aqs \fBcontrib.messages\fP
framework via \fBself.factory\fP\&.
.IP \(bu 2
A ready\-to\-go request object via \fBself.request\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B assertMessageCount(response=None, **kwargs)
Asserts that the specified number of messages have been attached
for various message types. Usage would look like
\fBself.assertMessageCount(success=1)\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B assertNoMessages(response=None)
Asserts that no messages have been attached by the
\fBcontrib.messages\fP framework.
.UNINDENT
.UNINDENT
.sp
The OpenStack Dashboard also provides test case classes for greater
ease\-of\-use when testing APIs and OpenStack\-specific auth scenarios.
.INDENT 0.0
.TP
.B class openstack_dashboard.test.helpers.TestCase(methodName=\(aqrunTest\(aq)
Specialized base test case class for Horizon.
.sp
It gives access to numerous additional features:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
A full suite of test data through various attached objects and
managers (e.g. \fBself.servers\fP, \fBself.user\fP, etc.). See the
docs for
\fBTestData\fP
for more information.
.IP \(bu 2
The \fBmox\fP mocking framework via \fBself.mox\fP\&.
.IP \(bu 2
A set of request context data via \fBself.context\fP\&.
.IP \(bu 2
A \fBRequestFactory\fP class which supports Django\(aqs \fBcontrib.messages\fP
framework via \fBself.factory\fP\&.
.IP \(bu 2
A ready\-to\-go request object via \fBself.request\fP\&.
.IP \(bu 2
The ability to override specific time data controls for easier testing.
.IP \(bu 2
Several handy additional assertion methods.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B add_panel_mocks()
Global mocks on panels that get called on all views.
.UNINDENT
.INDENT 7.0
.TP
.B assertFormErrors(response, count=0, message=None, context_name=\(aqform\(aq)
Check for form errors.
.sp
Asserts that the response does contain a form in its
context, and that form has errors, if count were given,
it must match the exact numbers of errors
.UNINDENT
.INDENT 7.0
.TP
.B assertNoFormErrors(response, context_name=\(aqform\(aq)
Checks for no form errors.
.sp
Asserts that the response either does not contain a form in its
context, or that if it does, that form has no errors.
.UNINDENT
.INDENT 7.0
.TP
.B assertRedirectsNoFollow(response, expected_url)
Check for redirect.
.sp
Asserts that the given response issued a 302 redirect without
processing the view which is redirected to.
.UNINDENT
.INDENT 7.0
.TP
.B assertStatusCode(response, expected_code)
Validates an expected status code.
.sp
Matches camel case of other assert functions
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.test.helpers.APITestCase(methodName=\(aqrunTest\(aq)
Testing APIs.
.sp
For use with tests which deal with the underlying clients rather than
stubbing out the openstack_dashboard.api.* methods.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.test.helpers.BaseAdminViewTests(methodName=\(aqrunTest\(aq)
Sets an active user with the "admin" role.
.sp
For testing admin\-only views and functionality.
.UNINDENT
.SS local.conf
.SS Configuring DevStack for Horizon
.sp
Place the following content into \fIdevstack/local.conf\fP to start the services
that Horizon supports in DevStack when \fIstack.sh\fP is run.
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
[[local|localrc]]

ADMIN_PASSWORD=pass
MYSQL_PASSWORD=pass
RABBIT_PASSWORD=pass
SERVICE_PASSWORD=pass
SERVICE_TOKEN=a682f596\-76f3\-11e3\-b3b2\-e716f9080d50

# Recloning will insure that your stack is up to date. The downside
# is overhead on restarts and potentially losing a stable environment.
# If set to yes, will reclone all repos every time stack.sh is run.
# The default is no.
#RECLONE=yes

# Set \(ga\(gaOFFLINE\(ga\(ga to \(ga\(gaTrue\(ga\(ga to configure \(ga\(gastack.sh\(ga\(ga to run cleanly without
# Internet access. \(ga\(gastack.sh\(ga\(ga must have been previously run with Internet
# access to install prerequisites and fetch repositories.
# OFFLINE=True

# Note: there are several network setting changes that may be
# required to get networking properly configured in your environment.
# This file is just using the defaults set up by devstack.
# For a more detailed treatment of devstack network configuration
# options, please see: http://devstack.org/guides/single\-machine.html

### SERVICES

# Enable Swift (Object Store) without replication
enable_service s\-proxy s\-object s\-container s\-account
SWIFT_HASH=66a3d6b56c1f479c8b4e70ab5c2000f5
SWIFT_REPLICAS=1
SWIFT_DATA_DIR=$DEST/data/swift

# Enable Neutron (Networking)
# to use nova net rather than neutron, comment out the following group
disable_service n\-net
enable_service q\-svc
enable_service q\-agt
enable_service q\-dhcp
enable_service q\-l3
enable_service q\-meta
enable_service q\-metering
enable_service neutron
enable_service q\-fwaas
enable_service q\-vpn
# end group

# enable lbaas plugin to neutron
enable_plugin neutron\-lbaas git://git.openstack.org/openstack/neutron\-lbaas

# Enable Ceilometer (Metering)
enable_service ceilometer\-acompute ceilometer\-acentral ceilometer\-anotification ceilometer\-collector ceilometer\-api

### PLUGINS

# Enable Sahara (Data Processing)
enable_plugin sahara git://git.openstack.org/openstack/sahara

# Enable Trove (Database)
enable_plugin trove git://git.openstack.org/openstack/trove

[[post\-config|$GLANCE_API_CONF]]
[DEFAULT]
default_store=file
.ft P
.fi
.UNINDENT
.UNINDENT
.SS Source Code Reference
.sp
Auto\-generated reference for the complete source code.
.SS Source Code Index
.INDENT 0.0
.IP \(bu 2
\fI\%Horizon\fP
.IP \(bu 2
\fI\%Openstack_dashboard\fP
.UNINDENT
.SS Horizon
.SS The \fBhorizon.base\fP Module
.sp
Contains the core classes and functionality that makes Horizon what it is.
This module is considered internal, and should not be relied on directly.
.sp
Public APIs are made available through the \fBhorizon\fP module and
the classes contained therein.
.INDENT 0.0
.TP
.B class horizon.base.Dashboard(*args, **kwargs)
Bases: \fBhorizon.base.Registry\fP, \fBhorizon.base.HorizonComponent\fP
.sp
A base class for defining Horizon dashboards.
.sp
All Horizon dashboards should extend from this base class. It provides the
appropriate hooks for automatic discovery of \fBPanel\fP
modules, automatically constructing URLconfs, and providing
permission\-based access control.
.INDENT 7.0
.TP
.B name
The name of the dashboard. This will be displayed in the
auto\-generated navigation and various other places.
Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A unique "short name" for the dashboard. The slug is used as
a component of the URL path for the dashboard. Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B panels
The \fBpanels\fP attribute can be either a flat list containing the name
of each panel \fBmodule\fP  which should be loaded as part of this
dashboard, or a list of \fBPanelGroup\fP classes which
define groups of panels as in the following example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
class SystemPanels(horizon.PanelGroup):
    slug = "syspanel"
    name = _("System")
    panels = (\(aqoverview\(aq, \(aqinstances\(aq, ...)

class Syspanel(horizon.Dashboard):
    panels = (SystemPanels,)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Automatically generated navigation will use the order of the
modules in this attribute.
.sp
Default: \fB[]\fP\&.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
The values for this attribute should not correspond to the
\fBname\fP attributes of the \fBPanel\fP classes.
They should be the names of the Python modules in which the
\fBpanel.py\fP files live. This is used for the automatic
loading and registration of \fBPanel\fP classes much like
Django\(aqs \fBModelAdmin\fP machinery.
.sp
Panel modules must be listed in \fBpanels\fP in order to be
discovered by the automatic registration mechanism.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_panel
The name of the panel which should be treated as the default
panel for the dashboard, i.e. when you visit the root URL
for this dashboard, that\(aqs the panel that is displayed.
Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names, all of which a user must possess in order
to access any panel registered with this dashboard. This attribute
is combined cumulatively with any permissions required on individual
\fBPanel\fP classes.
.UNINDENT
.INDENT 7.0
.TP
.B urls
Optional path to a URLconf of additional views for this dashboard
which are not connected to specific panels. Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B nav
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
The \fBnav\fP attribute can be either boolean value or a callable
which accepts a \fBRequestContext\fP object as a single argument
to control whether or not this dashboard should appear in
automatically\-generated navigation. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B public
Boolean value to determine whether this dashboard can be viewed
without being logged in. Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B allowed(context)
Checks for role based access for this dashboard.
.sp
Checks for access to any panels in the dashboard and of the the
dashboard itself.
.sp
This method should be overridden to return the result of
any policy checks required for the user to access this dashboard
when more complex checks are required.
.UNINDENT
.INDENT 7.0
.TP
.B default_panel = None
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for this dashboard.
.sp
The default URL is defined as the URL pattern with \fBname="index"\fP
in the URLconf for the \fBPanel\fP specified by
\fBdefault_panel\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_panel(panel)
Returns the specified \fBPanel\fP instance registered
with this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B get_panel_group(slug)
Returns the specified :class:~horizon.PanelGroup
or None if not registered
.UNINDENT
.INDENT 7.0
.TP
.B get_panel_groups()
.UNINDENT
.INDENT 7.0
.TP
.B get_panels()
Returns the \fBPanel\fP instances registered with this
dashboard in order, without any panel groupings.
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B nav = True
.UNINDENT
.INDENT 7.0
.TP
.B panels = []
.UNINDENT
.INDENT 7.0
.TP
.B public = False
.UNINDENT
.INDENT 7.0
.TP
.B classmethod register(panel)
Registers a \fBPanel\fP with this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B classmethod unregister(panel)
Unregisters a \fBPanel\fP from this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B urls = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.HorizonComponent
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B allowed(context)
Checks if the user is allowed to access this component.
.sp
This method should be overridden to return the result of
any policy checks required for the user to access this component
when more complex checks are required.
.UNINDENT
.INDENT 7.0
.TP
.B can_access(context)
Return whether the user has role based access to this component.
.sp
This method is not intended to be overridden.
The result of the method is stored in per\-session cache.
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.HorizonSite
Bases: \fBhorizon.base.Site\fP
.sp
A singleton implementation of Site such that all dealings with horizon
get the same instance no matter what. There can be only one.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.LazyURLPattern(func)
Bases: \fBdjango.utils.functional.SimpleLazyObject\fP
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.base.NotRegistered
Bases: \fBexceptions.Exception\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.Panel
Bases: \fBhorizon.base.HorizonComponent\fP
.sp
A base class for defining Horizon dashboard panels.
.sp
All Horizon dashboard panels should extend from this class. It provides
the appropriate hooks for automatically constructing URLconfs, and
providing permission\-based access control.
.INDENT 7.0
.TP
.B name
The name of the panel. This will be displayed in the
auto\-generated navigation and various other places.
Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A unique "short name" for the panel. The slug is used as
a component of the URL path for the panel. Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names, all of which a user must possess in order
to access any view associated with this panel. This attribute
is combined cumulatively with any permissions required on the
\fBDashboard\fP class with which it is registered.
.UNINDENT
.INDENT 7.0
.TP
.B urls
Path to a URLconf of views for this panel using dotted Python
notation. If no value is specified, a file called \fBurls.py\fP
living in the same package as the \fBpanel.py\fP file is used.
Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B nav
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
The \fBnav\fP attribute can be either boolean value or a callable
which accepts a \fBRequestContext\fP object as a single argument
to control whether or not this panel should appear in
automatically\-generated navigation. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B index_url_name
The \fBname\fP argument for the URL pattern which corresponds to
the index view for this \fBPanel\fP\&. This is the view that
\fBPanel.get_absolute_url()\fP will attempt to reverse.
.UNINDENT
.INDENT 7.0
.TP
.B static can_register()
This optional static method can be used to specify conditions that
need to be satisfied to load this panel. Unlike \fBpermissions\fP and
\fBallowed\fP this method is intended to handle settings based
conditions rather than user based permission and policy checks.
The return value is boolean. If the method returns \fBTrue\fP, then the
panel will be registered and available to user (if \fBpermissions\fP and
\fBallowed\fP runtime checks are also satisfied). If the method returns
\fBFalse\fP, then the panel will not be registered and will not be
available via normal navigation or direct URL access.
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for this panel.
.sp
The default URL is defined as the URL pattern with \fBname="index"\fP in
the URLconf for this panel.
.UNINDENT
.INDENT 7.0
.TP
.B index_url_name = \(aqindex\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B nav = True
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B urls = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.PanelGroup(dashboard, slug=None, name=None, panels=None)
Bases: \fBobject\fP
.sp
A container for a set of \fBPanel\fP classes.
.sp
When iterated, it will yield each of the \fBPanel\fP instances it
contains.
.INDENT 7.0
.TP
.B slug
A unique string to identify this panel group. Required.
.UNINDENT
.INDENT 7.0
.TP
.B name
A user\-friendly name which will be used as the group heading in
places such as the navigation. Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B panels
A list of panel module names which should be contained within this
grouping.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.Registry
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.Site
Bases: \fBhorizon.base.Registry\fP, \fBhorizon.base.HorizonComponent\fP
.sp
The overarching class which encompasses all dashboards and panels.
.INDENT 7.0
.TP
.B dashboards
.UNINDENT
.INDENT 7.0
.TP
.B default_dashboard
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for Horizon\(aqs URLconf.
.sp
The default URL is determined by calling
\fBget_absolute_url()\fP
on the \fBDashboard\fP instance returned by
\fBget_default_dashboard()\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_dashboard(dashboard)
Returns the specified \fBDashboard\fP instance.
.UNINDENT
.INDENT 7.0
.TP
.B get_dashboards()
Returns an ordered tuple of \fBDashboard\fP modules.
.sp
Orders dashboards according to the \fB"dashboards"\fP key in
\fBHORIZON_CONFIG\fP or else returns all registered dashboards
in alphabetical order.
.sp
Any remaining \fBDashboard\fP classes registered with
Horizon but not listed in \fBHORIZON_CONFIG[\(aqdashboards\(aq]\fP
will be appended to the end of the list alphabetically.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_dashboard()
Returns the default \fBDashboard\fP instance.
.sp
If \fB"default_dashboard"\fP is specified in \fBHORIZON_CONFIG\fP
then that dashboard will be returned. If not, the first dashboard
returned by \fBget_dashboards()\fP will be returned.
.UNINDENT
.INDENT 7.0
.TP
.B get_user_home(user)
Returns the default URL for a particular user.
.sp
This method can be used to customize where a user is sent when
they log in, etc. By default it returns the value of
\fBget_absolute_url()\fP\&.
.sp
An alternative function can be supplied to customize this behavior
by specifying a either a URL or a function which returns a URL via
the \fB"user_home"\fP key in \fBHORIZON_CONFIG\fP\&. Each of these
would be valid:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
{"user_home": "/home",}  # A URL
{"user_home": "my_module.get_user_home",}  # Path to a function
{"user_home": lambda user: "/" + user.name,}  # A function
{"user_home": None,}  # Will always return the default dashboard
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
This can be useful if the default dashboard may not be accessible
to all users. When user_home is missing from HORIZON_CONFIG,
it will default to the settings.LOGIN_REDIRECT_URL value.
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqHorizon\(aq
.UNINDENT
.INDENT 7.0
.TP
.B namespace = \(aqhorizon\(aq
.UNINDENT
.INDENT 7.0
.TP
.B register(dashboard)
Registers a \fBDashboard\fP with Horizon.
.UNINDENT
.INDENT 7.0
.TP
.B register_panel(dashboard, panel)
.UNINDENT
.INDENT 7.0
.TP
.B registered(dashboard)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqhorizon\(aq
.UNINDENT
.INDENT 7.0
.TP
.B unregister(dashboard)
Unregisters a \fBDashboard\fP from Horizon.
.UNINDENT
.INDENT 7.0
.TP
.B unregister_panel(dashboard, panel)
.UNINDENT
.INDENT 7.0
.TP
.B urls = \(aqhorizon.site_urls\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.base.Workflow
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B horizon.base.access_cached(func)
.UNINDENT
.SS The \fBhorizon.middleware\fP Module
.sp
Middleware provided and used by Horizon.
.INDENT 0.0
.TP
.B class horizon.middleware.HorizonMiddleware
Bases: \fBobject\fP
.sp
The main Horizon middleware class. Required for use of Horizon.
.INDENT 7.0
.TP
.B logout_reason = None
.UNINDENT
.INDENT 7.0
.TP
.B process_exception(request, exception)
Catches internal Horizon exception classes such as NotAuthorized,
NotFound and Http302 and handles them gracefully.
.UNINDENT
.INDENT 7.0
.TP
.B process_request(request)
Adds data necessary for Horizon to function to the request.
.UNINDENT
.INDENT 7.0
.TP
.B process_response(request, response)
Convert HttpResponseRedirect to HttpResponse if request is via ajax
to allow ajax request to redirect url
.UNINDENT
.UNINDENT
.SS The \fBhorizon.views\fP Module
.INDENT 0.0
.TP
.B class horizon.views.APIView(**kwargs)
Bases: \fBhorizon.views.HorizonTemplateView\fP
.sp
A quick class\-based view for putting API data into a template.
.sp
Subclasses must define one method, \fBget_data\fP, and a template name
via the \fBtemplate_name\fP attribute on the class.
.sp
Errors within the \fBget_data\fP function are automatically caught by
the \fBhorizon.exceptions.handle()\fP error handler if not otherwise
caught.
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, context, *args, **kwargs)
This method should handle any necessary API calls, update the
context object, and return the context object at the end.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.views.HorizonFormView(**kwargs)
Bases: \fBhorizon.views.PageTitleMixin\fP, \fBdjango.views.generic.edit.FormView\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.views.HorizonTemplateView(**kwargs)
Bases: \fBhorizon.views.PageTitleMixin\fP, \fBdjango.views.generic.base.TemplateView\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.views.PageTitleMixin
Bases: \fBobject\fP
.sp
A mixin that renders out a page title into a view.
.sp
Many views in horizon have a page title that would ordinarily be
defined and passed through in get_context_data function, this often
leads to a lot of duplicated work in each view.
.sp
This mixin standardises the process of defining a page title, letting
views simply define a variable that is rendered into the context for
them.
.sp
There are cases when page title in a view may also display some context
data, for that purpose the page_title variable supports the django
templating language and will be rendered using the context defined by the
views get_context_data.
.INDENT 7.0
.TP
.B page_title = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B render_context_with_title(context)
This function takes in a context dict and uses it to render the
page_title variable, it then appends this title to the context using
the \(aqpage_title\(aq key. If there is already a page_title key defined in
context received then this function will do nothing.
.UNINDENT
.INDENT 7.0
.TP
.B render_to_response(context)
This is an override of the default render_to_response function that
exists in the django generic views, this is here to inject the
page title into the context before the main template is rendered.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B horizon.views.user_home(request)
Reversible named view to direct a user to the appropriate homepage.
.UNINDENT
.SS The \fBhorizon.models\fP Module
.sp
Stub file to work around django bug: \fI\%https://code.djangoproject.com/ticket/7198\fP
.SS The \fBhorizon.context_processors\fP Module
.sp
Context processors used by Horizon.
.INDENT 0.0
.TP
.B horizon.context_processors.horizon(request)
The main Horizon context processor. Required for Horizon to function.
.sp
It adds the Horizon config to the context as well as setting the names
\fBTrue\fP and \fBFalse\fP in the context to their boolean equivalents
for convenience.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
Don\(aqt put API calls in context processors; they will be called once
for each template/template fragment which takes context that is used
to render the complete output.
.UNINDENT
.UNINDENT
.UNINDENT
.SS The \fBhorizon.messages\fP Module
.sp
Drop\-in replacement for django.contrib.messages which handles Horizon\(aqs
messaging needs (e.g. AJAX communication, etc.).
.INDENT 0.0
.TP
.B horizon.messages.add_message(request, level, message, extra_tags=\(aq\(aq, fail_silently=False)
Attempts to add a message to the request using the \(aqmessages\(aq app.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.messages.debug(request, message, extra_tags=\(aq\(aq, fail_silently=False)
Adds a message with the \fBDEBUG\fP level.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.messages.error(request, message, extra_tags=\(aq\(aq, fail_silently=False)
Adds a message with the \fBERROR\fP level.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.messages.horizon_message_already_queued(request, message)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.messages.info(request, message, extra_tags=\(aq\(aq, fail_silently=False)
Adds a message with the \fBINFO\fP level.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.messages.success(request, message, extra_tags=\(aq\(aq, fail_silently=False)
Adds a message with the \fBSUCCESS\fP level.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.messages.warning(request, message, extra_tags=\(aq\(aq, fail_silently=False)
Adds a message with the \fBWARNING\fP level.
.UNINDENT
.SS The \fBhorizon.exceptions\fP Module
.sp
Exceptions raised by the Horizon code and the machinery for handling them.
.INDENT 0.0
.TP
.B exception horizon.exceptions.AlreadyExists(name, resource_type)
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Exception to be raised when trying to create an API resource which
already exists.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.ConfigurationError
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Exception to be raised when invalid settings have been provided.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.Conflict
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Generic error to replace all "Conflict"\-type API errors.
.INDENT 7.0
.TP
.B status_code = 409
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.HandledException(wrapped)
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Used internally to track exceptions that have gone through
\fBhorizon.exceptions.handle()\fP more than once.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.HorizonException
Bases: \fBexceptions.Exception\fP
.sp
Base exception class for distinguishing our own exception classes.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.exceptions.HorizonReporterFilter
Bases: \fBdjango.views.debug.SafeExceptionReporterFilter\fP
.sp
Error report filter that\(aqs always active, even in DEBUG mode.
.INDENT 7.0
.TP
.B get_traceback_frame_variables(request, tb_frame)
Replaces the values of variables marked as sensitive with
stars (\fB*****\fP).
.UNINDENT
.INDENT 7.0
.TP
.B is_active(request)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.Http302(location, message=None)
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Error class which can be raised from within a handler to cause an
early bailout and redirect at the middleware level.
.INDENT 7.0
.TP
.B status_code = 302
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotAuthenticated
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Raised when a user is trying to make requests and they are not logged
in.
.sp
The included \fBHorizonMiddleware\fP catches
\fBNotAuthenticated\fP and handles it gracefully by displaying an error
message and redirecting the user to a login page.
.INDENT 7.0
.TP
.B status_code = 403
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotAuthorized
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Raised whenever a user attempts to access a resource which they do not
have permission\-based access to (such as when failing the
\fBrequire_perms()\fP decorator).
.sp
The included \fBHorizonMiddleware\fP catches
\fBNotAuthorized\fP and handles it gracefully by displaying an error
message and redirecting the user to a login page.
.INDENT 7.0
.TP
.B status_code = 401
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotAvailable
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Exception to be raised when something is not available.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.NotFound
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Generic error to replace all "Not Found"\-type API errors.
.INDENT 7.0
.TP
.B status_code = 404
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.RecoverableError
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Generic error to replace any "Recoverable"\-type API errors.
.INDENT 7.0
.TP
.B status_code = 100
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.ServiceCatalogException(service_name)
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Raised when a requested service is not available in the
\fBServiceCatalog\fP returned by Keystone.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.WorkflowError
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Exception to be raised when something goes wrong in a workflow.
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.exceptions.WorkflowValidationError
Bases: \fBhorizon.exceptions.HorizonException\fP
.sp
Exception raised during workflow validation if required data is missing,
or existing data is not valid.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.check_message(keywords, message)
Checks an exception for given keywords and raises a new \fBActionError\fP
with the desired message if the keywords are found. This allows selective
control over API error messages.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.error_color(msg)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.handle(request, message=None, redirect=None, ignore=False, escalate=False, log_level=None, force_log=None)
Centralized error handling for Horizon.
.sp
Because Horizon consumes so many different APIs with completely
different \fBException\fP types, it\(aqs necessary to have a centralized
place for handling exceptions which may be raised.
.sp
Exceptions are roughly divided into 3 types:
.INDENT 7.0
.IP 1. 3
\fBUNAUTHORIZED\fP: Errors resulting from authentication or authorization
problems. These result in being logged out and sent to the login screen.
.IP 2. 3
\fBNOT_FOUND\fP: Errors resulting from objects which could not be
located via the API. These generally result in a user\-facing error
message, but are otherwise returned to the normal code flow. Optionally
a redirect value may be passed to the error handler so users are
returned to a different view than the one requested in addition to the
error message.
.IP 3. 3
RECOVERABLE: Generic API errors which generate a user\-facing message
but drop directly back to the regular code flow.
.UNINDENT
.sp
All other exceptions bubble the stack as normal unless the \fBignore\fP
argument is passed in as \fBTrue\fP, in which case only unrecognized
errors are bubbled.
.sp
If the exception is not re\-raised, an appropriate wrapper exception
class indicating the type of exception that was encountered will be
returned.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.handle_notfound(request, message, redirect, ignore, escalate, handled, force_silence, force_log, log_method, log_entry, log_level)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.handle_recoverable(request, message, redirect, ignore, escalate, handled, force_silence, force_log, log_method, log_entry, log_level)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.exceptions.handle_unauthorized(request, message, redirect, ignore, escalate, handled, force_silence, force_log, log_method, log_entry, log_level)
.UNINDENT
.SS The \fBhorizon\fP Module
.sp
The Horizon interface.
.sp
Contains the core Horizon classes\-\-\fBDashboard\fP and
\fBhorizon.Panel\fP\-\-the dynamic URLconf for Horizon, and common interface
methods like \fBregister()\fP and \fBunregister()\fP\&.
.INDENT 0.0
.TP
.B class horizon.Dashboard(*args, **kwargs)
Bases: \fBhorizon.base.Registry\fP, \fBhorizon.base.HorizonComponent\fP
.sp
A base class for defining Horizon dashboards.
.sp
All Horizon dashboards should extend from this base class. It provides the
appropriate hooks for automatic discovery of \fBPanel\fP
modules, automatically constructing URLconfs, and providing
permission\-based access control.
.INDENT 7.0
.TP
.B name
The name of the dashboard. This will be displayed in the
auto\-generated navigation and various other places.
Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A unique "short name" for the dashboard. The slug is used as
a component of the URL path for the dashboard. Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B panels
The \fBpanels\fP attribute can be either a flat list containing the name
of each panel \fBmodule\fP  which should be loaded as part of this
dashboard, or a list of \fBPanelGroup\fP classes which
define groups of panels as in the following example:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
class SystemPanels(horizon.PanelGroup):
    slug = "syspanel"
    name = _("System")
    panels = (\(aqoverview\(aq, \(aqinstances\(aq, ...)

class Syspanel(horizon.Dashboard):
    panels = (SystemPanels,)
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Automatically generated navigation will use the order of the
modules in this attribute.
.sp
Default: \fB[]\fP\&.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
The values for this attribute should not correspond to the
\fBname\fP attributes of the \fBPanel\fP classes.
They should be the names of the Python modules in which the
\fBpanel.py\fP files live. This is used for the automatic
loading and registration of \fBPanel\fP classes much like
Django\(aqs \fBModelAdmin\fP machinery.
.sp
Panel modules must be listed in \fBpanels\fP in order to be
discovered by the automatic registration mechanism.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B default_panel
The name of the panel which should be treated as the default
panel for the dashboard, i.e. when you visit the root URL
for this dashboard, that\(aqs the panel that is displayed.
Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names, all of which a user must possess in order
to access any panel registered with this dashboard. This attribute
is combined cumulatively with any permissions required on individual
\fBPanel\fP classes.
.UNINDENT
.INDENT 7.0
.TP
.B urls
Optional path to a URLconf of additional views for this dashboard
which are not connected to specific panels. Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B nav
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
The \fBnav\fP attribute can be either boolean value or a callable
which accepts a \fBRequestContext\fP object as a single argument
to control whether or not this dashboard should appear in
automatically\-generated navigation. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B public
Boolean value to determine whether this dashboard can be viewed
without being logged in. Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B allowed(context)
Checks for role based access for this dashboard.
.sp
Checks for access to any panels in the dashboard and of the the
dashboard itself.
.sp
This method should be overridden to return the result of
any policy checks required for the user to access this dashboard
when more complex checks are required.
.UNINDENT
.INDENT 7.0
.TP
.B default_panel = None
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for this dashboard.
.sp
The default URL is defined as the URL pattern with \fBname="index"\fP
in the URLconf for the \fBPanel\fP specified by
\fBdefault_panel\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_panel(panel)
Returns the specified \fBPanel\fP instance registered
with this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B get_panel_group(slug)
Returns the specified :class:~horizon.PanelGroup
or None if not registered
.UNINDENT
.INDENT 7.0
.TP
.B get_panel_groups()
.UNINDENT
.INDENT 7.0
.TP
.B get_panels()
Returns the \fBPanel\fP instances registered with this
dashboard in order, without any panel groupings.
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B nav = True
.UNINDENT
.INDENT 7.0
.TP
.B panels = []
.UNINDENT
.INDENT 7.0
.TP
.B public = False
.UNINDENT
.INDENT 7.0
.TP
.B classmethod register(panel)
Registers a \fBPanel\fP with this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B classmethod unregister(panel)
Unregisters a \fBPanel\fP from this dashboard.
.UNINDENT
.INDENT 7.0
.TP
.B urls = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.Panel
Bases: \fBhorizon.base.HorizonComponent\fP
.sp
A base class for defining Horizon dashboard panels.
.sp
All Horizon dashboard panels should extend from this class. It provides
the appropriate hooks for automatically constructing URLconfs, and
providing permission\-based access control.
.INDENT 7.0
.TP
.B name
The name of the panel. This will be displayed in the
auto\-generated navigation and various other places.
Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A unique "short name" for the panel. The slug is used as
a component of the URL path for the panel. Default: \fB\(aq\(aq\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names, all of which a user must possess in order
to access any view associated with this panel. This attribute
is combined cumulatively with any permissions required on the
\fBDashboard\fP class with which it is registered.
.UNINDENT
.INDENT 7.0
.TP
.B urls
Path to a URLconf of views for this panel using dotted Python
notation. If no value is specified, a file called \fBurls.py\fP
living in the same package as the \fBpanel.py\fP file is used.
Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B nav
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
The \fBnav\fP attribute can be either boolean value or a callable
which accepts a \fBRequestContext\fP object as a single argument
to control whether or not this panel should appear in
automatically\-generated navigation. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B index_url_name
The \fBname\fP argument for the URL pattern which corresponds to
the index view for this \fBPanel\fP\&. This is the view that
\fBPanel.get_absolute_url()\fP will attempt to reverse.
.UNINDENT
.INDENT 7.0
.TP
.B static can_register()
This optional static method can be used to specify conditions that
need to be satisfied to load this panel. Unlike \fBpermissions\fP and
\fBallowed\fP this method is intended to handle settings based
conditions rather than user based permission and policy checks.
The return value is boolean. If the method returns \fBTrue\fP, then the
panel will be registered and available to user (if \fBpermissions\fP and
\fBallowed\fP runtime checks are also satisfied). If the method returns
\fBFalse\fP, then the panel will not be registered and will not be
available via normal navigation or direct URL access.
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the default URL for this panel.
.sp
The default URL is defined as the URL pattern with \fBname="index"\fP in
the URLconf for this panel.
.UNINDENT
.INDENT 7.0
.TP
.B index_url_name = \(aqindex\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B nav = True
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B urls = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.PanelGroup(dashboard, slug=None, name=None, panels=None)
Bases: \fBobject\fP
.sp
A container for a set of \fBPanel\fP classes.
.sp
When iterated, it will yield each of the \fBPanel\fP instances it
contains.
.INDENT 7.0
.TP
.B slug
A unique string to identify this panel group. Required.
.UNINDENT
.INDENT 7.0
.TP
.B name
A user\-friendly name which will be used as the group heading in
places such as the navigation. Default: \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B panels
A list of panel module names which should be contained within this
grouping.
.UNINDENT
.UNINDENT
.SS The \fBhorizon.loaders\fP Module
.sp
Wrapper for loading templates from "templates" directories in panel modules.
.INDENT 0.0
.TP
.B class horizon.loaders.TemplateLoader(engine)
Bases: \fBdjango.template.loaders.base.Loader\fP
.INDENT 7.0
.TP
.B get_template_sources(template_name)
.UNINDENT
.INDENT 7.0
.TP
.B is_usable = True
.UNINDENT
.INDENT 7.0
.TP
.B load_template_source(template_name, template_dirs=None)
.UNINDENT
.UNINDENT
.SS The \fBhorizon.site_urls\fP Module
.SS The \fBhorizon.decorators\fP Module
.sp
General\-purpose decorators for use with Horizon.
.INDENT 0.0
.TP
.B horizon.decorators.require_auth(view_func)
Performs user authentication check.
.sp
Similar to Django\(aqs \fIlogin_required\fP decorator, except that this throws
\fBNotAuthenticated\fP exception if the user is not
signed\-in.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.decorators.require_perms(view_func, required)
Enforces permission\-based access controls.
.INDENT 7.0
.TP
.B Parameters
\fBrequired\fP (\fIlist\fP) \-\- A tuple of permission names, all of which the request
user must possess in order access the decorated view.
.UNINDENT
.sp
Example usage:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
from horizon.decorators import require_perms


@require_perms([\(aqfoo.admin\(aq, \(aqfoo.member\(aq])
def my_view(request):
    ...
.ft P
.fi
.UNINDENT
.UNINDENT
.sp
Raises a \fBNotAuthorized\fP exception if the
requirements are not met.
.UNINDENT
.SS The \fBhorizon.version\fP Module
.SS The \fBhorizon.management\fP Module
.SS The \fBhorizon.management.commands\fP Module
.SS The \fBhorizon.management.commands.startdash\fP Module
.INDENT 0.0
.TP
.B class horizon.management.commands.startdash.Command(stdout=None, stderr=None, no_color=False)
Bases: \fBdjango.core.management.templates.TemplateCommand\fP
.INDENT 7.0
.TP
.B handle(dash_name=None, **options)
.UNINDENT
.INDENT 7.0
.TP
.B help = \(aqCreates a Django app directory structure for a new dashboard with the given name in the current directory or optionally in the given directory.\(aq
.UNINDENT
.INDENT 7.0
.TP
.B option_list = (<Option at 0x7ff3bd41b050: \-\-target>,)
.UNINDENT
.INDENT 7.0
.TP
.B template = \(aq/home/horizon/horizon/horizon/conf/dash_template\(aq
.UNINDENT
.UNINDENT
.SS The \fBhorizon.management.commands.startpanel\fP Module
.INDENT 0.0
.TP
.B class horizon.management.commands.startpanel.Command(stdout=None, stderr=None, no_color=False)
Bases: \fBdjango.core.management.templates.TemplateCommand\fP
.INDENT 7.0
.TP
.B args = \(aq[name] [dashboard name] [optional destination directory]\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(panel_name=None, **options)
.UNINDENT
.INDENT 7.0
.TP
.B help = \(aqCreates a Django app directory structure for a new panel with the given name in the current directory or optionally in the given directory.\(aq
.UNINDENT
.INDENT 7.0
.TP
.B option_list = (<Option at 0x7ff3bdb057e8: \-d/\-\-dashboard>, <Option at 0x7ff3bdb05050: \-\-target>)
.UNINDENT
.INDENT 7.0
.TP
.B template = \(aq/home/horizon/horizon/horizon/conf/panel_template\(aq
.UNINDENT
.UNINDENT
.SS The \fBhorizon.conf.default\fP Module
.SS The \fBhorizon.conf\fP Module
.INDENT 0.0
.TP
.B class horizon.conf.LazySettings
Bases: \fBdjango.utils.functional.LazyObject\fP
.UNINDENT
.SS The \fBhorizon.conf.dash_template.models\fP Module
.sp
Stub file to work around django bug: \fI\%https://code.djangoproject.com/ticket/7198\fP
.SS The \fBhorizon.conf.dash_template\fP Module
.SS The \fBhorizon.conf.panel_template.views\fP Module
.INDENT 0.0
.TP
.B class horizon.conf.panel_template.views.IndexView(**kwargs)
Bases: \fBhorizon.views.APIView\fP
.INDENT 7.0
.TP
.B get_data(request, context, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aq{{ dash_name }}/{{ panel_name }}/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBhorizon.conf.panel_template\fP Module
.SS The \fBhorizon.browsers.base\fP Module
.INDENT 0.0
.TP
.B class horizon.browsers.base.ResourceBrowser(request, tables_dict=None, attrs=None, **kwargs)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
A class which defines a browser for displaying data.
.INDENT 7.0
.TP
.B name
A short name or slug for the browser.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A more verbose name for the browser meant for display purposes.
.UNINDENT
.INDENT 7.0
.TP
.B navigation_table_class
This table displays data on the left side of the browser.
Set the \fBnavigation_table_class\fP attribute with
the desired \fBDataTable\fP class.
This table class must set browser_table attribute in Meta to
\fB"navigation"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B content_table_class
This table displays data on the right side of the browser.
Set the \fBcontent_table_class\fP attribute with
the desired \fBDataTable\fP class.
This table class must set browser_table attribute in Meta to
\fB"content"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B navigation_kwarg_name
This attribute represents the key of the navigatable items in the
kwargs property of this browser\(aqs view.
Defaults to \fB"navigation_kwarg"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B content_kwarg_name
This attribute represents the key of the content items in the
kwargs property of this browser\(aqs view.
Defaults to \fB"content_kwarg"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B template
String containing the template which should be used to render
the browser. Defaults to \fB"horizon/common/_resource_browser.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B context_var_name
The name of the context variable which will contain the browser when
it is rendered. Defaults to \fB"browser"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B has_breadcrumb
Indicates if the content table of the browser would have breadcrumb.
Defaults to false.
.UNINDENT
.INDENT 7.0
.TP
.B breadcrumb_template
This is a template used to render the breadcrumb.
Defaults to \fB"horizon/common/_breadcrumb.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B breadcrumb_template = \(aqhorizon/common/_breadcrumb.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B breadcrumb_url = None
.UNINDENT
.INDENT 7.0
.TP
.B check_table_class(cls, attr_name)
.UNINDENT
.INDENT 7.0
.TP
.B content_kwarg_name = \(aqcontent_kwarg\(aq
.UNINDENT
.INDENT 7.0
.TP
.B content_table_class = None
.UNINDENT
.INDENT 7.0
.TP
.B context_var_name = \(aqbrowser\(aq
.UNINDENT
.INDENT 7.0
.TP
.B has_breadcrumb = False
.UNINDENT
.INDENT 7.0
.TP
.B name = None
.UNINDENT
.INDENT 7.0
.TP
.B navigable_item_name = <django.utils.functional.__proxy__ object at 0x7ff3bd515f50>
.UNINDENT
.INDENT 7.0
.TP
.B navigation_kwarg_name = \(aqnavigation_kwarg\(aq
.UNINDENT
.INDENT 7.0
.TP
.B navigation_table_class = None
.UNINDENT
.INDENT 7.0
.TP
.B prepare_breadcrumb(tables, navigation_item, content_path)
.UNINDENT
.INDENT 7.0
.TP
.B render()
.UNINDENT
.INDENT 7.0
.TP
.B set_tables(tables)
Sets the table instances on the browser from a dictionary mapping
table names to table instances (as constructed by MultiTableView).
.UNINDENT
.INDENT 7.0
.TP
.B template = \(aqhorizon/common/_resource_browser.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = None
.UNINDENT
.UNINDENT
.SS The \fBhorizon.browsers.views\fP Module
.INDENT 0.0
.TP
.B class horizon.browsers.views.ResourceBrowserView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableView\fP
.INDENT 7.0
.TP
.B browser_class = None
.UNINDENT
.INDENT 7.0
.TP
.B get_browser(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tables()
.UNINDENT
.UNINDENT
.SS The \fBhorizon.browsers\fP Module
.SS The \fBhorizon.browsers.breadcrumb\fP Module
.INDENT 0.0
.TP
.B class horizon.browsers.breadcrumb.Breadcrumb(request, template, root, subfolder_path, url, attr=None)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.INDENT 7.0
.TP
.B get_subfolders()
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the table using the template from the table options.
.UNINDENT
.UNINDENT
.SS The \fBhorizon.templatetags\fP Module
.SS The \fBhorizon.templatetags.sizeformat\fP Module
.sp
Template tags for displaying sizes
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.diskgbformat(gb)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.filesizeformat(bytes, filesize_number_format)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.float_cast_filesizeformat(value, multiplier=1, format=<function int_format at 0x7ff3bd3b4c80>)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.float_format(value)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.int_format(value)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.mb_float_format(mb)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.sizeformat.mbformat(mb)
.UNINDENT
.SS The \fBhorizon.templatetags.form_helpers\fP Module
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.add_bootstrap_class(field)
Add a "form\-control" CSS class to the field\(aqs widget.
.sp
This is so that Bootstrap styles it properly.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.add_item_url(field)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.is_checkbox(field)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.is_file(field)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.is_multiple_checkbox(field)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.is_radio(field)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.form_helpers.wrapper_classes(field)
.UNINDENT
.SS The \fBhorizon.templatetags.branding\fP Module
.sp
Template tags for customizing Horizon.
.INDENT 0.0
.TP
.B class horizon.templatetags.branding.SaveBrandingNode(var_name)
Bases: \fBdjango.template.base.Node\fP
.INDENT 7.0
.TP
.B render(context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.templatetags.branding.SiteBrandingNode
Bases: \fBdjango.template.base.Node\fP
.INDENT 7.0
.TP
.B render(context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.branding.save_site_branding(parser, token)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.branding.site_branding(parser, token)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.branding.site_branding_link()
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.branding.site_title(parser, token)
.UNINDENT
.SS The \fBhorizon.templatetags.parse_date\fP Module
.sp
Template tags for parsing date strings.
.INDENT 0.0
.TP
.B class horizon.templatetags.parse_date.ParseDateNode
Bases: \fBdjango.template.base.Node\fP
.INDENT 7.0
.TP
.B render(datestring)
Parses a date\-like input string into a timezone aware Python
datetime.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.parse_date.parse_date(value)
.UNINDENT
.SS The \fBhorizon.templatetags.horizon\fP Module
.INDENT 0.0
.TP
.B class horizon.templatetags.horizon.JSTemplateNode(nodelist)
Bases: \fBdjango.template.base.Node\fP
.sp
Helper node for the \fBjstemplate\fP template tag.
.INDENT 7.0
.TP
.B render(context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.datepicker_locale()
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.has_permissions(user, component)
Checks if the given user meets the permissions requirements for
the component.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.has_permissions_on_list(components, user)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.horizon_dashboard_nav(context)
Generates sub\-navigation entries for the current dashboard.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.horizon_main_nav(context)
Generates top\-level dashboard navigation entries.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.horizon_nav(context)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.jstemplate(parser, token)
Replaces \fB[[[\fP and \fB]]]\fP with \fB{{{\fP and \fB}}}\fP,
\fB[[\fP and \fB]]\fP with \fB{{\fP and \fB}}\fP  and
\fB[%\fP and \fB%]\fP with \fB{%\fP and \fB%}\fP to avoid conflicts
with Django\(aqs template engine when using any of the Mustache\-based
templating libraries.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.load_config()
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.quota(val, units=None)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.quotainf(val, units=None)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.templatetags.horizon.quotapercent(used, limit)
.UNINDENT
.SS The \fBhorizon.templatetags.shellfilter\fP Module
.INDENT 0.0
.TP
.B horizon.templatetags.shellfilter.shellfilter(*args, **kwargs)
Replace HTML chars for shell usage.
.UNINDENT
.SS The \fBhorizon.templatetags.truncate_filter\fP Module
.sp
Template tags for truncating strings.
.INDENT 0.0
.TP
.B horizon.templatetags.truncate_filter.truncate(value, size)
.UNINDENT
.SS The \fBhorizon.contrib\fP Module
.SS The \fBhorizon.contrib.bootstrap_datepicker\fP Module
.SS The \fBhorizon.tables.base\fP Module
.INDENT 0.0
.TP
.B class horizon.tables.base.Cell(datum, column, row, attrs=None, classes=None)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
Represents a single cell in the table.
.INDENT 7.0
.TP
.B get_ajax_update_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_data(datum, column, row)
Fetches the data to be displayed in this cell.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns a flattened string of the cell\(aqs CSS classes.
.UNINDENT
.INDENT 7.0
.TP
.B get_status_class(status)
Returns a css class name determined by the status value.
.UNINDENT
.INDENT 7.0
.TP
.B id
.UNINDENT
.INDENT 7.0
.TP
.B render()
.UNINDENT
.INDENT 7.0
.TP
.B status
Gets the status for the column based on the cell\(aqs data.
.UNINDENT
.INDENT 7.0
.TP
.B update_allowed
Determines whether update of given cell is allowed.
.sp
Calls allowed action of defined UpdateAction of the Column.
.UNINDENT
.INDENT 7.0
.TP
.B url
.UNINDENT
.INDENT 7.0
.TP
.B value
Returns a formatted version of the data for final output.
.sp
This takes into consideration the
\fBlink\(ga\fP and
\fBempty_value\fP
attributes.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.base.Column(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
A class which represents a single column in a \fBDataTable\fP\&.
.INDENT 7.0
.TP
.B transform
A string or callable. If \fBtransform\fP is a string, it should be the
name of the attribute on the underlying data class which
should be displayed in this column. If it is a callable, it
will be passed the current row\(aqs data at render\-time and should
return the contents of the cell. Required.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
The name for this column which should be used for display purposes.
Defaults to the value of \fBtransform\fP with the first letter
of each word capitalized if the \fBtransform\fP is not callable,
otherwise it defaults to an empty string (\fB""\fP).
.UNINDENT
.INDENT 7.0
.TP
.B sortable
Boolean to determine whether this column should be sortable or not.
Defaults to \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B hidden
Boolean to determine whether or not this column should be displayed
when rendering the table. Default: \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B link
A string or callable which returns a URL which will be wrapped around
this column\(aqs text as a link.
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types
A list of data types for which the link should be created.
Default is an empty list (\fB[]\fP).
.sp
When the list is empty and the \fBlink\fP attribute is not None, all the
rows under this column will be links.
.UNINDENT
.INDENT 7.0
.TP
.B status
Boolean designating whether or not this column represents a status
(i.e. "enabled/disabled", "up/down", "active/inactive").
Default: \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B status_choices
A tuple of tuples representing the possible data values for the
status column and their associated boolean equivalent. Positive
states should equate to \fBTrue\fP, negative states should equate
to \fBFalse\fP, and indeterminate states should be \fBNone\fP\&.
.sp
Values are compared in a case\-insensitive manner.
.sp
Example (these are also the default values):
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
status_choices = (
        (\(aqenabled\(aq, True),
        (\(aqtrue\(aq, True)
        (\(aqup\(aq, True),
        (\(aqactive\(aq, True),
        (\(aqyes\(aq, True),
        (\(aqon\(aq, True),
        (\(aqnone\(aq, None),
        (\(aqunknown\(aq, None),
        (\(aq\(aq, None),
        (\(aqdisabled\(aq, False),
        (\(aqdown\(aq, False),
        (\(aqfalse\(aq, False),
        (\(aqinactive\(aq, False),
        (\(aqno\(aq, False),
        (\(aqoff\(aq, False),
    )
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B display_choices
A tuple of tuples representing the possible values to substitute
the data when displayed in the column cell.
.UNINDENT
.INDENT 7.0
.TP
.B empty_value
A string or callable to be used for cells which have no data.
Defaults to the string \fB"\-"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B summation
A string containing the name of a summation method to be used in
the generation of a summary row for this column. By default the
options are \fB"sum"\fP or \fB"average"\fP, which behave as expected.
Optional.
.UNINDENT
.INDENT 7.0
.TP
.B filters
A list of functions (often template filters) to be applied to the
value of the data for this column prior to output. This is effectively
a shortcut for writing a custom \fBtransform\fP function in simple cases.
.UNINDENT
.INDENT 7.0
.TP
.B classes
An iterable of CSS classes which should be added to this column.
Example: \fBclasses=(\(aqfoo\(aq, \(aqbar\(aq)\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B attrs
A dict of HTML attribute strings which should be added to this column.
Example: \fBattrs={"data\-foo": "bar"}\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B cell_attributes_getter
A callable to get the HTML attributes of a column cell depending
on the data. For example, to add additional description or help
information for data in a column cell (e.g. in Images panel, for the
column \(aqformat\(aq):
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
helpText = {
  \(aqARI\(aq:\(aqAmazon Ramdisk Image\(aq
  \(aqQCOW2\(aq:\(aqQEMU\(aq Emulator\(aq
  }

getHoverHelp(data):
  text = helpText.get(data, None)
  if text:
      return {\(aqtitle\(aq: text}
  else:
      return {}
\&...
\&...
cell_attributes_getter = getHoverHelp
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B truncate
An integer for the maximum length of the string in this column. If the
length of the data in this column is larger than the supplied number,
the data for this column will be truncated and an ellipsis will be
appended to the truncated data.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B link_classes
An iterable of CSS classes which will be added when the column\(aqs text
is displayed as a link.
This is left for backward compatibility. Deprecated in favor of the
link_attributes attribute.
Example: \fBlink_classes=(\(aqlink\-foo\(aq, \(aqlink\-bar\(aq)\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B wrap_list
Boolean value indicating whether the contents of this cell should be
wrapped in a \fB<ul></ul>\fP tag. Useful in conjunction with Django\(aqs
\fBunordered_list\fP template filter. Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B form_field
A form field used for inline editing of the column. A django
forms.Field can be used or django form.Widget can be used.
.sp
Example: \fBform_field=forms.CharField(required=True)\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B form_field_attributes
The additional html attributes that will be rendered to form_field.
Example: \fBform_field_attributes={\(aqclass\(aq: \(aqbold_input_field\(aq}\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B update_action
The class that inherits from tables.actions.UpdateAction, update_cell
method takes care of saving inline edited data. The tables.base.Row
get_data method needs to be connected to table for obtaining the data.
Example: \fBupdate_action=UpdateCell\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B link_attrs
A dict of HTML attribute strings which should be added when the
column\(aqs text is displayed as a link.
Examples:
\fBlink_attrs={"data\-foo": "bar"}\fP\&.
\fBlink_attrs={"target": "_blank", "class": "link\-foo link\-bar"}\fP\&.
Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B help_text
A string of simple help text displayed in a tooltip when you hover
over the help icon beside the Column name. Defaults to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B creation_counter = 0
.UNINDENT
.INDENT 7.0
.TP
.B get_data(datum)
Returns the final display data for this column from the given
inputs.
.sp
The return value will be either the attribute specified for this column
or the return value of the attr:\fI~horizon.tables.Column.transform\fP
method for this column.
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
Returns the final value for the column\(aqs \fBlink\fP property.
.sp
If \fBallowed_data_types\fP of this column  is not empty and the datum
has an assigned type, check if the datum\(aqs type is in the
\fBallowed_data_types\fP list. If not, the datum won\(aqt be displayed
as a link.
.sp
If \fBlink\fP is a callable, it will be passed the current data object
and should return a URL. Otherwise \fBget_link_url\fP will attempt to
call \fBreverse\fP on \fBlink\fP with the object\(aqs id as a parameter.
Failing that, it will simply return the value of \fBlink\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_raw_data(datum)
Returns the raw data for this column, before any filters or
formatting are applied to it. This is useful when doing calculations
on data in the table.
.UNINDENT
.INDENT 7.0
.TP
.B get_summation()
Returns the summary value for the data in this column if a
valid summation method is specified for it. Otherwise returns \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B name = None
.UNINDENT
.INDENT 7.0
.TP
.B status_choices = ((\(aqenabled\(aq, True), (\(aqtrue\(aq, True), (\(aqup\(aq, True), (\(aqyes\(aq, True), (\(aqactive\(aq, True), (\(aqon\(aq, True), (\(aqnone\(aq, None), (\(aqunknown\(aq, None), (\(aq\(aq, None), (\(aqdisabled\(aq, False), (\(aqdown\(aq, False), (\(aqfalse\(aq, False), (\(aqinactive\(aq, False), (\(aqno\(aq, False), (\(aqoff\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B summation_methods = {\(aqsum\(aq: <built\-in function sum>, \(aqaverage\(aq: <function <lambda> at 0x7ff3bea071b8>}
.UNINDENT
.INDENT 7.0
.TP
.B transform = None
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.base.DataTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBobject\fP
.sp
A class which defines a table with all data and associated actions.
.INDENT 7.0
.TP
.B name
String. Read\-only access to the name specified in the
table\(aqs Meta options.
.UNINDENT
.INDENT 7.0
.TP
.B multi_select
Boolean. Read\-only access to whether or not this table
should display a column for multi\-select checkboxes.
.UNINDENT
.INDENT 7.0
.TP
.B data
Read\-only access to the data this table represents.
.UNINDENT
.INDENT 7.0
.TP
.B filtered_data
Read\-only access to the data this table represents, filtered by
the \fBfilter()\fP method of the table\(aqs
\fBFilterAction\fP class (if one is provided)
using the current request\(aqs query parameters.
.UNINDENT
.INDENT 7.0
.TP
.B base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B base_columns = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B calculate_row_status(statuses)
Returns a boolean value determining the overall row status
based on the dictionary of column name to status mappings passed in.
.sp
By default, it uses the following logic:
.INDENT 7.0
.IP 1. 3
If any statuses are \fBFalse\fP, return \fBFalse\fP\&.
.IP 2. 3
If no statuses are \fBFalse\fP but any or \fBNone\fP, return \fBNone\fP\&.
.IP 3. 3
If all statuses are \fBTrue\fP, return \fBTrue\fP\&.
.UNINDENT
.sp
This provides the greatest protection against false positives without
weighting any particular columns.
.sp
The \fBstatuses\fP parameter is passed in as a dictionary mapping
column names to their statuses in order to allow this function to
be overridden in such a way as to weight one column\(aqs status over
another should that behavior be desired.
.UNINDENT
.INDENT 7.0
.TP
.B classmethod check_handler(request)
Determine whether the request should be handled by this table.
.UNINDENT
.INDENT 7.0
.TP
.B css_classes()
Returns the additional CSS class to be added to <table> tag.
.UNINDENT
.INDENT 7.0
.TP
.B filtered_data
.UNINDENT
.INDENT 7.0
.TP
.B footer
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the canonical URL for this table.
.sp
This is used for the POST action attribute on the form element
wrapping the table. In many cases it is also useful for redirecting
after a successful action on the table.
.sp
For convenience it defaults to the value of
\fBrequest.get_full_path()\fP with any query string stripped off,
e.g. the path at which the table was requested.
.UNINDENT
.INDENT 7.0
.TP
.B get_columns()
Returns this table\(aqs columns including auto\-generated ones.
.UNINDENT
.INDENT 7.0
.TP
.B get_empty_message()
Returns the message to be displayed when there is no data.
.UNINDENT
.INDENT 7.0
.TP
.B get_filter_field()
Get the filter field value used for \(aqserver\(aq type filters. This
is the value from the filter action\(aqs list of filter choices.
.UNINDENT
.INDENT 7.0
.TP
.B get_filter_string()
Get the filter string value. For \(aqserver\(aq type filters this is
saved in the session so that it gets persisted across table loads.
For other filter types this is obtained from the POST dict.
.UNINDENT
.INDENT 7.0
.TP
.B get_full_url()
Returns the full URL path for this table.
.sp
This is used for the POST action attribute on the form element
wrapping the table. We use this method to persist the
pagination marker.
.UNINDENT
.INDENT 7.0
.TP
.B get_marker()
Returns the identifier for the last object in the current data set
for APIs that use marker/limit\-based paging.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_by_id(lookup)
Returns the data object from the table\(aqs dataset which matches
the \fBlookup\fP parameter specified. An error will be raised if
the match is not a single data object.
.sp
We will convert the object id and \fBlookup\fP to unicode before
comparison.
.sp
Uses \fBget_object_id()\fP internally.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(datum)
Returns a display name that identifies this object.
.sp
By default, this returns a \fBname\fP attribute from the given object,
but this can be overridden to return other values.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(datum)
Returns the identifier for the object this row will represent.
.sp
By default this returns an \fBid\fP attribute on the given object,
but this can be overridden to return other values.
.sp
\fBWARNING:\fP
.INDENT 7.0
.INDENT 3.5
Make sure that the value returned is a unique value for the id
otherwise rendering issues can occur.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B get_pagination_string()
Returns the query parameter string to paginate this table
to the next page.
.UNINDENT
.INDENT 7.0
.TP
.B get_prev_marker()
Returns the identifier for the first object in the current data set
for APIs that use marker/limit\-based paging.
.UNINDENT
.INDENT 7.0
.TP
.B get_prev_pagination_string()
Returns the query parameter string to paginate this table
to the previous page.
.UNINDENT
.INDENT 7.0
.TP
.B get_row_actions(datum)
Returns a list of the action instances for a specific row.
.UNINDENT
.INDENT 7.0
.TP
.B get_row_status_class(status)
Returns a css class name determined by the status value. This class
name is used to indicate the status of the rows in the table if
any \fBstatus_columns\fP have been specified.
.UNINDENT
.INDENT 7.0
.TP
.B get_rows()
Return the row data for this table broken out by columns.
.UNINDENT
.INDENT 7.0
.TP
.B get_table_actions()
Returns a list of the action instances for this table.
.UNINDENT
.INDENT 7.0
.TP
.B has_actions
Boolean. Indicates whether there are any available actions on this
table.
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data()
Returns a boolean value indicating whether there is more data
available to this table from the source (generally an API).
.sp
The method is largely meant for internal use, but if you want to
override it to provide custom behavior you can do so at your own risk.
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data()
Returns a boolean value indicating whether there is previous data
available to this table from the source (generally an API).
.sp
The method is largely meant for internal use, but if you want to
override it to provide custom behavior you can do so at your own risk.
.UNINDENT
.INDENT 7.0
.TP
.B inline_edit_handle(request, table_name, action_name, obj_id, new_row)
Inline edit handler.
.sp
Showing form or handling update by POST of the cell.
.UNINDENT
.INDENT 7.0
.TP
.B inline_update_action(request, datum, cell, obj_id, cell_name)
Handling update by POST of the cell.
.UNINDENT
.INDENT 7.0
.TP
.B is_browser_table()
.UNINDENT
.INDENT 7.0
.TP
.B maybe_handle()
Determine whether the request should be handled by any action on
this table after data has been loaded.
.UNINDENT
.INDENT 7.0
.TP
.B maybe_preempt()
Determine whether the request should be handled by a preemptive
action on this table or by an AJAX row update before loading any data.
.UNINDENT
.INDENT 7.0
.TP
.B multi_select
.UNINDENT
.INDENT 7.0
.TP
.B name
.UNINDENT
.INDENT 7.0
.TP
.B needs_form_wrapper
Boolean. Indicates whether this table should be rendered wrapped in
a \fB<form>\fP tag or not.
.UNINDENT
.INDENT 7.0
.TP
.B static parse_action(action_string)
Parses the \fBaction\fP parameter (a string) sent back with the
POST data. By default this parses a string formatted as
\fB{{ table_name }}__{{ action_name }}__{{ row_id }}\fP and returns
each of the pieces. The \fBrow_id\fP is optional.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the table using the template from the table options.
.UNINDENT
.INDENT 7.0
.TP
.B render_row_actions(datum, pull_right=True, row=False)
Renders the actions specified in \fBMeta.row_actions\fP using the
current row data. If \fIrow\fP is True, the actions are rendered in a row
of buttons. Otherwise they are rendered in a dropdown box.
.UNINDENT
.INDENT 7.0
.TP
.B render_table_actions()
Renders the actions specified in \fBMeta.table_actions\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B sanitize_id(obj_id)
Override to modify an incoming obj_id to match existing
API data types or modify the format.
.UNINDENT
.INDENT 7.0
.TP
.B set_multiselect_column_visibility(visible=True)
hide checkbox column if no current table action is allowed.
.UNINDENT
.INDENT 7.0
.TP
.B slugify_name()
.UNINDENT
.INDENT 7.0
.TP
.B take_action(action_name, obj_id=None, obj_ids=None)
Locates the appropriate action and routes the object
data to it. The action should return an HTTP redirect
if successful, or a value which evaluates to \fBFalse\fP
if unsuccessful.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.base.DataTableMetaclass
Bases: \fBtype\fP
.sp
Metaclass to add options to DataTable class and collect columns.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.base.DataTableOptions(options)
Bases: \fBobject\fP
.sp
Contains options for \fBDataTable\fP objects.
.INDENT 7.0
.TP
.B name
A short name or slug for the table.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A more verbose name for the table meant for display purposes.
.UNINDENT
.INDENT 7.0
.TP
.B columns
A list of column objects or column names. Controls ordering/display
of the columns in the table.
.UNINDENT
.INDENT 7.0
.TP
.B table_actions
A list of action classes derived from the
\fBAction\fP class. These actions will handle tasks
such as bulk deletion, etc. for multiple objects at once.
.UNINDENT
.INDENT 7.0
.TP
.B table_actions_menu
A list of action classes similar to \fBtable_actions\fP except these
will be displayed in a menu instead of as individual buttons. Actions
from this list will take precedence over actions from the
\fBtable_actions\fP list.
.UNINDENT
.INDENT 7.0
.TP
.B row_actions
A list similar to \fBtable_actions\fP except tailored to appear for
each row. These actions act on a single object at a time.
.UNINDENT
.INDENT 7.0
.TP
.B actions_column
Boolean value to control rendering of an additional column containing
the various actions for each row. Defaults to \fBTrue\fP if any actions
are specified in the \fBrow_actions\fP option.
.UNINDENT
.INDENT 7.0
.TP
.B multi_select
Boolean value to control rendering of an extra column with checkboxes
for selecting multiple objects in the table. Defaults to \fBTrue\fP if
any actions are specified in the \fBtable_actions\fP option.
.UNINDENT
.INDENT 7.0
.TP
.B filter
Boolean value to control the display of the "filter" search box
in the table actions. By default it checks whether or not an instance
of \fBFilterAction\fP is in \fBtable_actions\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B template
String containing the template which should be used to render the
table. Defaults to \fB"horizon/common/_data_table.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B context_var_name
The name of the context variable which will contain the table when
it is rendered. Defaults to \fB"table"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B prev_pagination_param
The name of the query string parameter which will be used when
paginating backward in this table. When using multiple tables in a
single view this will need to be changed to differentiate between the
tables. Default: \fB"prev_marker"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B pagination_param
The name of the query string parameter which will be used when
paginating forward in this table. When using multiple tables in a
single view this will need to be changed to differentiate between the
tables. Default: \fB"marker"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B status_columns
A list or tuple of column names which represents the "state"
of the data object being represented.
.sp
If \fBstatus_columns\fP is set, when the rows are rendered the value
of this column will be used to add an extra class to the row in
the form of \fB"status_up"\fP or \fB"status_down"\fP for that row\(aqs
data.
.sp
The row status is used by other Horizon components to trigger tasks
such as dynamic AJAX updating.
.UNINDENT
.INDENT 7.0
.TP
.B cell_class
The class which should be used for rendering the cells of this table.
Optional. Default: \fBCell\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B row_class
The class which should be used for rendering the rows of this table.
Optional. Default: \fBRow\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B column_class
The class which should be used for handling the columns of this table.
Optional. Default: \fBColumn\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B css_classes
A custom CSS class or classes to add to the \fB<table>\fP tag of the
rendered table, for when the particular table requires special styling.
Default: \fB""\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B mixed_data_type
A toggle to indicate if the table accepts two or more types of data.
Optional. Default: \fBFalse\fP
.UNINDENT
.INDENT 7.0
.TP
.B data_types
A list of data types that this table would accept. Default to be an
empty list, but if the attribute \fBmixed_data_type\fP is set to
\fBTrue\fP, then this list must have at least one element.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_name
The name of an attribute to assign to data passed to the table when it
accepts mix data. Default: \fB"_table_data_type"\fP
.UNINDENT
.INDENT 7.0
.TP
.B footer
Boolean to control whether or not to show the table\(aqs footer.
Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B hidden_title
Boolean to control whether or not to show the table\(aqs title.
Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names which this table requires in order to be
displayed. Defaults to an empty list (\fB[]\fP).
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.base.Row(table, datum=None)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
Represents a row in the table.
.sp
When iterated, the \fBRow\fP instance will yield each of its cells.
.sp
Rows are capable of AJAX updating, with a little added work:
.sp
The \fBajax\fP property needs to be set to \fBTrue\fP, and
subclasses need to define a \fBget_data\fP method which returns a data
object appropriate for consumption by the table (effectively the "get"
lookup versus the table\(aqs "list" lookup).
.sp
The automatic update interval is configurable by setting the key
\fBajax_poll_interval\fP in the \fBHORIZON_CONFIG\fP dictionary.
Default: \fB2500\fP (measured in milliseconds).
.INDENT 7.0
.TP
.B table
The table which this row belongs to.
.UNINDENT
.INDENT 7.0
.TP
.B datum
The data object which this row represents.
.UNINDENT
.INDENT 7.0
.TP
.B id
A string uniquely representing this row composed of the table name
and the row data object\(aqs identifier.
.UNINDENT
.INDENT 7.0
.TP
.B cells
The cells belonging to this row stored in a \fBOrderedDict\fP object.
This attribute is populated during instantiation.
.UNINDENT
.INDENT 7.0
.TP
.B status
Boolean value representing the status of this row calculated from
the values of the table\(aqs \fBstatus_columns\fP if they are set.
.UNINDENT
.INDENT 7.0
.TP
.B status_class
Returns a css class for the status of the row based on \fBstatus\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B ajax
Boolean value to determine whether ajax updating for this row is
enabled.
.UNINDENT
.INDENT 7.0
.TP
.B ajax_action_name
String that is used for the query parameter key to request AJAX
updates. Generally you won\(aqt need to change this value.
Default: \fB"row_update"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B ajax_cell_action_name
String that is used for the query parameter key to request AJAX
updates of cell. Generally you won\(aqt need to change this value.
It is also used for inline edit of the cell.
Default: \fB"cell_update"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B ajax_action_name = \(aqrow_update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B ajax_cell_action_name = \(aqcell_update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B can_be_selected(datum)
By default if multiselect enabled return True. You can remove the
checkbox after an ajax update here if required.
.UNINDENT
.INDENT 7.0
.TP
.B get_ajax_update_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_cells()
Returns the bound cells for this row in order.
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, obj_id)
Fetches the updated data for the row based on the object id
passed in. Must be implemented by a subclass to allow AJAX updating.
.UNINDENT
.INDENT 7.0
.TP
.B load_cells(datum=None)
Load the row\(aqs data (either provided at initialization or as an
argument to this function), initialize all the cells contained
by this row, and set the appropriate row properties which require
the row\(aqs data to be determined.
.sp
This function is called automatically by
\fB__init__()\fP if the \fBdatum\fP argument is
provided. However, by not providing the data during initialization
this function allows for the possibility of a two\-step loading
pattern when you need a row instance but don\(aqt yet have the data
available.
.UNINDENT
.INDENT 7.0
.TP
.B render()
.UNINDENT
.INDENT 7.0
.TP
.B status
.UNINDENT
.INDENT 7.0
.TP
.B status_class
.UNINDENT
.UNINDENT
.SS The \fBhorizon.tables.views\fP Module
.INDENT 0.0
.TP
.B class horizon.tables.views.DataTableView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableView\fP
.sp
A class\-based generic view to handle basic DataTable processing.
.sp
Three steps are required to use this view: set the \fBtable_class\fP
attribute with the desired \fBDataTable\fP class;
define a \fBget_data\fP method which returns a set of data for the
table; and specify a template for the \fBtemplate_name\fP attribute.
.sp
Optionally, you can override the \fBhas_more_data\fP method to trigger
pagination handling for APIs that support it.
.INDENT 7.0
.TP
.B context_object_name = \(aqtable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_server_filter_info(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_table()
.UNINDENT
.INDENT 7.0
.TP
.B get_tables()
.UNINDENT
.INDENT 7.0
.TP
.B handle_server_filter(request)
Update the table server filter information in the session and
determine if the filter has been changed.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B table_class = None
.UNINDENT
.INDENT 7.0
.TP
.B update_server_filter_action()
Update the table server side filter action based on the current
filter. The filter info may be stored in the session and this will
restore it.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.views.MixedDataTableView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.sp
A class\-based generic view to handle DataTable with mixed data
types.
.sp
Basic usage is the same as DataTableView.
.sp
Three steps are required to use this view:
#. Set the \fBtable_class\fP attribute with desired
\fBDataTable\fP class. In the class the
\fBdata_types\fP list should have at least two elements.
.sp
#. Define a \fBget_{{ data_type }}_data\fP method for each data type
which returns a set of data for the table.
.INDENT 7.0
.IP 1. 3
Specify a template for the \fBtemplate_name\fP attribute.
.UNINDENT
.INDENT 7.0
.TP
.B assign_type_string(data, type_string)
.UNINDENT
.INDENT 7.0
.TP
.B context_object_name = \(aqtable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_table()
.UNINDENT
.INDENT 7.0
.TP
.B table_class = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.views.MultiTableMixin(*args, **kwargs)
Bases: \fBobject\fP
.sp
A generic mixin which provides methods for handling DataTables.
.INDENT 7.0
.TP
.B assign_type_string(data, type_name, data_type)
.UNINDENT
.INDENT 7.0
.TP
.B check_method_exist(func_pattern=\(aq%s\(aq, *names)
.UNINDENT
.INDENT 7.0
.TP
.B data_method_pattern = \(aqget_%s_data\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data_methods(table_classes, methods)
.UNINDENT
.INDENT 7.0
.TP
.B get_tables()
.UNINDENT
.INDENT 7.0
.TP
.B handle_table(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B wrap_func(data_func, type_name, data_type)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.views.MultiTableView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableMixin\fP, \fBhorizon.views.HorizonTemplateView\fP
.sp
A class\-based generic view to handle the display and processing of
multiple \fBDataTable\fP classes in a single view.
.sp
Three steps are required to use this view: set the \fBtable_classes\fP
attribute with a tuple of the desired
\fBDataTable\fP classes;
define a \fBget_{{ table_name }}_data\fP method for each table class
which returns a set of data for that table; and specify a template for
the \fBtemplate_name\fP attribute.
.INDENT 7.0
.TP
.B construct_tables()
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
.UNINDENT
.UNINDENT
.SS The \fBhorizon.tables\fP Module
.SS The \fBhorizon.tables.actions\fP Module
.INDENT 0.0
.TP
.B class horizon.tables.actions.Action(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.BaseAction\fP
.sp
Represents an action which can be taken on this table\(aqs data.
.INDENT 7.0
.TP
.B name
Required. The short name or "slug" representing this
action. This name should not be changed at runtime.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A descriptive name used for display purposes. Defaults to the
value of \fBname\fP with the first letter of each word capitalized.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name_plural
Used like \fBverbose_name\fP in cases where \fBhandles_multiple\fP is
\fBTrue\fP\&. Defaults to \fBverbose_name\fP with the letter "s" appended.
.UNINDENT
.INDENT 7.0
.TP
.B method
The HTTP method for this action. Defaults to \fBPOST\fP\&. Other methods
may or may not succeed currently.
.UNINDENT
.INDENT 7.0
.TP
.B requires_input
Boolean value indicating whether or not this action can be taken
without any additional input (e.g. an object id). Defaults to \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B preempt
Boolean value indicating whether this action should be evaluated in
the period after the table is instantiated but before the data has
been loaded.
.sp
This can allow actions which don\(aqt need access to the full table data
to bypass any API calls and processing which would otherwise be
required to load the table.
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types
A list that contains the allowed data types of the action.  If the
datum\(aqs type is in this list, the action will be shown on the row
for the datum.
.sp
Default to be an empty list (\fB[]\fP). When set to empty, the action
will accept any kind of data.
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules
list of scope and rule tuples to do policy checks on, the
composition of which is (scope, rule)
.INDENT 7.0
.INDENT 3.5
scope: service type managing the policy for action
rule: string representing the action to be checked
.INDENT 0.0
.TP
.B for a policy that requires a single rule check:
.INDENT 7.0
.TP
.B policy_rules should look like
"(("compute", "compute:create_instance"),)"
.UNINDENT
.TP
.B for a policy that requires multiple rule checks:
.INDENT 7.0
.TP
.B rules should look like
.INDENT 7.0
.TP
.B "(("identity", "identity:list_users"),
("identity", "identity:list_roles"))"
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
At least one of the following methods must be defined:
.INDENT 7.0
.TP
.B single(self, data_table, request, object_id)
Handler for a single\-object action.
.UNINDENT
.INDENT 7.0
.TP
.B multiple(self, data_table, request, object_ids)
Handler for multi\-object actions.
.UNINDENT
.INDENT 7.0
.TP
.B handle(self, data_table, request, object_ids)
If a single function can work for both single\-object and
multi\-object cases then simply providing a \fBhandle\fP function
will internally route both \fBsingle\fP and \fBmultiple\fP requests
to \fBhandle\fP with the calls from \fBsingle\fP being transformed
into a list containing only the single object id.
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>}
.UNINDENT
.INDENT 7.0
.TP
.B get_param_name()
Returns the full POST parameter name for this action.
.sp
Defaults to
\fB{{ table.name }}__{{ action.name }}\fP\&.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.BaseAction(**kwargs)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
Common base class for all \fBAction\fP classes.
.INDENT 7.0
.TP
.B allowed(request, datum)
Determine whether this action is allowed for the current request.
.sp
This method is meant to be overridden with more specific checks.
.UNINDENT
.INDENT 7.0
.TP
.B associate_with_table(table)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}
.UNINDENT
.INDENT 7.0
.TP
.B data_type_matched(datum)
Method to see if the action is allowed for a certain type of data.
Only affects mixed data type tables.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_attrs()
Returns a list of the default HTML attributes for the action.
Defaults to returning an \fBid\fP attribute with the value
\fB{{ table.name }}__action_{{ action.name }}__{{ creation counter }}\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns a list of the default classes for the action. Defaults to
\fB["btn", "btn\-default", "btn\-sm"]\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_policy_target(request, datum)
Provide the target for a policy request.
.sp
This method is meant to be overridden to return target details when
one of the policy checks requires them.  E.g., {"user_id": datum.id}
.UNINDENT
.INDENT 7.0
.TP
.B update(request, datum)
Allows per\-action customization based on current conditions.
.sp
This is particularly useful when you wish to create a "toggle"
action that will be rendered differently based on the value of an
attribute on the current row\(aqs data.
.sp
By default this method is a no\-op.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.BaseActionMetaClass
Bases: \fBtype\fP
.sp
Metaclass for adding all actions options from inheritance tree
to action.
This way actions can inherit from each other but still use
the class attributes DSL. Meaning, all attributes of Actions are
defined as class attributes, but in the background, it will be used as
parameters for the initializer of the object. The object is then
initialized clean way. Similar principle is used in DataTableMetaclass.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.BatchAction(**kwargs)
Bases: \fBhorizon.tables.actions.Action\fP
.sp
A table action which takes batch action on one or more
objects. This action should not require user input on a
per\-object basis.
.INDENT 7.0
.TP
.B name
An internal name for this action.
.UNINDENT
.INDENT 7.0
.TP
.B action_present()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_present(PendingDeprecation)
String or tuple/list. The display forms of the name.
Should be a transitive verb, capitalized and translated. ("Delete",
"Rotate", etc.) If tuple or list \- then setting
self.current_present_action = n will set the current active item
from the list(action_present[n])
.sp
You can pass a complete action name including \(aqdata_type\(aq by specifying
\(aq%(data_type)s\(aq substitution in action_present ("Delete %(data_type)s").
Otherwise a complete action name is a format of "<action> <data_type>".
<data_type> is determined based on the number of items.
By passing a complete action name you allow translators to control
the order of words as they want.
.sp
NOTE: action_present attribute is bad for translations and should be
avoided. Please use the action_present method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B action_past()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_past(PendingDeprecation)
String or tuple/list. The past tense of action_present. ("Deleted",
"Rotated", etc.) If tuple or list \- then
setting self.current_past_action = n will set the current active item
from the list(action_past[n])
.sp
NOTE: action_past attribute is bad for translations and should be
avoided. Please use the action_past method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular
Optional display name (if the data_type method is not defined) for the
type of data that receives the action. ("Key Pair", "Floating IP", etc.)
.UNINDENT
.INDENT 7.0
.TP
.B data_type_plural
Optional plural word (if the data_type method is not defined) for the
type of data being acted on. Defaults to appending \(aqs\(aq. Relying on the
default is bad for translations and should not be done, so it\(aqs absence
will raise a DeprecationWarning. It is currently kept as optional for
legacy code.
.sp
NOTE: data_type_singular and data_type_plural attributes are bad for
translations and should be avoided. Please use the action_present and
action_past methods. This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B success_url
Optional location to redirect after completion of the delete
action. Defaults to the current page.
.UNINDENT
.INDENT 7.0
.TP
.B help_text
Optional message for providing an appropriate help text for
the horizon user.
.UNINDENT
.INDENT 7.0
.TP
.B action(request, datum_id)
Required. Accepts a single object id and performs the specific
action.
.sp
Return values are discarded, errors raised are caught and logged.
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06b18>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_default_attrs()
Returns a list of the default HTML attributes for the action.
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request=None)
Returns the URL to redirect to after a successful action.
.UNINDENT
.INDENT 7.0
.TP
.B handle(table, request, obj_ids)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>
.UNINDENT
.INDENT 7.0
.TP
.B update(request, datum)
Switches the action verbose name, if needed.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.DeleteAction(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.sp
A table action used to perform delete operations on table data.
.INDENT 7.0
.TP
.B name
A short name or "slug" representing this action.
Defaults to \(aqdelete\(aq
.UNINDENT
.INDENT 7.0
.TP
.B action_present()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_present(PendingDeprecation)
A string containing the transitive verb describing the delete action.
Defaults to \(aqDelete\(aq
.sp
NOTE: action_present attribute is bad for translations and should be
avoided. Please use the action_present method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B action_past()
Method accepting an integer/long parameter and returning the display
forms of the name properly pluralised (depending on the integer) and
translated in a string or tuple/list.
.UNINDENT
.INDENT 7.0
.TP
.B action_past(PendingDeprecation)
A string set to the past tense of action_present.
Defaults to \(aqDeleted\(aq
.sp
NOTE: action_past attribute is bad for translations and should be
avoided. Please use the action_past method instead.
This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular(PendingDeprecation)
A string used to name the data to be deleted.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_plural(PendingDeprecation)
Optional. Plural of \fBdata_type_singular\fP\&.
Defaults to \fBdata_type_singular\fP appended with an \(aqs\(aq.  Relying on
the default is bad for translations and should not be done, so it\(aqs
absence will raise a DeprecationWarning. It is currently kept as
optional for legacy code.
.sp
NOTE: data_type_singular and data_type_plural attributes are bad for
translations and should be avoided. Please use the action_present and
action_past methods. This form is kept for legacy.
.UNINDENT
.INDENT 7.0
.TP
.B action(request, obj_id)
Action entry point. Overrides base class\(aq action method.
.sp
Accepts a single object id passing it over to the delete method
responsible for the object\(aqs destruction.
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bea06e60>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
Required. Deletes an object referenced by obj_id.
.sp
Override to provide delete functionality specific to your data.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Appends \fBbtn\-danger\fP to the action\(aqs default css classes.
.sp
This method ensures the corresponding button is highlighted
as a trigger for a potentially dangerous action.
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.FilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.BaseAction\fP
.sp
A base class representing a filter action for a table.
.INDENT 7.0
.TP
.B name
The short name or "slug" representing this action. Defaults to
\fB"filter"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A descriptive name used for display purposes. Defaults to the
value of \fBname\fP with the first letter of each word capitalized.
.UNINDENT
.INDENT 7.0
.TP
.B param_name
A string representing the name of the request parameter used for the
search term. Default: \fB"q"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B filter_type
A string representing the type of this filter. If this is set to
\fB"server"\fP then \fBfilter_choices\fP must also be provided.
Default: \fB"query"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices
Required for server type filters. A tuple of tuples representing the
filter options. Tuple composition should evaluate to (string, string,
boolean), representing the filter parameter, display value, and whether
or not it should be applied to the API request as an API query
attribute. API type filters do not need to be accounted for in the
filter method since the API will do the filtering. However, server
type filters in general will need to be performed in the filter method.
By default this attribute is not provided.
.UNINDENT
.INDENT 7.0
.TP
.B needs_preloading
If True, the filter function will be called for the initial
GET request with an empty \fBfilter_string\fP, regardless of the
value of \fBmethod\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B assign_type_string(table, data, type_string)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B data_type_filter(table, data, filter_string)
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, data, filter_string)
Provides the actual filtering logic.
.sp
This method must be overridden by subclasses and return
the filtered data.
.UNINDENT
.INDENT 7.0
.TP
.B get_param_name()
Returns the full query parameter name for this action.
.sp
Defaults to
\fB{{ table.name }}__{{ action.name }}__{{ action.param_name }}\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B is_api_filter(filter_field)
Determine if the given filter field should be used as an
API filter.
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqfilter\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.FixedFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.sp
A filter action with fixed buttons.
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_fixed_buttons\(aq: <function get_fixed_buttons at 0x7ff3bea068c0>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqcategorize\(aq: <function categorize at 0x7ff3bea06938>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea067d0>, \(aqfilter\(aq: <function filter at 0x7ff3bea06848>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA filter action with fixed buttons.\(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B categorize(table, images)
Override to separate images into categories.
.sp
Return a dict with a key for the value of each fixed button,
and a value that is a list of images in that category.
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, images, filter_string)
.UNINDENT
.INDENT 7.0
.TP
.B get_fixed_buttons()
Returns a list of dictionaries describing the fixed buttons
to use for filtering.
.sp
Each list item should be a dict with the following keys:
.INDENT 7.0
.IP \(bu 2
\fBtext\fP: Text to display on the button
.IP \(bu 2
\fBicon\fP: Icon class for icon element (inserted before text).
.IP \(bu 2
\fBvalue\fP: Value returned when the button is clicked. This value is
passed to \fBfilter()\fP as \fBfilter_string\fP\&.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.LinkAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.BaseAction\fP
.sp
A table action which is simply a link rather than a form POST.
.INDENT 7.0
.TP
.B name
Required. The short name or "slug" representing this
action. This name should not be changed at runtime.
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name
A string which will be rendered as the link text. (Required)
.UNINDENT
.INDENT 7.0
.TP
.B url
A string or a callable which resolves to a url to be used as the link
target. You must either define the \fBurl\fP attribute or override
the \fBget_link_url\fP method on the class.
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types
A list that contains the allowed data types of the action.  If the
datum\(aqs type is in this list, the action will be shown on the row
for the datum.
.sp
Defaults to be an empty list (\fB[]\fP). When set to empty, the action
will accept any kind of data.
.UNINDENT
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B associate_with_table(table)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlink\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_ajax_update_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
Returns the final URL based on the value of \fBurl\fP\&.
.sp
If \fBurl\fP is callable it will call the function.
If not, it will then try to call \fBreverse\fP on \fBurl\fP\&.
Failing that, it will simply return the value of \fBurl\fP as\-is.
.sp
When called for a row action, the current row data object will be
passed as the first parameter.
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B render()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.NameFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.sp
A filter action for name property.
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06758>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA filter action for name property.\(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, items, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.actions.UpdateAction
Bases: \fBobject\fP
.sp
A table action for cell updates by inline editing.
.INDENT 7.0
.TP
.B action(request, datum, obj_id, cell_name, new_cell_value)
.UNINDENT
.INDENT 7.0
.TP
.B action_past = <django.utils.functional.__proxy__ object at 0x7ff3be9d6510>
.UNINDENT
.INDENT 7.0
.TP
.B action_present = <django.utils.functional.__proxy__ object at 0x7ff3be9d6410>
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum, cell)
Determine whether updating is allowed for the current request.
.sp
This method is meant to be overridden with more specific checks.
Data of the row and of the cell are passed to the method.
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B update_cell(request, datum, obj_id, cell_name, new_cell_value)
Method for saving data of the cell.
.sp
This method must implements saving logic of the inline edited table
cell.
.UNINDENT
.UNINDENT
.SS The \fBhorizon.tables.formset\fP Module
.INDENT 0.0
.TP
.B class horizon.tables.formset.FormsetCell(*args, **kwargs)
Bases: \fBhorizon.tables.base.Cell\fP
.sp
A DataTable cell that knows about its field from the formset.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.formset.FormsetDataTable(*args, **kwargs)
Bases: \fBhorizon.tables.formset.FormsetDataTableMixin\fP, \fBhorizon.tables.base.DataTable\fP
.sp
A DataTable with support for Django Formsets.
.sp
Note that \fBhorizon.tables.DataTableOptions.row_class\fP and
\fBhorizon.tables.DataTaleOptions.cell_class\fP are overwritten in this
class, so setting them in \fBMeta\fP has no effect.
.INDENT 7.0
.TP
.B formset_class
A class made with \fBdjango.forms.formsets.formset_factory\fP
containing the definition of the formset to use with this data table.
.sp
The columns that are named the same as the formset fields will be
replaced with form widgets in the table. Any hidden fields from the
formset will also be included. The fields that are not hidden and
don\(aqt correspond to any column will not be included in the form.
.UNINDENT
.INDENT 7.0
.TP
.B base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B base_columns = OrderedDict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.formset.FormsetDataTableMixin(*args, **kwargs)
Bases: \fBobject\fP
.sp
A mixin for DataTable to support Django Formsets.
.sp
This works the same as the \fBFormsetDataTable\fP below, but can be used
to add to existing DataTable subclasses.
.INDENT 7.0
.TP
.B formset_class = None
.UNINDENT
.INDENT 7.0
.TP
.B get_empty_row()
Return a row with no data, for adding at the end of the table.
.UNINDENT
.INDENT 7.0
.TP
.B get_formset()
Provide the formset corresponding to this DataTable.
.sp
Use this to validate the formset and to get the submitted data back.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(datum)
.UNINDENT
.INDENT 7.0
.TP
.B get_required_columns()
Lists names of columns that have required fields.
.UNINDENT
.INDENT 7.0
.TP
.B get_rows()
Return the row data for this table broken out by columns.
.sp
The row objects get an additional \fBform\fP parameter, with the
formset form corresponding to that row.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tables.formset.FormsetRow(column, datum, form)
Bases: \fBhorizon.tables.base.Row\fP
.sp
A DataTable row that knows about its form from the formset.
.INDENT 7.0
.TP
.B render()
.UNINDENT
.INDENT 7.0
.TP
.B template_path = \(aqhorizon/common/_formset_table_row.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBhorizon.workflows.base\fP Module
.INDENT 0.0
.TP
.B class horizon.workflows.base.Action(request, context, *args, **kwargs)
Bases: \fBdjango.forms.forms.Form\fP
.sp
An \fBAction\fP represents an atomic logical interaction you can have with
the system. This is easier to understand with a conceptual example: in the
context of a "launch instance" workflow, actions would include "naming
the instance", "selecting an image", and ultimately "launching the
instance".
.sp
Because \fBActions\fP are always interactive, they always provide form
controls, and thus inherit from Django\(aqs \fBForm\fP class. However, they
have some additional intelligence added to them:
.INDENT 7.0
.IP \(bu 2
\fBActions\fP are aware of the permissions required to complete them.
.IP \(bu 2
\fBActions\fP have a meta\-level concept of "help text" which is meant to be
displayed in such a way as to give context to the action regardless of
where the action is presented in a site or workflow.
.IP \(bu 2
\fBActions\fP understand how to handle their inputs and produce outputs,
much like \fBSelfHandlingForm\fP does now.
.UNINDENT
.sp
\fBAction\fP classes may define the following attributes in a \fBMeta\fP
class within them:
.INDENT 7.0
.TP
.B name
The verbose name for this action. Defaults to the name of the class.
.UNINDENT
.INDENT 7.0
.TP
.B slug
A semi\-unique slug for this action. Defaults to the "slugified" name
of the class.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names which this action requires in order to be
completed. Defaults to an empty list (\fB[]\fP).
.UNINDENT
.INDENT 7.0
.TP
.B help_text
A string of simple help text to be displayed alongside the Action\(aqs
fields.
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template
A path to a template which contains more complex help text to be
displayed alongside the Action\(aqs fields. In conjunction with
\fBget_help_text()\fP method you can
customize your help text template to display practically anything.
.UNINDENT
.INDENT 7.0
.TP
.B add_action_error(message)
Adds an error to the Action\(aqs Step based on API issues.
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text(extra_context=None)
Returns the help text for this step.
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
Handles any requisite processing for this action. The method should
return either \fBNone\fP or a dictionary of data to be passed to
\fBcontribute()\fP\&.
.sp
Returns \fBNone\fP by default, effectively making it a no\-op.
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqAction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bf810b90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.ActionMetaclass
Bases: \fBdjango.forms.forms.DeclarativeFieldsMetaclass\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.MembershipAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.sp
An action that allows a user to add/remove members from a group.
.sp
Extend the Action class with additional helper method for membership
management.
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B get_default_role_field_name()
.UNINDENT
.INDENT 7.0
.TP
.B get_member_field_name(role_id)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqMembershipAction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bf810e10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqmembershipaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.Step(workflow)
Bases: \fBobject\fP
.sp
A step is a wrapper around an action which defines its context in a
workflow. It knows about details such as:
.INDENT 7.0
.IP \(bu 2
The workflow\(aqs context data (data passed from step to step).
.IP \(bu 2
The data which must be present in the context to begin this step (the
step\(aqs dependencies).
.IP \(bu 2
The keys which will be added to the context data upon completion of the
step.
.IP \(bu 2
The connections between this step\(aqs fields and changes in the context
data (e.g. if that piece of data changes, what needs to be updated in
this step).
.UNINDENT
.sp
A \fBStep\fP class has the following attributes:
.INDENT 7.0
.TP
.B action_class
The \fBAction\fP class which this step wraps.
.UNINDENT
.INDENT 7.0
.TP
.B depends_on
A list of context data keys which this step requires in order to
begin interaction.
.UNINDENT
.INDENT 7.0
.TP
.B contributes
A list of keys which this step will contribute to the workflow\(aqs
context data. Optional keys should still be listed, even if their
values may be set to \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B connections
A dictionary which maps context data key names to lists of callbacks.
The callbacks may be functions, dotted python paths to functions
which may be imported, or dotted strings beginning with \fB"self"\fP
to indicate methods on the current \fBStep\fP instance.
.UNINDENT
.INDENT 7.0
.TP
.B before
Another \fBStep\fP class. This optional attribute is used to provide
control over workflow ordering when steps are dynamically added to
workflows. The workflow mechanism will attempt to place the current
step before the step specified in the attribute.
.UNINDENT
.INDENT 7.0
.TP
.B after
Another \fBStep\fP class. This attribute has the same purpose as
\fBbefore()\fP except that it will instead
attempt to place the current step after the given step.
.UNINDENT
.INDENT 7.0
.TP
.B help_text
A string of simple help text which will be prepended to the \fBAction\fP
class\(aq help text if desired.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
A path to a template which will be used to render this step. In
general the default common template should be used. Default:
\fB"horizon/common/_workflow_step.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B has_errors
A boolean value which indicates whether or not this step has any
errors on the action within it or in the scope of the workflow. This
attribute will only accurately reflect this status after validation
has occurred.
.UNINDENT
.INDENT 7.0
.TP
.B slug
Inherited from the \fBAction\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B name
Inherited from the \fBAction\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
Inherited from the \fBAction\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B action
.UNINDENT
.INDENT 7.0
.TP
.B action_class = None
.UNINDENT
.INDENT 7.0
.TP
.B add_step_error(message)
Adds an error to the Step based on API issues.
.UNINDENT
.INDENT 7.0
.TP
.B after = None
.UNINDENT
.INDENT 7.0
.TP
.B before = None
.UNINDENT
.INDENT 7.0
.TP
.B connections = None
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
Adds the data listed in \fBcontributes\fP to the workflow\(aqs shared
context. By default, the context is simply updated with all the data
returned by the action.
.sp
Note that even if the value of one of the \fBcontributes\fP keys is
not present (e.g. optional) the key should still be added to the
context with a value of \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B contributes = ()
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = ()
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text()
Returns the help text for this step.
.UNINDENT
.INDENT 7.0
.TP
.B get_id()
Returns the ID for this step. Suitable for use in HTML markup.
.UNINDENT
.INDENT 7.0
.TP
.B has_required_fields()
Returns True if action contains any required fields.
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B prepare_action_context(request, context)
Allows for customization of how the workflow context is passed to
the action; this is the reverse of what "contribute" does to make the
action outputs sane for the workflow. Changes to the context are not
saved globally here. They are localized to the action.
.sp
Simply returns the unaltered context by default.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the step.
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_workflow_step.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.UpdateMembersStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.sp
A step that allows a user to add/remove members from a group.
.INDENT 7.0
.TP
.B show_roles
Set to False to disable the display of the roles dropdown.
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title
The title used for the available list column.
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title
The title used for the members list column.
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text
The placeholder text used when the available list is empty.
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text
The placeholder text used when the members list is empty.
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3bf8106d0>
.UNINDENT
.INDENT 7.0
.TP
.B get_member_field_name(role_id)
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3bf810c10>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3bf810cd0>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3bf810bd0>
.UNINDENT
.INDENT 7.0
.TP
.B show_roles = True
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_workflow_step_update_members.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.Workflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
A Workflow is a collection of Steps. Its interface is very
straightforward, but it is responsible for handling some very
important tasks such as:
.INDENT 7.0
.IP \(bu 2
Handling the injection, removal, and ordering of arbitrary steps.
.IP \(bu 2
Determining if the workflow can be completed by a given user at runtime
based on all available information.
.IP \(bu 2
Dispatching connections between steps to ensure that when context data
changes all the applicable callback functions are executed.
.IP \(bu 2
Verifying/validating the overall data integrity and subsequently
triggering the final method to complete the workflow.
.UNINDENT
.sp
The \fBWorkflow\fP class has the following attributes:
.INDENT 7.0
.TP
.B name
The verbose name for this workflow which will be displayed to the user.
Defaults to the class name.
.UNINDENT
.INDENT 7.0
.TP
.B slug
The unique slug for this workflow. Required.
.UNINDENT
.INDENT 7.0
.TP
.B steps
Read\-only access to the final ordered set of step instances for
this workflow.
.UNINDENT
.INDENT 7.0
.TP
.B default_steps
A list of \fBStep\fP classes which serve as the
starting point for this workflow\(aqs ordered steps. Defaults to an empty
list (\fB[]\fP).
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name
The name which will appear on the submit button for the workflow\(aqs
form. Defaults to \fB"Save"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B success_message
A string which will be displayed to the user upon successful completion
of the workflow. Defaults to
\fB"{{ workflow.name }} completed successfully."\fP
.UNINDENT
.INDENT 7.0
.TP
.B failure_message
A string which will be displayed to the user upon failure to complete
the workflow. Defaults to \fB"{{ workflow.name }} did not complete."\fP
.UNINDENT
.INDENT 7.0
.TP
.B depends_on
A roll\-up list of all the \fBdepends_on\fP values compiled from the
workflow\(aqs steps.
.UNINDENT
.INDENT 7.0
.TP
.B contributions
A roll\-up list of all the \fBcontributes\fP values compiled from the
workflow\(aqs steps.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
Path to the template which should be used to render this workflow.
In general the default common template should be used. Default:
\fB"horizon/common/_workflow.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B entry_point
The slug of the step which should initially be active when the
workflow is rendered. This can be passed in upon initialization of
the workflow, or set anytime after initialization but before calling
either \fBget_entry_point\fP or \fBrender\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B redirect_param_name
The name of a parameter used for tracking the URL to redirect to upon
completion of the workflow. Defaults to \fB"next"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B object
The object (if any) which this workflow relates to. In the case of
a workflow which creates a new resource the object would be the created
resource after the relevant creation steps have been undertaken. In
the case of a workflow which updates a resource it would be the
resource being updated after it has been retrieved.
.UNINDENT
.INDENT 7.0
.TP
.B wizard
Whether to present the workflow as a wizard, with "prev" and "next"
buttons and validation after every step.
.UNINDENT
.INDENT 7.0
.TP
.B fullscreen
If the workflow is presented in a modal, and this attribute is
set to True, then the \fBfullscreen\fP css class will be added so
the modal can take advantage of the available screen estate.
Defaults to \fBFalse\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B add_error_to_step(message, slug)
Adds an error to the workflow\(aqs Step with the
specified slug based on API issues. This is useful
when you wish for API errors to appear as errors on
the form rather than using the messages framework.
.UNINDENT
.INDENT 7.0
.TP
.B default_steps = ()
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bf810690>
.UNINDENT
.INDENT 7.0
.TP
.B finalize()
Finalizes a workflow by running through all the actions in order
and calling their \fBhandle\fP methods. Returns \fBTrue\fP on full success,
or \fBFalse\fP for a partial success, e.g. there were non\-critical
errors. (If it failed completely the function wouldn\(aqt return.)
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bf810490>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
Hook to allow customization of the message returned to the user
upon successful or unsuccessful completion of the workflow.
.sp
By default it simply inserts the workflow\(aqs name into the message
string.
.UNINDENT
.INDENT 7.0
.TP
.B fullscreen = False
.UNINDENT
.INDENT 7.0
.TP
.B get_absolute_url()
Returns the canonical URL for this workflow.
.sp
This is used for the POST action attribute on the form element
wrapping the workflow.
.sp
For convenience it defaults to the value of
\fBrequest.get_full_path()\fP with any query string stripped off,
e.g. the path at which the workflow was requested.
.UNINDENT
.INDENT 7.0
.TP
.B get_entry_point()
Returns the slug of the step which the workflow should begin on.
.sp
This method takes into account both already\-available data and errors
within the steps.
.UNINDENT
.INDENT 7.0
.TP
.B get_step(slug)
Returns the instantiated step matching the given slug.
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
Returns a URL to redirect the user to upon completion. By default it
will attempt to parse a \fBsuccess_url\fP attribute on the workflow,
which can take the form of a reversible URL pattern name, or a
standard HTTP URL.
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
Handles any final processing for this workflow. Should return a
boolean value indicating success.
.UNINDENT
.INDENT 7.0
.TP
.B is_valid()
Verified that all required data is present in the context and
calls the \fBvalidate\fP method to allow for finer\-grained checks
on the context data.
.UNINDENT
.INDENT 7.0
.TP
.B multipart = False
.UNINDENT
.INDENT 7.0
.TP
.B redirect_param_name = \(aqnext\(aq
.UNINDENT
.INDENT 7.0
.TP
.B classmethod register(step_class)
Registers a \fBStep\fP with the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B slug = None
.UNINDENT
.INDENT 7.0
.TP
.B steps
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bf810790>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_workflow.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B classmethod unregister(step_class)
Unregisters a \fBStep\fP from the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B validate(context)
Hook for custom context data validation. Should return a boolean
value or raise \fBWorkflowValidationError\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B wizard = False
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.WorkflowContext(workflow, *args, **kwargs)
Bases: \fBdict\fP
.INDENT 7.0
.TP
.B set(key, val)
.UNINDENT
.INDENT 7.0
.TP
.B unset(key)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.workflows.base.WorkflowMetaclass
Bases: \fBtype\fP
.UNINDENT
.SS The \fBhorizon.workflows.views\fP Module
.INDENT 0.0
.TP
.B class horizon.workflows.views.WorkflowView
Bases: \fBhorizon.forms.views.ModalBackdropMixin\fP, \fBdjango.views.generic.base.TemplateView\fP
.sp
A generic class\-based view which handles the intricacies of workflow
processing with minimal user configuration.
.INDENT 7.0
.TP
.B workflow_class
The \fBWorkflow\fP class which this view handles.
Required.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
The template to use when rendering this view via standard HTTP
requests. Required.
.UNINDENT
.INDENT 7.0
.TP
.B ajax_template_name
The template to use when rendering the workflow for AJAX requests.
In general the default common template should be used. Defaults to
\fB"horizon/common/_workflow.html"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B context_object_name
The key which should be used for the workflow object in the template
context. Defaults to \fB"workflow"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B add_error_to_step(error_msg, step)
.UNINDENT
.INDENT 7.0
.TP
.B ajax_template_name = \(aqhorizon/common/_workflow.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B context_object_name = \(aqworkflow\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
Handler for HTTP GET requests.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
Returns the template context, including the workflow class.
.sp
This method should be overridden in subclasses to provide additional
context data to the template.
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
Returns initial data for the workflow. Defaults to using the GET
parameters to allow pre\-seeding of the workflow context values.
.UNINDENT
.INDENT 7.0
.TP
.B get_layout()
returns classes for the workflow element in template based on
the workflow characteristics
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(obj)
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(obj)
.UNINDENT
.INDENT 7.0
.TP
.B get_template_names()
Returns the template name to use for this request.
.UNINDENT
.INDENT 7.0
.TP
.B get_workflow()
Returns the instantiated workflow class.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
Handler for HTTP POST requests.
.UNINDENT
.INDENT 7.0
.TP
.B set_workflow_step_errors(context)
.UNINDENT
.INDENT 7.0
.TP
.B step_errors = {}
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_workflow_base.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B validate_steps(request, workflow, start, end)
Validates the workflow steps from \fBstart\fP to \fBend\fP, inclusive.
.sp
Returns a dict describing the validation state of the workflow.
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class = None
.UNINDENT
.UNINDENT
.SS The \fBhorizon.workflows\fP Module
.SS The \fBhorizon.forms.base\fP Module
.INDENT 0.0
.TP
.B class horizon.forms.base.DateForm(*args, **kwargs)
Bases: \fBdjango.forms.forms.Form\fP
.sp
A simple form for selecting a range of time.
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqstart\(aq, <django.forms.fields.DateField object at 0x7ff3bf1ab210>), (\(aqend\(aq, <django.forms.fields.DateField object at 0x7ff3bf178a10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqstart\(aq, <django.forms.fields.DateField object at 0x7ff3bf1ab210>), (\(aqend\(aq, <django.forms.fields.DateField object at 0x7ff3bf178a10>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.base.SelfHandlingForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingMixin\fP, \fBdjango.forms.forms.Form\fP
.sp
A base \fBForm\fP class which includes
processing logic in its subclasses.
.INDENT 7.0
.TP
.B api_error(message)
Adds an error to the form\(aqs error dictionary after validation
based on problems reported via the API. This is useful when you
wish for API errors to appear as errors on the form rather than
using the messages framework.
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B required_css_class = \(aqrequired\(aq
.UNINDENT
.INDENT 7.0
.TP
.B set_warning(message)
Sets a warning on the form.
.sp
Unlike NON_FIELD_ERRORS, this doesn\(aqt fail form validation.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.base.SelfHandlingMixin(request, *args, **kwargs)
Bases: \fBobject\fP
.UNINDENT
.SS The \fBhorizon.forms.views\fP Module
.INDENT 0.0
.TP
.B class horizon.forms.views.ModalBackdropMixin
Bases: \fBobject\fP
.sp
This mixin class is to be used for together with ModalFormView and
WorkflowView classes to augment them with modal_backdrop context data.
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_backdrop = \(aqstatic\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.views.ModalFormMixin
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_template_names()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.views.ModalFormView
Bases: \fBhorizon.forms.views.ModalBackdropMixin\fP, \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.views.HorizonFormView\fP
.sp
The main view class from which all views which handle forms in Horizon
should inherit. It takes care of all details with processing
\fBSelfHandlingForm\fP classes, and modal concerns
when the associated template inherits from
\fIhorizon/common/_modal_form.html\fP\&.
.sp
Subclasses must define a \fBform_class\fP and \fBtemplate_name\fP attribute
at minimum.
.sp
See Django\(aqs documentation on the \fI\%FormView\fP class for
more details.
.INDENT 7.0
.TP
.B cancel_label = <django.utils.functional.__proxy__ object at 0x7ff3bf19ef50>
.UNINDENT
.INDENT 7.0
.TP
.B cancel_url = None
.UNINDENT
.INDENT 7.0
.TP
.B form_id = None
.UNINDENT
.INDENT 7.0
.TP
.B form_valid(form)
.UNINDENT
.INDENT 7.0
.TP
.B get_cancel_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_form(form_class=None)
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(obj)
For dynamic insertion of resources created in modals, this method
returns the display name of the created object. Defaults to returning
the \fBname\fP attribute.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(obj)
For dynamic insertion of resources created in modals, this method
returns the id of the created object. Defaults to returning the \fBid\fP
attribute.
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = None
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bf30ac50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = None
.UNINDENT
.UNINDENT
.SS The \fBhorizon.forms\fP Module
.INDENT 0.0
.TP
.B class horizon.forms.SelfHandlingMixin(request, *args, **kwargs)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.SelfHandlingForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingMixin\fP, \fBdjango.forms.forms.Form\fP
.sp
A base \fBForm\fP class which includes
processing logic in its subclasses.
.INDENT 7.0
.TP
.B api_error(message)
Adds an error to the form\(aqs error dictionary after validation
based on problems reported via the API. This is useful when you
wish for API errors to appear as errors on the form rather than
using the messages framework.
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B required_css_class = \(aqrequired\(aq
.UNINDENT
.INDENT 7.0
.TP
.B set_warning(message)
Sets a warning on the form.
.sp
Unlike NON_FIELD_ERRORS, this doesn\(aqt fail form validation.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DateForm(*args, **kwargs)
Bases: \fBdjango.forms.forms.Form\fP
.sp
A simple form for selecting a range of time.
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqstart\(aq, <django.forms.fields.DateField object at 0x7ff3bf1ab210>), (\(aqend\(aq, <django.forms.fields.DateField object at 0x7ff3bf178a10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqstart\(aq, <django.forms.fields.DateField object at 0x7ff3bf1ab210>), (\(aqend\(aq, <django.forms.fields.DateField object at 0x7ff3bf178a10>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.ModalFormView
Bases: \fBhorizon.forms.views.ModalBackdropMixin\fP, \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.views.HorizonFormView\fP
.sp
The main view class from which all views which handle forms in Horizon
should inherit. It takes care of all details with processing
\fBSelfHandlingForm\fP classes, and modal concerns
when the associated template inherits from
\fIhorizon/common/_modal_form.html\fP\&.
.sp
Subclasses must define a \fBform_class\fP and \fBtemplate_name\fP attribute
at minimum.
.sp
See Django\(aqs documentation on the \fI\%FormView\fP class for
more details.
.INDENT 7.0
.TP
.B cancel_label = <django.utils.functional.__proxy__ object at 0x7ff3bf19ef50>
.UNINDENT
.INDENT 7.0
.TP
.B cancel_url = None
.UNINDENT
.INDENT 7.0
.TP
.B form_id = None
.UNINDENT
.INDENT 7.0
.TP
.B form_valid(form)
.UNINDENT
.INDENT 7.0
.TP
.B get_cancel_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_form(form_class=None)
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(obj)
For dynamic insertion of resources created in modals, this method
returns the display name of the created object. Defaults to returning
the \fBname\fP attribute.
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(obj)
For dynamic insertion of resources created in modals, this method
returns the id of the created object. Defaults to returning the \fBid\fP
attribute.
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = None
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bf30ac50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.ModalFormMixin
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_template_names()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DynamicTypedChoiceField(add_item_link=None, add_item_link_args=None, *args, **kwargs)
Bases: \fBhorizon.forms.fields.DynamicChoiceField\fP, \fBdjango.forms.fields.TypedChoiceField\fP
.sp
Simple mix of \fBDynamicChoiceField\fP and \fBTypedChoiceField\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DynamicChoiceField(add_item_link=None, add_item_link_args=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.ChoiceField\fP
.sp
A subclass of \fBChoiceField\fP with additional properties that make
dynamically updating its elements easier.
.sp
Notably, the field declaration takes an extra argument, \fBadd_item_link\fP
which may be a string or callable defining the URL that should be used
for the "add" link associated with the field.
.INDENT 7.0
.TP
.B widget
alias of \fBDynamicSelectWidget\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.IPField(*args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.sp
Form field for entering IP/range values, with validation.
Supports IPv4/IPv6 in the format:
.. xxx.xxx.xxx.xxx
.. xxx.xxx.xxx.xxx/zz
.. ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
.. ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/zz
and all compressed forms. Also the short forms
are supported:
xxx/yy
xxx.xxx/yy
.INDENT 7.0
.TP
.B version
Specifies which IP version to validate,
valid values are 1 (fields.IPv4), 2 (fields.IPv6) or
both \- 3 (fields.IPv4 | fields.IPv6).
Defaults to IPv4 (1)
.UNINDENT
.INDENT 7.0
.TP
.B mask
Boolean flag to validate subnet masks along with IP address.
E.g: 10.0.0.1/32
.UNINDENT
.INDENT 7.0
.TP
.B mask_range_from
.TP
.B Subnet range limitation, e.g. 16
.TP
.B That means the input mask will be checked to be in the range
.TP
.B 16:max_value. Useful to limit the subnet ranges
.TP
.B to A/B/C\-class networks.
.UNINDENT
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B invalid_format_message = <django.utils.functional.__proxy__ object at 0x7ff3bf236310>
.UNINDENT
.INDENT 7.0
.TP
.B invalid_mask_message = <django.utils.functional.__proxy__ object at 0x7ff3bf236390>
.UNINDENT
.INDENT 7.0
.TP
.B invalid_version_message = <django.utils.functional.__proxy__ object at 0x7ff3bf236350>
.UNINDENT
.INDENT 7.0
.TP
.B max_v4_mask = 32
.UNINDENT
.INDENT 7.0
.TP
.B max_v6_mask = 128
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.MultiIPField(*args, **kwargs)
Bases: \fBhorizon.forms.fields.IPField\fP
.sp
Extends IPField to allow comma\-separated lists of addresses.
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.SelectWidget(attrs=None, choices=(), data_attrs=(), transform=None, transform_html_attrs=None)
Bases: \fBdjango.forms.widgets.Select\fP
.sp
Customizable select widget, that allows to render
data\-xxx attributes from choices. This widget also
allows user to specify additional html attributes
for choices.
.INDENT 7.0
.TP
.B data_attrs
Specifies object properties to serialize as
data\-xxx attribute. If passed (\(aqid\(aq, ),
this will be rendered as:
<option data\-id="123">option_value</option>
where 123 is the value of choice_value.id
.UNINDENT
.INDENT 7.0
.TP
.B transform
A callable used to render the display value
from the option object.
.UNINDENT
.INDENT 7.0
.TP
.B transform_html_attrs
A callable used to render additional HTML attributes
for the option object. It returns a dictionary
containing the html attributes and their values.
For example, to define a title attribute for the
choices:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
helpText = { \(aqApple\(aq: \(aqThis is a fruit\(aq,
          \(aqCarrot\(aq: \(aqThis is a vegetable\(aq }

def get_title(data):
    text = helpText.get(data, None)
    if text:
        return {\(aqtitle\(aq: text}
    else:
        return {}

\&....
\&....

widget=forms.SelectWidget( attrs={\(aqclass\(aq: \(aqswitchable\(aq,
                                 \(aqdata\-slug\(aq: \(aqsource\(aq},
                        transform_html_attrs=get_title )

self.fields[<field name>].choices =
    ([
        (\(aqapple\(aq,\(aqApple\(aq),
        (\(aqcarrot\(aq,\(aqCarrot\(aq)
    ])
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render_option(selected_choices, option_value, option_label)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B exception horizon.forms.ValidationError(message, code=None, params=None)
Bases: \fBexceptions.Exception\fP
.sp
An error while validating data.
.INDENT 7.0
.TP
.B message_dict
.UNINDENT
.INDENT 7.0
.TP
.B messages
.UNINDENT
.INDENT 7.0
.TP
.B update_error_dict(error_dict)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.Field(required=True, widget=None, label=None, initial=None, help_text=u\(aq\(aq, error_messages=None, show_hidden_initial=False, validators=[], localize=False, label_suffix=None)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B bound_data(data, initial)
Return the value that should be shown for this field on render of a
bound form, given the submitted POST data for the field and the initial
data, if any.
.sp
For most fields, this will simply be data; FileFields need to handle it
a bit differently.
.UNINDENT
.INDENT 7.0
.TP
.B clean(value)
Validates the given value and returns its "cleaned" value as an
appropriate Python object.
.sp
Raises ValidationError for any errors.
.UNINDENT
.INDENT 7.0
.TP
.B creation_counter = 29
.UNINDENT
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqrequired\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1903410>}
.UNINDENT
.INDENT 7.0
.TP
.B default_validators = []
.UNINDENT
.INDENT 7.0
.TP
.B empty_values = [None, u\(aq\(aq, [], (), {}]
.UNINDENT
.INDENT 7.0
.TP
.B has_changed(initial, data)
Return True if data differs from initial.
.UNINDENT
.INDENT 7.0
.TP
.B hidden_widget
alias of \fBHiddenInput\fP
.UNINDENT
.INDENT 7.0
.TP
.B prepare_value(value)
.UNINDENT
.INDENT 7.0
.TP
.B run_validators(value)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBTextInput\fP
.UNINDENT
.INDENT 7.0
.TP
.B widget_attrs(widget)
Given a Widget instance (\fInot\fP a Widget class), returns a dictionary of
any HTML attributes that should be added to the Widget, based on this
Field.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.CharField(max_length=None, min_length=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.INDENT 7.0
.TP
.B to_python(value)
Returns a Unicode object.
.UNINDENT
.INDENT 7.0
.TP
.B widget_attrs(widget)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.IntegerField(max_value=None, min_value=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772210>}
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that int() can be called on the input. Returns the result
of int(). Returns None for empty values.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBNumberInput\fP
.UNINDENT
.INDENT 7.0
.TP
.B widget_attrs(widget)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DateField(input_formats=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.BaseTemporalField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772f50>}
.UNINDENT
.INDENT 7.0
.TP
.B input_formats = <django.utils.functional.__proxy__ object at 0x7ff3c1772ed0>
.UNINDENT
.INDENT 7.0
.TP
.B strptime(value, format)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that the input can be converted to a date. Returns a Python
datetime.date object.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBDateInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.TimeField(input_formats=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.BaseTemporalField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772f90>}
.UNINDENT
.INDENT 7.0
.TP
.B input_formats = <django.utils.functional.__proxy__ object at 0x7ff3c1772f10>
.UNINDENT
.INDENT 7.0
.TP
.B strptime(value, format)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that the input can be converted to a time. Returns a Python
datetime.time object.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBTimeInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DateTimeField(input_formats=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.BaseTemporalField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793090>}
.UNINDENT
.INDENT 7.0
.TP
.B input_formats = <django.utils.functional.__proxy__ object at 0x7ff3c1793050>
.UNINDENT
.INDENT 7.0
.TP
.B prepare_value(value)
.UNINDENT
.INDENT 7.0
.TP
.B strptime(value, format)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that the input can be converted to a datetime. Returns a
Python datetime.datetime object.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBDateTimeInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.TimeField(input_formats=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.BaseTemporalField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772f90>}
.UNINDENT
.INDENT 7.0
.TP
.B input_formats = <django.utils.functional.__proxy__ object at 0x7ff3c1772f10>
.UNINDENT
.INDENT 7.0
.TP
.B strptime(value, format)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that the input can be converted to a time. Returns a Python
datetime.time object.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBTimeInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.RegexField(regex, max_length=None, min_length=None, error_message=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.CharField\fP
.INDENT 7.0
.TP
.B regex
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.EmailField(max_length=None, min_length=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.CharField\fP
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B default_validators = [<django.core.validators.EmailValidator object at 0x7ff3c17bfd50>]
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBEmailInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.FileField(*args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.INDENT 7.0
.TP
.B bound_data(data, initial)
.UNINDENT
.INDENT 7.0
.TP
.B clean(data, initial=None)
.UNINDENT
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqcontradiction\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793910>, u\(aqmax_length\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c17937d0>, u\(aqempty\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793390>, u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c17933d0>, u\(aqmissing\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793310>}
.UNINDENT
.INDENT 7.0
.TP
.B has_changed(initial, data)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(data)
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBClearableFileInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.ImageField(*args, **kwargs)
Bases: \fBdjango.forms.fields.FileField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid_image\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793950>}
.UNINDENT
.INDENT 7.0
.TP
.B to_python(data)
Checks that the file\-upload field data contains a valid image (GIF, JPG,
PNG, possibly others \-\- whatever the Python Imaging Library supports).
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.URLField(max_length=None, min_length=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.CharField\fP
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793990>}
.UNINDENT
.INDENT 7.0
.TP
.B default_validators = [<django.core.validators.URLValidator object at 0x7ff3c1793a90>]
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBURLInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.BooleanField(required=True, widget=None, label=None, initial=None, help_text=u\(aq\(aq, error_messages=None, show_hidden_initial=False, validators=[], localize=False, label_suffix=None)
Bases: \fBdjango.forms.fields.Field\fP
.INDENT 7.0
.TP
.B has_changed(initial, data)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Returns a Python boolean object.
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBCheckboxInput\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.NullBooleanField(required=True, widget=None, label=None, initial=None, help_text=u\(aq\(aq, error_messages=None, show_hidden_initial=False, validators=[], localize=False, label_suffix=None)
Bases: \fBdjango.forms.fields.BooleanField\fP
.sp
A field whose valid values are None, True and False. Invalid values are
cleaned to None.
.INDENT 7.0
.TP
.B has_changed(initial, data)
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Explicitly checks for the string \(aqTrue\(aq and \(aqFalse\(aq, which is what a
hidden field will submit for True and False, for \(aqtrue\(aq and \(aqfalse\(aq,
which are likely to be returned by JavaScript serializations of forms,
and for \(aq1\(aq and \(aq0\(aq, which is what a RadioField will submit. Unlike
the Booleanfield we need to explicitly check for True, because we are
not using the bool() function
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBNullBooleanSelect\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.ChoiceField(choices=(), required=True, widget=None, label=None, initial=None, help_text=u\(aq\(aq, *args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.INDENT 7.0
.TP
.B choices
.UNINDENT
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid_choice\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793c90>}
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Returns a Unicode object.
.UNINDENT
.INDENT 7.0
.TP
.B valid_value(value)
Check to see if the provided value is a valid choice
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
Validates that the input is in self.choices.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBSelect\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.MultipleChoiceField(choices=(), required=True, widget=None, label=None, initial=None, help_text=u\(aq\(aq, *args, **kwargs)
Bases: \fBdjango.forms.fields.ChoiceField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid_list\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793d10>, u\(aqinvalid_choice\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793d90>}
.UNINDENT
.INDENT 7.0
.TP
.B has_changed(initial, data)
.UNINDENT
.INDENT 7.0
.TP
.B hidden_widget
alias of \fBMultipleHiddenInput\fP
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
Validates that the input is a list or tuple.
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBSelectMultiple\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.ComboField(fields=(), *args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.sp
A Field whose clean() method calls multiple Field clean() methods.
.INDENT 7.0
.TP
.B clean(value)
Validates the given value against all of self.fields, which is a
list of Field instances.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.MultiValueField(fields=(), *args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.sp
A Field that aggregates the logic of multiple Fields.
.sp
Its clean() method takes a "decompressed" list of values, which are then
cleaned into a single value according to self.fields. Each value in
this list is cleaned by the corresponding field \-\- the first value is
cleaned by the first field, the second value is cleaned by the second
field, etc. Once all fields are cleaned, the list of clean values is
"compressed" into a single value.
.sp
Subclasses should not have to implement clean(). Instead, they must
implement compress(), which takes a list of valid values and returns a
"compressed" version of those values \-\- a single value.
.sp
You\(aqll probably want to use this with MultiWidget.
.INDENT 7.0
.TP
.B clean(value)
Validates every value in the given list. A value is validated against
the corresponding Field in self.fields.
.sp
For example, if this MultiValueField was instantiated with
fields=(DateField(), TimeField()), clean() would call
DateField.clean(value[0]) and TimeField.clean(value[1]).
.UNINDENT
.INDENT 7.0
.TP
.B compress(data_list)
Returns a single value for the given list of values. The values can be
assumed to be valid.
.sp
For example, if this MultiValueField was instantiated with
fields=(DateField(), TimeField()), this might return a datetime
object created by combining the date and time in data_list.
.UNINDENT
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqincomplete\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c22dd090>, u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1793e10>}
.UNINDENT
.INDENT 7.0
.TP
.B has_changed(initial, data)
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.FloatField(max_value=None, min_value=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.IntegerField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c17722d0>}
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that float() can be called on the input. Returns the result
of float(). Returns None for empty values.
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.INDENT 7.0
.TP
.B widget_attrs(widget)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DecimalField(max_value=None, min_value=None, max_digits=None, decimal_places=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.IntegerField\fP
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqmax_whole_digits\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772d50>, u\(aqmax_digits\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772650>, u\(aqinvalid\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c1772290>, u\(aqmax_decimal_places\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c17729d0>}
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
Validates that the input is a decimal number. Returns a Decimal
instance. Returns None for empty values. Ensures that there are no more
than max_digits in the number, and no more than decimal_places digits
after the decimal point.
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.INDENT 7.0
.TP
.B widget_attrs(widget)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.SplitDateTimeField(input_date_formats=None, input_time_formats=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.MultiValueField\fP
.INDENT 7.0
.TP
.B compress(data_list)
.UNINDENT
.INDENT 7.0
.TP
.B default_error_messages = {u\(aqinvalid_time\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c22dd0d0>, u\(aqinvalid_date\(aq: <django.utils.functional.__proxy__ object at 0x7ff3c22dd290>}
.UNINDENT
.INDENT 7.0
.TP
.B hidden_widget
alias of \fBSplitHiddenDateTimeWidget\fP
.UNINDENT
.INDENT 7.0
.TP
.B widget
alias of \fBSplitDateTimeWidget\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.IPAddressField(*args, **kwargs)
Bases: \fBdjango.forms.fields.CharField\fP
.INDENT 7.0
.TP
.B default_validators = [<django.core.validators.RegexValidator object at 0x7ff3c17bfed0>]
.UNINDENT
.INDENT 7.0
.TP
.B to_python(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.GenericIPAddressField(protocol=u\(aqboth\(aq, unpack_ipv4=False, *args, **kwargs)
Bases: \fBdjango.forms.fields.CharField\fP
.INDENT 7.0
.TP
.B to_python(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.FilePathField(path, match=None, recursive=False, allow_files=True, allow_folders=False, required=True, widget=None, label=None, initial=None, help_text=u\(aq\(aq, *args, **kwargs)
Bases: \fBdjango.forms.fields.ChoiceField\fP
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.SlugField(max_length=None, min_length=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.CharField\fP
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B default_validators = [<django.core.validators.RegexValidator object at 0x7ff3c17bfdd0>]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.TypedChoiceField(*args, **kwargs)
Bases: \fBdjango.forms.fields.ChoiceField\fP
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.TypedMultipleChoiceField(*args, **kwargs)
Bases: \fBdjango.forms.fields.MultipleChoiceField\fP
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.Media(media=None, **kwargs)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B absolute_path(path, prefix=None)
.UNINDENT
.INDENT 7.0
.TP
.B add_css(data)
.UNINDENT
.INDENT 7.0
.TP
.B add_js(data)
.UNINDENT
.INDENT 7.0
.TP
.B render()
.UNINDENT
.INDENT 7.0
.TP
.B render_css()
.UNINDENT
.INDENT 7.0
.TP
.B render_js()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.MediaDefiningClass
Bases: \fBtype\fP
.sp
Metaclass for classes that can have media definitions.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.Widget(attrs=None)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B build_attrs(extra_attrs=None, **kwargs)
Helper function for building an attribute dictionary.
.UNINDENT
.INDENT 7.0
.TP
.B id_for_label(id_)
Returns the HTML ID attribute of this Widget for use by a <label>,
given the ID of the field. Returns None if no ID is available.
.sp
This hook is necessary because some widgets have multiple HTML
elements and, thus, multiple IDs. In that case, this method should
return an ID value that corresponds to the first ID in the widget\(aqs
tags.
.UNINDENT
.INDENT 7.0
.TP
.B is_hidden
.UNINDENT
.INDENT 7.0
.TP
.B is_localized = False
.UNINDENT
.INDENT 7.0
.TP
.B is_required = False
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B needs_multipart_form = False
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
Returns this Widget rendered as HTML, as a Unicode string.
.sp
The \(aqvalue\(aq given is not guaranteed to be valid input, so subclass
implementations should program defensively.
.UNINDENT
.INDENT 7.0
.TP
.B subwidgets(name, value, attrs=None, choices=())
Yields all "subwidgets" of this widget. Used only by RadioSelect to
allow template access to individual <input type="radio"> buttons.
.sp
Arguments are the same as for render().
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
Given a dictionary of data and this widget\(aqs name, returns the value
of this widget. Returns None if it\(aqs not provided.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.TextInput(attrs=None)
Bases: \fBdjango.forms.widgets.Input\fP
.INDENT 7.0
.TP
.B input_type = u\(aqtext\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.PasswordInput(attrs=None, render_value=False)
Bases: \fBdjango.forms.widgets.TextInput\fP
.INDENT 7.0
.TP
.B input_type = u\(aqpassword\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.HiddenInput(attrs=None)
Bases: \fBdjango.forms.widgets.Input\fP
.INDENT 7.0
.TP
.B input_type = u\(aqhidden\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.MultipleHiddenInput(attrs=None, choices=())
Bases: \fBdjango.forms.widgets.HiddenInput\fP
.sp
A widget that handles <input type="hidden"> for fields that have a list
of values.
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None, choices=())
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.ClearableFileInput(attrs=None)
Bases: \fBdjango.forms.widgets.FileInput\fP
.INDENT 7.0
.TP
.B clear_checkbox_id(name)
Given the name of the clear checkbox input, return the HTML id for it.
.UNINDENT
.INDENT 7.0
.TP
.B clear_checkbox_label = <django.utils.functional.__proxy__ object at 0x7ff3c1768650>
.UNINDENT
.INDENT 7.0
.TP
.B clear_checkbox_name(name)
Given the name of the file input, return the name of the clear checkbox
input.
.UNINDENT
.INDENT 7.0
.TP
.B get_template_substitution_values(value)
Return value\-related substitutions.
.UNINDENT
.INDENT 7.0
.TP
.B initial_text = <django.utils.functional.__proxy__ object at 0x7ff3c17685d0>
.UNINDENT
.INDENT 7.0
.TP
.B input_text = <django.utils.functional.__proxy__ object at 0x7ff3c1768610>
.UNINDENT
.INDENT 7.0
.TP
.B is_initial(value)
Return whether value is considered to be initial value.
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
.UNINDENT
.INDENT 7.0
.TP
.B template_with_clear = u\(aq%(clear)s <label for="%(clear_checkbox_id)s">%(clear_checkbox_label)s</label>\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_with_initial = u\(aq%(initial_text)s: <a href="%(initial_url)s">%(initial)s</a> %(clear_template)s<br />%(input_text)s: %(input)s\(aq
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.FileInput(attrs=None)
Bases: \fBdjango.forms.widgets.Input\fP
.INDENT 7.0
.TP
.B input_type = u\(aqfile\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B needs_multipart_form = True
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
File widgets take data from FILES, not POST
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DateInput(attrs=None, format=None)
Bases: \fBdjango.forms.widgets.DateTimeBaseInput\fP
.INDENT 7.0
.TP
.B format_key = u\(aqDATE_INPUT_FORMATS\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.DateTimeInput(attrs=None, format=None)
Bases: \fBdjango.forms.widgets.DateTimeBaseInput\fP
.INDENT 7.0
.TP
.B format_key = u\(aqDATETIME_INPUT_FORMATS\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.TimeInput(attrs=None, format=None)
Bases: \fBdjango.forms.widgets.DateTimeBaseInput\fP
.INDENT 7.0
.TP
.B format_key = u\(aqTIME_INPUT_FORMATS\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.Textarea(attrs=None)
Bases: \fBdjango.forms.widgets.Widget\fP
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.CheckboxInput(attrs=None, check_test=None)
Bases: \fBdjango.forms.widgets.Widget\fP
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.Select(attrs=None, choices=())
Bases: \fBdjango.forms.widgets.Widget\fP
.INDENT 7.0
.TP
.B allow_multiple_selected = False
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None, choices=())
.UNINDENT
.INDENT 7.0
.TP
.B render_option(selected_choices, option_value, option_label)
.UNINDENT
.INDENT 7.0
.TP
.B render_options(choices, selected_choices)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.NullBooleanSelect(attrs=None)
Bases: \fBdjango.forms.widgets.Select\fP
.sp
A Select Widget intended to be used with NullBooleanField.
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None, choices=())
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.SelectMultiple(attrs=None, choices=())
Bases: \fBdjango.forms.widgets.Select\fP
.INDENT 7.0
.TP
.B allow_multiple_selected = True
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None, choices=())
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.RadioSelect(*args, **kwargs)
Bases: \fBdjango.forms.widgets.RendererMixin\fP, \fBdjango.forms.widgets.Select\fP
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B renderer
alias of \fBRadioFieldRenderer\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.CheckboxSelectMultiple(*args, **kwargs)
Bases: \fBdjango.forms.widgets.RendererMixin\fP, \fBdjango.forms.widgets.SelectMultiple\fP
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B renderer
alias of \fBCheckboxFieldRenderer\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.MultiWidget(widgets, attrs=None)
Bases: \fBdjango.forms.widgets.Widget\fP
.sp
A widget that is composed of multiple widgets.
.sp
Its render() method is different than other widgets\(aq, because it has to
figure out how to split a single value for display in multiple widgets.
The \fBvalue\fP argument can be one of two things:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
A list.
.IP \(bu 2
A normal value (e.g., a string) that has been "compressed" from
a list of values.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
In the second case \-\- i.e., if the value is NOT a list \-\- render() will
first "decompress" the value into a list before rendering it. It does so by
calling the decompress() method, which MultiWidget subclasses must
implement. This method takes a single "compressed" value and returns a
list.
.sp
When render() does its HTML rendering, each value in the list is rendered
with the corresponding widget \-\- the first value is rendered in the first
widget, the second value is rendered in the second widget, etc.
.sp
Subclasses may implement format_output(), which takes the list of rendered
widgets and returns a string of HTML that formats them any way you\(aqd like.
.sp
You\(aqll probably want to use this class with MultiValueField.
.INDENT 7.0
.TP
.B decompress(value)
Returns a list of decompressed values for the given compressed value.
The given value can be assumed to be valid, but not necessarily
non\-empty.
.UNINDENT
.INDENT 7.0
.TP
.B format_output(rendered_widgets)
Given a list of rendered widgets (as strings), returns a Unicode string
representing the HTML for the whole lot.
.sp
This hook allows you to format the HTML design of the widgets, if
needed.
.UNINDENT
.INDENT 7.0
.TP
.B id_for_label(id_)
.UNINDENT
.INDENT 7.0
.TP
.B is_hidden
.UNINDENT
.INDENT 7.0
.TP
.B media
Media for a multiwidget is the combination of all media of the subwidgets
.UNINDENT
.INDENT 7.0
.TP
.B needs_multipart_form
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None)
.UNINDENT
.INDENT 7.0
.TP
.B value_from_datadict(data, files, name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.SplitDateTimeWidget(attrs=None, date_format=None, time_format=None)
Bases: \fBdjango.forms.widgets.MultiWidget\fP
.sp
A Widget that splits datetime input into two <input type="text"> boxes.
.INDENT 7.0
.TP
.B decompress(value)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B supports_microseconds = False
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.BaseForm(data=None, files=None, auto_id=u\(aqid_%s\(aq, prefix=None, initial=None, error_class=<class \(aqdjango.forms.utils.ErrorList\(aq>, label_suffix=None, empty_permitted=False)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B add_error(field, error)
Update the content of \fIself._errors\fP\&.
.sp
The \fIfield\fP argument is the name of the field to which the errors
should be added. If its value is None the errors will be treated as
NON_FIELD_ERRORS.
.sp
The \fIerror\fP argument can be a single error, a list of errors, or a
dictionary that maps field names to lists of errors. What we define as
an "error" can be either a simple string or an instance of
ValidationError with its message attribute set and what we define as
list or dictionary can be an actual \fIlist\fP or \fIdict\fP or an instance
of ValidationError with its \fIerror_list\fP or \fIerror_dict\fP attribute set.
.sp
If \fIerror\fP is a dictionary, the \fIfield\fP argument \fImust\fP be None and
errors will be added to the fields that correspond to the keys of the
dictionary.
.UNINDENT
.INDENT 7.0
.TP
.B add_initial_prefix(field_name)
Add a \(aqinitial\(aq prefix for checking dynamic initial values
.UNINDENT
.INDENT 7.0
.TP
.B add_prefix(field_name)
Returns the field name with a prefix appended, if this Form has a
prefix set.
.sp
Subclasses may wish to override.
.UNINDENT
.INDENT 7.0
.TP
.B as_p()
Returns this form rendered as HTML <p>s.
.UNINDENT
.INDENT 7.0
.TP
.B as_table()
Returns this form rendered as HTML <tr>s \-\- excluding the <table></table>.
.UNINDENT
.INDENT 7.0
.TP
.B as_ul()
Returns this form rendered as HTML <li>s \-\- excluding the <ul></ul>.
.UNINDENT
.INDENT 7.0
.TP
.B changed_data
.UNINDENT
.INDENT 7.0
.TP
.B clean()
Hook for doing any extra form\-wide cleaning after Field.clean() has been
called on every field. Any ValidationError raised by this method will
not be associated with a particular field; it will have a special\-case
association with the field named \(aq__all__\(aq.
.UNINDENT
.INDENT 7.0
.TP
.B errors
Returns an ErrorDict for the data provided for the form
.UNINDENT
.INDENT 7.0
.TP
.B full_clean()
Cleans all of self.data and populates self._errors and
self.cleaned_data.
.UNINDENT
.INDENT 7.0
.TP
.B has_changed()
Returns True if data differs from initial.
.UNINDENT
.INDENT 7.0
.TP
.B has_error(field, code=None)
.UNINDENT
.INDENT 7.0
.TP
.B hidden_fields()
Returns a list of all the BoundField objects that are hidden fields.
Useful for manual form layout in templates.
.UNINDENT
.INDENT 7.0
.TP
.B is_multipart()
Returns True if the form needs to be multipart\-encoded, i.e. it has
FileInput. Otherwise, False.
.UNINDENT
.INDENT 7.0
.TP
.B is_valid()
Returns True if the form has no errors. Otherwise, False. If errors are
being ignored, returns False.
.UNINDENT
.INDENT 7.0
.TP
.B media
Provide a description of all media required to render the widgets on this form
.UNINDENT
.INDENT 7.0
.TP
.B non_field_errors()
Returns an ErrorList of errors that aren\(aqt associated with a particular
field \-\- i.e., from Form.clean(). Returns an empty ErrorList if there
are none.
.UNINDENT
.INDENT 7.0
.TP
.B visible_fields()
Returns a list of BoundField objects that aren\(aqt hidden fields.
The opposite of the hidden_fields() method.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.Form(data=None, files=None, auto_id=u\(aqid_%s\(aq, prefix=None, initial=None, error_class=<class \(aqdjango.forms.utils.ErrorList\(aq>, label_suffix=None, empty_permitted=False)
Bases: \fBdjango.forms.forms.BaseForm\fP
.sp
A collection of Fields, plus their associated data.
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBhorizon.forms.fields\fP Module
.INDENT 0.0
.TP
.B class horizon.forms.fields.DynamicChoiceField(add_item_link=None, add_item_link_args=None, *args, **kwargs)
Bases: \fBdjango.forms.fields.ChoiceField\fP
.sp
A subclass of \fBChoiceField\fP with additional properties that make
dynamically updating its elements easier.
.sp
Notably, the field declaration takes an extra argument, \fBadd_item_link\fP
which may be a string or callable defining the URL that should be used
for the "add" link associated with the field.
.INDENT 7.0
.TP
.B widget
alias of \fBDynamicSelectWidget\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.DynamicSelectWidget(attrs=None, choices=())
Bases: \fBdjango.forms.widgets.Select\fP
.sp
A subclass of the \fBSelect\fP widget which renders extra attributes for
use in callbacks to handle dynamic changes to the available choices.
.INDENT 7.0
.TP
.B get_add_item_url()
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(*args, **kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.DynamicTypedChoiceField(add_item_link=None, add_item_link_args=None, *args, **kwargs)
Bases: \fBhorizon.forms.fields.DynamicChoiceField\fP, \fBdjango.forms.fields.TypedChoiceField\fP
.sp
Simple mix of \fBDynamicChoiceField\fP and \fBTypedChoiceField\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.IPField(*args, **kwargs)
Bases: \fBdjango.forms.fields.Field\fP
.sp
Form field for entering IP/range values, with validation.
Supports IPv4/IPv6 in the format:
.. xxx.xxx.xxx.xxx
.. xxx.xxx.xxx.xxx/zz
.. ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff
.. ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff/zz
and all compressed forms. Also the short forms
are supported:
xxx/yy
xxx.xxx/yy
.INDENT 7.0
.TP
.B version
Specifies which IP version to validate,
valid values are 1 (fields.IPv4), 2 (fields.IPv6) or
both \- 3 (fields.IPv4 | fields.IPv6).
Defaults to IPv4 (1)
.UNINDENT
.INDENT 7.0
.TP
.B mask
Boolean flag to validate subnet masks along with IP address.
E.g: 10.0.0.1/32
.UNINDENT
.INDENT 7.0
.TP
.B mask_range_from
.TP
.B Subnet range limitation, e.g. 16
.TP
.B That means the input mask will be checked to be in the range
.TP
.B 16:max_value. Useful to limit the subnet ranges
.TP
.B to A/B/C\-class networks.
.UNINDENT
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B invalid_format_message = <django.utils.functional.__proxy__ object at 0x7ff3bf236310>
.UNINDENT
.INDENT 7.0
.TP
.B invalid_mask_message = <django.utils.functional.__proxy__ object at 0x7ff3bf236390>
.UNINDENT
.INDENT 7.0
.TP
.B invalid_version_message = <django.utils.functional.__proxy__ object at 0x7ff3bf236350>
.UNINDENT
.INDENT 7.0
.TP
.B max_v4_mask = 32
.UNINDENT
.INDENT 7.0
.TP
.B max_v6_mask = 128
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.MultiIPField(*args, **kwargs)
Bases: \fBhorizon.forms.fields.IPField\fP
.sp
Extends IPField to allow comma\-separated lists of addresses.
.INDENT 7.0
.TP
.B clean(value)
.UNINDENT
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.forms.fields.SelectWidget(attrs=None, choices=(), data_attrs=(), transform=None, transform_html_attrs=None)
Bases: \fBdjango.forms.widgets.Select\fP
.sp
Customizable select widget, that allows to render
data\-xxx attributes from choices. This widget also
allows user to specify additional html attributes
for choices.
.INDENT 7.0
.TP
.B data_attrs
Specifies object properties to serialize as
data\-xxx attribute. If passed (\(aqid\(aq, ),
this will be rendered as:
<option data\-id="123">option_value</option>
where 123 is the value of choice_value.id
.UNINDENT
.INDENT 7.0
.TP
.B transform
A callable used to render the display value
from the option object.
.UNINDENT
.INDENT 7.0
.TP
.B transform_html_attrs
A callable used to render additional HTML attributes
for the option object. It returns a dictionary
containing the html attributes and their values.
For example, to define a title attribute for the
choices:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
helpText = { \(aqApple\(aq: \(aqThis is a fruit\(aq,
          \(aqCarrot\(aq: \(aqThis is a vegetable\(aq }

def get_title(data):
    text = helpText.get(data, None)
    if text:
        return {\(aqtitle\(aq: text}
    else:
        return {}

\&....
\&....

widget=forms.SelectWidget( attrs={\(aqclass\(aq: \(aqswitchable\(aq,
                                 \(aqdata\-slug\(aq: \(aqsource\(aq},
                        transform_html_attrs=get_title )

self.fields[<field name>].choices =
    ([
        (\(aqapple\(aq,\(aqApple\(aq),
        (\(aqcarrot\(aq,\(aqCarrot\(aq)
    ])
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render_option(selected_choices, option_value, option_label)
.UNINDENT
.UNINDENT
.SS The \fBhorizon.utils.html\fP Module
.INDENT 0.0
.TP
.B class horizon.utils.html.HTMLElement
Bases: \fBobject\fP
.sp
A generic base class that gracefully handles html\-style attributes.
.INDENT 7.0
.TP
.B attr_string
Returns a flattened string of HTML attributes based on the
\fBattrs\fP dict provided to the class.
.UNINDENT
.INDENT 7.0
.TP
.B class_string
Returns a list of class name of HTML Element in string.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_attrs()
Returns a dict of default attributes which should be combined with
other declared attributes.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns an iterable of default classes which should be combined with
any other declared classes.
.UNINDENT
.INDENT 7.0
.TP
.B get_final_attrs()
Returns a dict containing the final attributes of this element
which will be rendered.
.UNINDENT
.INDENT 7.0
.TP
.B get_final_css()
Returns a final css class concatenated string.
.UNINDENT
.UNINDENT
.SS The \fBhorizon.utils.lazy_encoder\fP Module
.INDENT 0.0
.TP
.B class horizon.utils.lazy_encoder.LazyTranslationEncoder(skipkeys=False, ensure_ascii=True, check_circular=True, allow_nan=True, sort_keys=False, indent=None, separators=None, encoding=\(aqutf\-8\(aq, default=None)
Bases: \fBdjango.core.serializers.json.DjangoJSONEncoder\fP
.sp
JSON encoder that resolves lazy objects like translations
.INDENT 7.0
.TP
.B default(obj)
.UNINDENT
.UNINDENT
.SS The \fBhorizon.utils.file_discovery\fP Module
.INDENT 0.0
.TP
.B horizon.utils.file_discovery.discover_files(base_path, sub_path=\(aq\(aq, ext=\(aq\(aq, trim_base_path=False)
Discovers all files with certain extension in given paths.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.file_discovery.discover_static_files(base_path, sub_path=\(aq\(aq)
Discovers static files in given paths, returning JavaScript sources,
mocks, specs and HTML templates, all grouped in lists.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.file_discovery.populate_horizon_config(horizon_config, base_path, sub_path=\(aq\(aq, prepend=False)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.file_discovery.sort_js_files(js_files)
Sorts JavaScript files in \fIjs_files\fP into source files, mock files
and spec files based on file extension.
.sp
Output:
.INDENT 7.0
.IP \(bu 2
sources: source files for production.  The order of source files
is significant and should be listed in the below order:
.INDENT 2.0
.IP \(bu 2
First, all the that defines the other application\(aqs angular module.
Those files have extension of \fI\&.module.js\fP\&.  The order among them is
not significant.
.IP \(bu 2
Followed by all other source code files.  The order among them
is not significant.
.UNINDENT
.IP \(bu 2
mocks: mock files provide mock data/services for tests.  They have
extension of \fI\&.mock.js\fP\&. The order among them is not significant.
.IP \(bu 2
specs: spec files for testing.  They have extension of \fI\&.spec.js\fP\&.
The order among them is not significant.
.UNINDENT
.UNINDENT
.SS The \fBhorizon.utils.csvbase\fP Module
.INDENT 0.0
.TP
.B class horizon.utils.csvbase.BaseCsvResponse(request, template, context, content_type, **kwargs)
Bases: \fBhorizon.utils.csvbase.CsvDataMixin\fP, \fBdjango.http.response.HttpResponse\fP
.sp
Base CSV response class. Provides handling of CSV data.
.INDENT 7.0
.TP
.B get_row_data()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.utils.csvbase.BaseCsvStreamingResponse(request, template, context, content_type, **kwargs)
Bases: \fBhorizon.utils.csvbase.CsvDataMixin\fP, \fBdjango.http.response.StreamingHttpResponse\fP
.sp
Base CSV Streaming class. Provides streaming response for CSV data.
.INDENT 7.0
.TP
.B buffer()
.UNINDENT
.INDENT 7.0
.TP
.B get_content()
.UNINDENT
.INDENT 7.0
.TP
.B get_row_data()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.utils.csvbase.CsvDataMixin
Bases: \fBobject\fP
.sp
CSV data Mixin \- provides handling for CSV data.
.INDENT 7.0
.TP
.B columns
A list of CSV column definitions. If omitted \- no column titles
will be shown in the result file. Optional.
.UNINDENT
.INDENT 7.0
.TP
.B encode(value)
.UNINDENT
.INDENT 7.0
.TP
.B write_csv_header()
.UNINDENT
.INDENT 7.0
.TP
.B write_csv_row(args)
.UNINDENT
.UNINDENT
.SS The \fBhorizon.utils.memoized\fP Module
.INDENT 0.0
.TP
.B exception horizon.utils.memoized.UnhashableKeyWarning
Bases: \fBexceptions.RuntimeWarning\fP
.sp
Raised when trying to memoize a function with an unhashable argument.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.memoized.memoized(func)
Decorator that caches function calls.
.sp
Caches the decorated function\(aqs return value the first time it is called
with the given arguments.  If called later with the same arguments, the
cached value is returned instead of calling the decorated function again.
.sp
The cache uses weak references to the passed arguments, so it doesn\(aqt keep
them alive in memory forever.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.memoized.memoized_method(func)
Decorator that caches function calls.
.sp
Caches the decorated function\(aqs return value the first time it is called
with the given arguments.  If called later with the same arguments, the
cached value is returned instead of calling the decorated function again.
.sp
The cache uses weak references to the passed arguments, so it doesn\(aqt keep
them alive in memory forever.
.UNINDENT
.SS The \fBhorizon.utils.validators\fP Module
.INDENT 0.0
.TP
.B horizon.utils.validators.password_validator()
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.validators.password_validator_msg()
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.validators.validate_ip_protocol(ip_proto)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.validators.validate_metadata(value)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.validators.validate_port_or_colon_separated_port_range(port_range)
Accepts a port number or a single\-colon separated range.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.validators.validate_port_range(port)
.UNINDENT
.SS The \fBhorizon.utils\fP Module
.SS The \fBhorizon.utils.escape\fP Module
.INDENT 0.0
.TP
.B horizon.utils.escape.escape(text, existing=<function escape at 0x7ff3c4b009b0>)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.escape.monkeypatch_escape()
.UNINDENT
.SS The \fBhorizon.utils.units\fP Module
.INDENT 0.0
.TP
.B horizon.utils.units.convert(value, source_unit, target_unit, fmt=False)
Converts value from source_unit to target_unit. Returns a tuple
containing the converted value and target_unit.  Having fmt set to True
causes the value to be formatted to 1 decimal digit if it\(aqs a decimal or
be formatted as integer if it\(aqs an integer.
.sp
E.g:
.sp
.nf
.ft C
>>> convert(2, \(aqhr\(aq, \(aqmin\(aq)
(120.0, \(aqmin\(aq)
>>> convert(2, \(aqhr\(aq, \(aqmin\(aq, fmt=True)
(120, \(aqmin\(aq)
>>> convert(30, \(aqmin\(aq, \(aqhr\(aq, fmt=True)
(0.5, \(aqhr\(aq)
.ft P
.fi
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.units.is_larger(unit_1, unit_2)
Returns a boolean indicating whether unit_1 is larger than unit_2.
.sp
E.g:
.sp
.nf
.ft C
>>> is_larger(\(aqKB\(aq, \(aqB\(aq)
True
>>> is_larger(\(aqmin\(aq, \(aqday\(aq)
False
.ft P
.fi
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.units.is_supported(unit)
Returns a bool indicating whether the unit specified is supported by
this module.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.units.normalize(value, unit)
Converts the value so that it belongs to some expected range.
Returns the new value and new unit.
.sp
E.g:
.sp
.nf
.ft C
>>> normalize(1024, \(aqKB\(aq)
(1, \(aqMB\(aq)
>>> normalize(90, \(aqmin\(aq)
(1.5, \(aqhr\(aq)
>>> normalize(1.0, \(aqobject\(aq)
(1, \(aqobject\(aq)
.ft P
.fi
.UNINDENT
.SS The \fBhorizon.utils.scss_filter\fP Module
.INDENT 0.0
.TP
.B class horizon.utils.scss_filter.HorizonScssFilter(*args, **kwargs)
Bases: \fBdjango_pyscss.compressor.DjangoScssFilter\fP
.INDENT 7.0
.TP
.B compiler
.UNINDENT
.UNINDENT
.SS The \fBhorizon.utils.secret_key\fP Module
.INDENT 0.0
.TP
.B exception horizon.utils.secret_key.FilePermissionError
Bases: \fBexceptions.Exception\fP
.sp
The key file permissions are insecure.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.secret_key.generate_key(key_length=64)
Secret key generator.
.sp
The quality of randomness depends on operating system support,
see \fI\%http://docs.python.org/library/random.html#random.SystemRandom\fP\&.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.secret_key.generate_or_read_from_file(key_file=\(aq.secret_key\(aq, key_length=64)
Multiprocess\-safe secret key file generator.
.sp
Useful to replace the default (and thus unsafe) SECRET_KEY in settings.py
upon first start. Save to use, i.e. when multiple Python interpreters
serve the dashboard Django application (e.g. in a mod_wsgi + daemonized
environment).  Also checks if file permissions are set correctly and
throws an exception if not.
.UNINDENT
.SS The \fBhorizon.utils.filters\fP Module
.INDENT 0.0
.TP
.B horizon.utils.filters.parse_isotime(timestr, default=None)
This duplicates oslo timeutils parse_isotime but with a
@register.filter annotation and a silent fallback on error.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.filters.replace_underscores(string)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.filters.timesince_or_never(dt, default=None)
Call the Django \fBtimesince\fP filter, but return the string
\fIdefault\fP if \fIdt\fP is not a valid \fBdate\fP or \fBdatetime\fP object.
When \fIdefault\fP is None, "Never" is returned.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.filters.timesince_sortable(dt)
.UNINDENT
.SS The \fBhorizon.utils.functions\fP Module
.INDENT 0.0
.TP
.B horizon.utils.functions.add_logout_reason(request, response, reason)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.bytes_to_gigabytes(bytes)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.format_value(value)
Returns the given value rounded to one decimal place if it is a
decimal, or integer if it is an integer.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.get_keys(tuple_of_tuples)
Processes a tuple of 2\-element tuples and returns a tuple containing
first component of each tuple.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.get_log_length(request, default=35)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.get_page_size(request, default=20)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.lazy_join(*args, **kw)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.logout_with_message(request, msg, redirect=True)
Send HttpResponseRedirect to LOGOUT_URL.
.sp
\fImsg\fP is a message displayed on the login page after the logout, to explain
the logout reason.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.natural_sort(attr)
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.next_key(tuple_of_tuples, key)
Processes a tuple of 2\-element tuples and returns the key which comes
after the given key.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.previous_key(tuple_of_tuples, key)
Processes a tuple of 2\-element tuples and returns the key which comes
before the given key.
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.functions.value_for_key(tuple_of_tuples, key)
Processes a tuple of 2\-element tuples and returns the value
corresponding to the given key. If not value is found, the key is returned.
.UNINDENT
.SS The \fBhorizon.utils.urlresolvers\fP Module
.INDENT 0.0
.TP
.B horizon.utils.urlresolvers.reverse(viewname, urlconf=None, args=None, kwargs=None, prefix=None, current_app=None)
.UNINDENT
.SS The \fBhorizon.utils.babel_extract_angular\fP Module
.INDENT 0.0
.TP
.B class horizon.utils.babel_extract_angular.AngularGettextHTMLParser
Bases: \fBHTMLParser.HTMLParser\fP
.sp
Parse HTML to find translate directives.
.sp
Currently this parses for these forms of translation:
.INDENT 7.0
.TP
.B <translate>content</translate>
The content will be translated. Angular value templating will be
recognised and transformed into gettext\-familiar translation
strings (i.e. "{$ expression $}" becomes "%(expression)")
.TP
.B <p translate>content</p>
The content will be translated. As above.
.TP
.B {$ \(aqcontent\(aq | translate $}
The string will be translated, minus expression handling (i.e. just
bare strings are allowed.)
.UNINDENT
.INDENT 7.0
.TP
.B handle_data(data)
.UNINDENT
.INDENT 7.0
.TP
.B handle_endtag(tag)
.UNINDENT
.INDENT 7.0
.TP
.B handle_starttag(tag, attrs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B horizon.utils.babel_extract_angular.extract_angular(fileobj, keywords, comment_tags, options)
Extract messages from angular template (HTML) files that use the
angular\-gettext translate directive as per
\fI\%https://angular\-gettext.rocketeer.be/\fP .
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBfileobj\fP \-\- the file\-like object the messages should be extracted
from
.IP \(bu 2
\fBkeywords\fP \-\- This is a standard parameter so it isaccepted but ignored.
.IP \(bu 2
\fBcomment_tags\fP \-\- This is a standard parameter so it is accepted but
ignored.
.IP \(bu 2
\fBoptions\fP \-\- Another standard parameter that is accepted but ignored.
.UNINDENT
.TP
.B Returns
an iterator over \fB(lineno, funcname, message, comments)\fP
tuples
.TP
.B Return type
\fBiterator\fP
.UNINDENT
.UNINDENT
.SS The \fBhorizon.tabs.base\fP Module
.INDENT 0.0
.TP
.B class horizon.tabs.base.Tab(tab_group, request=None)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
A reusable interface for constructing a tab within a
\fBTabGroup\fP\&.
.INDENT 7.0
.TP
.B name
The display name for the tab which will be rendered as the text for
the tab element in the HTML. Required.
.UNINDENT
.INDENT 7.0
.TP
.B slug
The URL slug and id attribute for the tab. This should be unique for
a given tab group. Required.
.UNINDENT
.INDENT 7.0
.TP
.B preload
Determines whether the contents of the tab should be rendered into
the page\(aqs HTML when the tab group is rendered, or whether it should
be loaded dynamically when the tab is selected. Default: \fBTrue\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B classes
A list of CSS classes which should be displayed on this tab.
.UNINDENT
.INDENT 7.0
.TP
.B attrs
A dictionary of HTML attributes which should be rendered into the
markup for this tab.
.UNINDENT
.INDENT 7.0
.TP
.B load
Read\-only access to determine whether or not this tab\(aqs data should
be loaded immediately.
.UNINDENT
.INDENT 7.0
.TP
.B permissions
A list of permission names which this tab requires in order to be
displayed. Defaults to an empty list (\fB[]\fP).
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request)
Determines whether or not the tab is displayed.
.sp
Tab instances can override this method to specify conditions under
which this tab should not be shown at all by returning \fBFalse\fP\&.
.sp
The default behavior is to return \fBTrue\fP for all cases.
.UNINDENT
.INDENT 7.0
.TP
.B data
.UNINDENT
.INDENT 7.0
.TP
.B data_loaded
.UNINDENT
.INDENT 7.0
.TP
.B enabled(request)
Determines whether or not the tab should be accessible
(e.g. be rendered into the HTML on load and respond to a click event).
.sp
If a tab returns \fBFalse\fP from \fBenabled\fP it will ignore the value
of \fBpreload\fP and only render the HTML of the tab after being clicked.
.sp
The default behavior is to return \fBTrue\fP for all cases.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request, **kwargs)
This method should return a dictionary of context data used to
render the tab. Required.
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns a list of the default classes for the tab. Defaults to
and empty list (\fB[]\fP), however additional classes may be added
depending on the state of the tab as follows:
.sp
If the tab is the active tab for the tab group, in which
the class \fB"active"\fP will be added.
.sp
If the tab is not enabled, the classes the class \fB"disabled"\fP
will be added.
.UNINDENT
.INDENT 7.0
.TP
.B get_id()
Returns the id for this tab. Defaults to
\fB"{{ tab_group.slug }}__{{ tab.slug }}"\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_query_string()
.UNINDENT
.INDENT 7.0
.TP
.B get_template_name(request)
Returns the name of the template to be used for rendering this tab.
.sp
By default it returns the value of the \fBtemplate_name\fP attribute
on the \fBTab\fP class.
.UNINDENT
.INDENT 7.0
.TP
.B is_active()
Method to access whether or not this tab is the active tab.
.UNINDENT
.INDENT 7.0
.TP
.B load
.UNINDENT
.INDENT 7.0
.TP
.B name = None
.UNINDENT
.INDENT 7.0
.TP
.B permissions = []
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
Handles POST data sent to a tab.
.sp
Tab instances can override this method to have tab\-specific POST logic
without polluting the TabView code.
.sp
The default behavior is to ignore POST data.
.UNINDENT
.INDENT 7.0
.TP
.B preload = True
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the tab to HTML using the
\fBget_context_data()\fP method and
the \fBget_template_name()\fP method.
.sp
If \fBpreload\fP is \fBFalse\fP and \fBforce_load\fP
is not \fBTrue\fP, or
either \fBallowed()\fP or
\fBenabled()\fP returns \fBFalse\fP this method will
return an empty string.
.UNINDENT
.INDENT 7.0
.TP
.B slug = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tabs.base.TabGroup(request, **kwargs)
Bases: \fBhorizon.utils.html.HTMLElement\fP
.sp
A container class which knows how to manage and render
\fBTab\fP objects.
.INDENT 7.0
.TP
.B slug
The URL slug and pseudo\-unique identifier for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B template_name
The name of the template which will be used to render this tab group.
Default: \fB"horizon/common/_tab_group.html"\fP
.UNINDENT
.INDENT 7.0
.TP
.B sticky
Boolean to control whether the active tab state should be stored
across requests for a given user. (State storage is all done
client\-side.)
.UNINDENT
.INDENT 7.0
.TP
.B show_single_tab
Boolean to control whether the tab bar is shown when the tab group
has only one tab. Default: \fBFalse\fP
.UNINDENT
.INDENT 7.0
.TP
.B param_name
The name of the GET request parameter which will be used when
requesting specific tab data. Default: \fBtab\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B classes
A list of CSS classes which should be displayed on this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B attrs
A dictionary of HTML attributes which should be rendered into the
markup for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B selected
Read\-only property which is set to the instance of the
currently\-selected tab if there is one, otherwise \fBNone\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B active
Read\-only property which is set to the value of the current active tab.
This may not be the same as the value of \fBselected\fP if no
specific tab was requested via the \fBGET\fP parameter.
.UNINDENT
.INDENT 7.0
.TP
.B active
.UNINDENT
.INDENT 7.0
.TP
.B get_default_classes()
Returns a list of the default classes for the tab group. Defaults to
\fB["nav", "nav\-tabs", "ajax\-tabs"]\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_id()
Returns the id for this tab group. Defaults to the value of the tab
group\(aqs \fBhorizon.tabs.Tab.slug\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_loaded_tabs()
.UNINDENT
.INDENT 7.0
.TP
.B get_selected_tab()
Returns the tab specific by the GET request parameter.
.sp
In the event that there is no GET request parameter, the value
of the query parameter is invalid, or the tab is not allowed/enabled,
the return value of this function is None.
.UNINDENT
.INDENT 7.0
.TP
.B get_tab(tab_name, allow_disabled=False)
Returns a specific tab from this tab group.
.sp
If the tab is not allowed or not enabled this method returns \fBNone\fP\&.
.sp
If the tab is disabled but you wish to return it anyway, you can pass
\fBTrue\fP to the allow_disabled argument.
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs()
Returns a list of the allowed tabs for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B load_tab_data()
Preload all data that for the tabs that will be displayed.
.UNINDENT
.INDENT 7.0
.TP
.B param_name = \(aqtab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B render()
Renders the HTML output for this tab group.
.UNINDENT
.INDENT 7.0
.TP
.B selected
.UNINDENT
.INDENT 7.0
.TP
.B show_single_tab = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = None
.UNINDENT
.INDENT 7.0
.TP
.B sticky = False
.UNINDENT
.INDENT 7.0
.TP
.B tabs_not_available()
In the event that no tabs are either allowed or enabled, this method
is the fallback handler. By default it\(aqs a no\-op, but it exists
to make redirecting or raising exceptions possible for subclasses.
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_tab_group.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tabs.base.TableTab(tab_group, request)
Bases: \fBhorizon.tabs.base.Tab\fP
.sp
A \fBTab\fP class which knows how to deal with
\fBDataTable\fP classes rendered inside of it.
.sp
This distinct class is required due to the complexity involved in handling
both dynamic tab loading, dynamic table updating and table actions all
within one view.
.INDENT 7.0
.TP
.B table_classes
An iterable containing the \fBDataTable\fP classes
which this tab will contain. Equivalent to the
\fBtable_classes\fP attribute on
\fBMultiTableView\fP\&. For each table class you
need to define a corresponding \fBget_{{ table_name }}_data\fP method
as with \fBMultiTableView\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request, **kwargs)
Adds a \fB{{ table_name }}_table\fP item to the context for each table
in the \fBtable_classes\fP attribute.
.sp
If only one table class is provided, a shortcut \fBtable\fP context
variable is also added containing the single table.
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B load_table_data()
Calls the \fBget_{{ table_name }}_data\fP methods for each table class
and sets the data on the tables.
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = None
.UNINDENT
.UNINDENT
.SS The \fBhorizon.tabs.views\fP Module
.INDENT 0.0
.TP
.B class horizon.tabs.views.TabView
Bases: \fBhorizon.views.HorizonTemplateView\fP
.sp
A generic class\-based view for displaying a
\fBhorizon.tabs.TabGroup\fP\&.
.sp
This view handles selecting specific tabs and deals with AJAX requests
gracefully.
.INDENT 7.0
.TP
.B tab_group_class
The only required attribute for \fBTabView\fP\&. It should be a class which
inherits from \fBhorizon.tabs.TabGroup\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
Adds the \fBtab_group\fP variable to the context data.
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, **kwargs)
Returns the initialized tab group for this view.
.UNINDENT
.INDENT 7.0
.TP
.B handle_tabbed_response(tab_group, context)
Sends back an AJAX\-appropriate response for the tab group if
required, otherwise renders the response as normal.
.UNINDENT
.INDENT 7.0
.TP
.B render_to_response(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class = None
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class horizon.tabs.views.TabbedTableView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableMixin\fP, \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tables()
A no\-op on this class. Tables are handled at the tab level.
.UNINDENT
.INDENT 7.0
.TP
.B handle_table(table_dict)
For the given dict containing a \fBDataTable\fP and a \fBTableTab\fP
instance, it loads the table data for that tab and calls the
table\(aqs \fBmaybe_handle()\fP method. The
return value will be the result of \fBmaybe_handle\fP\&.
.UNINDENT
.INDENT 7.0
.TP
.B load_tabs()
Loads the tab group, and compiles the table instances for each
table attached to any \fBhorizon.tabs.TableTab\fP instances on
the tab group. This step is necessary before processing any
tab or table actions.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
.UNINDENT
.UNINDENT
.SS The \fBhorizon.tabs\fP Module
.SS Openstack_dashboard
.SS The \fBopenstack_dashboard.views\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.views.get_user_home(user)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.views.splash(*args, **kwargs)
.UNINDENT
.SS The \fBopenstack_dashboard.context_processors\fP Module
.sp
Context processors used by Horizon.
.INDENT 0.0
.TP
.B openstack_dashboard.context_processors.openstack(request)
Context processor necessary for OpenStack Dashboard functionality.
.sp
The following variables are added to the request context:
.INDENT 7.0
.TP
.B \fBauthorized_tenants\fP
A list of tenant objects which the current user has access to.
.UNINDENT
.sp
\fBregions\fP
.INDENT 7.0
.INDENT 3.5
A dictionary containing information about region support, the current
region, and available regions.
.UNINDENT
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.settings\fP Module
.SS The \fBopenstack_dashboard.exceptions\fP Module
.SS The \fBopenstack_dashboard\fP Module
.SS The \fBopenstack_dashboard.static_settings\fP Module
.sp
This file contains configuration for the locations of all the static file
libraries, such as JavaScript and CSS libraries. Packagers for individual
distributions can edit or replace this file, in order to change the paths
to match their distribution\(aqs standards.
.INDENT 0.0
.TP
.B openstack_dashboard.static_settings.find_static_files(HORIZON_CONFIG)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.static_settings.get_staticfiles_dirs(webroot=\(aq/\(aq)
.UNINDENT
.SS The \fBopenstack_dashboard.urls\fP Module
.sp
URL patterns for the OpenStack Dashboard.
.SS The \fBopenstack_dashboard.policy_backend\fP Module
.sp
Policy engine for Horizon
.INDENT 0.0
.TP
.B openstack_dashboard.policy_backend.check(actions, request, target=None)
Check user permission.
.sp
Check if the user has permission to the action according
to policy setting.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBactions\fP \-\- 
.sp
list of scope and action to do policy checks on,
the composition of which is (scope, action)
.INDENT 2.0
.IP \(bu 2
scope: service type managing the policy for action
.IP \(bu 2
action: string representing the action to be checked
.INDENT 2.0
.INDENT 3.5
this should be colon separated for clarity.
i.e.
.INDENT 0.0
.INDENT 3.5
.nf
compute:create_instance
compute:attach_volume
volume:attach_volume
.fi
.sp
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.sp
for a policy action that requires a single action, actions
should look like
.INDENT 2.0
.INDENT 3.5
.nf
"(("compute", "compute:create_instance"),)"
.fi
.sp
.UNINDENT
.UNINDENT
.INDENT 2.0
.TP
.B for a multiple action check, actions should look like
.nf
"(("identity", "identity:list_users"),
.in +2
("identity", "identity:list_roles"))"
.in -2
.fi
.sp
.UNINDENT

.IP \(bu 2
\fBrequest\fP \-\- django http request object. If not specified, credentials
must be passed.
.IP \(bu 2
\fBtarget\fP \-\- dictionary representing the object of the action
for object creation this should be a dictionary
representing the location of the object e.g.
{\(aqproject_id\(aq: object.project_id}
.UNINDENT
.TP
.B Returns
boolean if the user has permission or not for the actions.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.policy_backend.reset()
.UNINDENT
.SS The \fBopenstack_dashboard.policy\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.policy.PolicyTargetMixin
Bases: \fBobject\fP
.sp
Mixin that adds the get_policy_target function
.INDENT 7.0
.TP
.B policy_target_attrs \- a tuple of tuples which defines
the relationship between attributes in the policy
target dict and attributes in the passed datum object.
policy_target_attrs can be overwritten by sub\-classes
which do not use the default, so they can neatly define
their policy target information, without overriding the
entire get_policy_target function.
.UNINDENT
.INDENT 7.0
.TP
.B get_policy_target(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aqproject_id\(aq, \(aqtenant_id\(aq), (\(aquser_id\(aq, \(aquser_id\(aq), (\(aqdomain_id\(aq, \(aqdomain_id\(aq))
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.policy.check(actions, request, target=None)
Wrapper of the configurable policy method.
.UNINDENT
.SS The \fBopenstack_dashboard.hooks\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.hooks.setup_hook(config)
Filter config parsed from a setup.cfg to inject our defaults.
.UNINDENT
.SS The \fBopenstack_dashboard.usage.base\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.base.BaseUsage(request, project_id=None)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B csv_link()
.UNINDENT
.INDENT 7.0
.TP
.B get_cinder_limits()
Get volume limits if cinder is enabled.
.UNINDENT
.INDENT 7.0
.TP
.B get_date_range()
.UNINDENT
.INDENT 7.0
.TP
.B static get_end(year, month, day)
.UNINDENT
.INDENT 7.0
.TP
.B get_form()
.UNINDENT
.INDENT 7.0
.TP
.B get_instances()
.UNINDENT
.INDENT 7.0
.TP
.B get_limits()
.UNINDENT
.INDENT 7.0
.TP
.B get_neutron_limits()
.UNINDENT
.INDENT 7.0
.TP
.B get_quotas()
.UNINDENT
.INDENT 7.0
.TP
.B static get_start(year, month, day)
.UNINDENT
.INDENT 7.0
.TP
.B get_usage_list(start, end)
.UNINDENT
.INDENT 7.0
.TP
.B init_form()
.UNINDENT
.INDENT 7.0
.TP
.B show_terminated = False
.UNINDENT
.INDENT 7.0
.TP
.B summarize(start, end)
.UNINDENT
.INDENT 7.0
.TP
.B today
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.base.GlobalUsage(request, project_id=None)
Bases: \fBopenstack_dashboard.usage.base.BaseUsage\fP
.INDENT 7.0
.TP
.B get_usage_list(start, end)
.UNINDENT
.INDENT 7.0
.TP
.B show_terminated = True
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.base.ProjectUsage(request, project_id=None)
Bases: \fBopenstack_dashboard.usage.base.BaseUsage\fP
.INDENT 7.0
.TP
.B attrs = (\(aqmemory_mb\(aq, \(aqvcpus\(aq, \(aquptime\(aq, \(aqhours\(aq, \(aqlocal_gb\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_usage_list(start, end)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.usage.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.views.UsageView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B csv_template_name = None
.UNINDENT
.INDENT 7.0
.TP
.B get_content_type()
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_template_names()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb88af10>
.UNINDENT
.INDENT 7.0
.TP
.B render_to_response(context, **response_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B show_terminated = True
.UNINDENT
.INDENT 7.0
.TP
.B usage_class = None
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.usage\fP Module
.SS The \fBopenstack_dashboard.usage.quotas\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.quotas.QuotaUsage
Bases: \fBdict\fP
.sp
Tracks quota limit, used, and available for a given set of quotas.
.INDENT 7.0
.TP
.B add_quota(quota)
Adds an internal tracking reference for the given quota.
.UNINDENT
.INDENT 7.0
.TP
.B get(key, default=None)
.UNINDENT
.INDENT 7.0
.TP
.B tally(name, value)
Adds to the "used" metric for the given quota.
.UNINDENT
.INDENT 7.0
.TP
.B update_available(name)
Updates the "available" metric for the given quota.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.usage.quotas.get_default_quota_data(request, disabled_quotas=None, tenant_id=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.usage.quotas.get_disabled_quotas(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.usage.quotas.get_tenant_quota_data(request, disabled_quotas=None, tenant_id=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.usage.quotas.tenant_limit_usages(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.usage.quotas.tenant_quota_usages(*args, **kwargs)
Get our quotas and construct our usage object.
If no tenant_id is provided, a the request.user.project_id
is assumed to be used
.UNINDENT
.SS The \fBopenstack_dashboard.usage.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.tables.BaseUsageTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B base_columns = OrderedDict([(\(aqvcpus\(aq, <Column: vcpus>), (\(aqdisk\(aq, <Column: disk>), (\(aqmemory\(aq, <Column: memory>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.tables.CSVSummary(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.usage.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba05c7d0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqdownload\(aq, \(aqname\(aq: \(aqcsv_summary\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba569bd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(usage=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcsv_summary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba569bd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.tables.GlobalUsageTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.usage.tables.BaseUsageTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B columns = (\(aqproject\(aq, \(aqvcpus\(aq, \(aqdisk\(aq, \(aqmemory\(aq, \(aqvcpu_hours\(aq, \(aqdisk_hours\(aq, \(aqmemory_hours\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqglobal_usage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.usage.tables.CSVSummary\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bdae0d10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B GlobalUsageTable.base_actions = OrderedDict([(\(aqcsv_summary\(aq, <CSVSummary: csv_summary>)])
.UNINDENT
.INDENT 7.0
.TP
.B GlobalUsageTable.base_columns = OrderedDict([(\(aqvcpus\(aq, <Column: vcpus>), (\(aqdisk\(aq, <Column: disk>), (\(aqmemory\(aq, <Column: memory>), (\(aqproject\(aq, <Column: project>), (\(aqvcpu_hours\(aq, <Column: vcpu_hours>), (\(aqdisk_hours\(aq, <Column: disk_hours>), (\(aqmemory_hours\(aq, <Column: memory_hours>)])
.UNINDENT
.INDENT 7.0
.TP
.B GlobalUsageTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.usage.tables.ProjectUsageTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.usage.tables.BaseUsageTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B columns = (\(aqinstance\(aq, \(aqvcpus\(aq, \(aqdisk\(aq, \(aqmemory\(aq, \(aquptime\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqproject_usage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.usage.tables.CSVSummary\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb88add0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ProjectUsageTable.base_actions = OrderedDict([(\(aqcsv_summary\(aq, <CSVSummary: csv_summary>)])
.UNINDENT
.INDENT 7.0
.TP
.B ProjectUsageTable.base_columns = OrderedDict([(\(aqvcpus\(aq, <Column: vcpus>), (\(aqdisk\(aq, <Column: disk>), (\(aqmemory\(aq, <Column: memory>), (\(aqinstance\(aq, <Column: instance>), (\(aquptime\(aq, <Column: uptime>)])
.UNINDENT
.INDENT 7.0
.TP
.B ProjectUsageTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.usage.tables.get_instance_link(datum)
.UNINDENT
.SS The \fBopenstack_dashboard.management\fP Module
.SS The \fBopenstack_dashboard.management.commands\fP Module
.SS The \fBopenstack_dashboard.management.commands.migrate_settings\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.management.commands.migrate_settings.Command(*args, **kwargs)
Bases: \fBdjango.core.management.base.BaseCommand\fP
.INDENT 7.0
.TP
.B file_time_fmt = \(aq%Y%m%d%H%M%S%Z\(aq
.UNINDENT
.INDENT 7.0
.TP
.B gendiff(force=False)
Generate a diff between self.local_settings and the example file.
.UNINDENT
.INDENT 7.0
.TP
.B handle(*args, **options)
.UNINDENT
.INDENT 7.0
.TP
.B help = \(aqCreates a local_settings.py file from the local_settings.py.example template.\(aq
.UNINDENT
.INDENT 7.0
.TP
.B local_settings_diff = \(aqlocal_settings.diff\(aq
.UNINDENT
.INDENT 7.0
.TP
.B local_settings_example = \(aqlocal_settings.py.example\(aq
.UNINDENT
.INDENT 7.0
.TP
.B local_settings_file = \(aqlocal_settings.py\(aq
.UNINDENT
.INDENT 7.0
.TP
.B local_settings_reject_pattern = \(aqlocal_settings.py_%s.rej\(aq
.UNINDENT
.INDENT 7.0
.TP
.B option_list = (<Option at 0x7ff3b435aea8: \-\-gendiff>, <Option at 0x7ff3b39044d0: \-f/\-\-force>)
.UNINDENT
.INDENT 7.0
.TP
.B patch(force=False)
Patch local_settings.py.example with local_settings.diff.
.sp
The patch application generates the local_settings.py file (the
local_settings.py.example remains unchanged).
.sp
\fI\%http://github.com/sitkatech/pypatch\fP fails if the
local_settings.py.example file is not 100% identical to the one used to
generate the first diff so we use the patch command instead.
.UNINDENT
.INDENT 7.0
.TP
.B time_fmt = \(aq%Y\-%m\-%d %H:%M:%S %Z\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.management.commands.migrate_settings.DirContext(dirname)
Bases: \fBobject\fP
.sp
Change directory in a context manager.
.sp
This allows changing directory and to always fall back to the previous
directory whatever happens during execution.
.sp
Usage:
.INDENT 7.0
.INDENT 3.5
.sp
.nf
.ft C
with DirContext(\(aq/home/foo\(aq) as dircontext:
    # Some code happening in \(aq/home/foo\(aq
# We are back to the previous directory.
.ft P
.fi
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.management.commands.migrate_settings.get_module_path(module_name)
Gets the module path without importing anything.
.sp
Avoids conflicts with package dependencies.
(taken from \fI\%http://github.com/sitkatech/pypatch\fP)
.UNINDENT
.SS The \fBopenstack_dashboard.management.commands.make_web_conf\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.management.commands.make_web_conf.Command(stdout=None, stderr=None, no_color=False)
Bases: \fBdjango.core.management.base.BaseCommand\fP
.INDENT 7.0
.TP
.B args = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(*args, **options)
.UNINDENT
.INDENT 7.0
.TP
.B help = \(aqCreate /home/horizon/horizon/openstack_dashboard/wsgi/horizon.wsgi\enor the contents of an apache openstack_dashboard.conf file (on stdout).\enThe apache configuration is generated on stdout because the place of this\enfile is distribution dependent.\en\enexamples::\en\en    manage.py make_web_conf \-\-wsgi  # creates /home/horizon/horizon/openstack_dashboard/wsgi/horizon.wsgi\en    manage.py make_web_conf \-\-apache  # creates an apache vhost conf file (on stdout).\en    manage.py make_web_conf \-\-apache \-\-ssl \-\-mail=webmaster@scl1.us.tribalfusion.net \-\-project=openstack_dashboard \-\-hostname=openstack_dashboard.scl1.us.tribalfusion.net\en\enTo create an acpache configuration file, redirect the output towards the\enlocation you desire, e.g.::\en\en    manage.py make_web_conf \-\-apache > /etc/httpd/conf.d/openstack_dashboard.conf\en\en    \(aq
.UNINDENT
.INDENT 7.0
.TP
.B option_list = (<Option at 0x7ff3b3cc8c20: \-a/\-\-apache>, <Option at 0x7ff3b3cc8c68: \-\-cacert>, <Option at 0x7ff3b3cc8b90: \-f/\-\-force>, <Option at 0x7ff3b3cc8b48: \-H/\-\-hostname>, <Option at 0x7ff3b3cc8cb0: \-\-logdir>, <Option at 0x7ff3b3cc8cf8: \-m/\-\-mail>, <Option at 0x7ff3b3cc8dd0: \-n/\-\-namedhost>, <Option at 0x7ff3b3cc8ea8: \-p/\-\-project>, <Option at 0x7ff3b3cc8f80: \-s/\-\-ssl>, <Option at 0x7ff3b3ccd098: \-\-sslcert>, <Option at 0x7ff3b3ccd170: \-\-sslkey>, <Option at 0x7ff3b3ccd248: \-\-apache\-version>, <Option at 0x7ff3b3ccd320: \-w/\-\-wsgi>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.management.commands.make_web_conf.find_apache_log_dir()
.UNINDENT
.SS The \fBopenstack_dashboard.django_pyscss_fix\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.django_pyscss_fix.LOG = <logging.Logger object at 0x7ff3b8626590>
This is a workaround for \fI\%https://bugs.launchpad.net/horizon/+bug/1367590\fP
It works by creating a path that django_scss will attempt to create
later if it doesn\(aqt exist. The django_pyscss code fails
intermittantly because of concurrency issues.  This code ignores the
exception and if it was anything other than the concurrency issue
django_pyscss will discover the problem later.
.sp
TODO (doug\-fish):  remove this workaround once fix for
\fI\%https://github.com/fusionbox/django\-pyscss/issues/23\fP is picked up.
.UNINDENT
.SS The \fBopenstack_dashboard.api.glance\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.glance.BaseGlanceMetadefAPIResourceWrapper(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.INDENT 7.0
.TP
.B as_json(indent=4)
.UNINDENT
.INDENT 7.0
.TP
.B description
.UNINDENT
.INDENT 7.0
.TP
.B to_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.glance.Namespace(apiresource)
Bases: \fBopenstack_dashboard.api.glance.BaseGlanceMetadefAPIResourceWrapper\fP
.INDENT 7.0
.TP
.B public
.UNINDENT
.INDENT 7.0
.TP
.B resource_type_names
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.glanceclient(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_create(request, **kwargs)
Create image.
.INDENT 7.0
.TP
.B Parameters
\fBkwargs\fP \-\- .INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B copy_from: URL from which Glance server should immediately copy
the data and store it in its configured image store.
.UNINDENT
.IP \(bu 2
data: Form data posted from client.
.IP \(bu 2
location: URL where the data for this image already resides.
.UNINDENT

.UNINDENT
.sp
In the case of \(aqcopy_from\(aq and \(aqlocation\(aq, the Glance server
will give us a immediate response from create and handle the data
asynchronously.
.sp
In the case of \(aqdata\(aq the process of uploading the data may take
some time and is handed off to a seperate thread.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_delete(request, image_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_delete_properties(request, image_id, keys)
Delete custom properties for an image.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_get(request, image_id)
Returns an Image object populated with metadata for image
with supplied identifier.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_list_detailed(request, marker=None, sort_dir=\(aqdesc\(aq, sort_key=\(aqcreated_at\(aq, filters=None, paginate=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_update(request, image_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.image_update_properties(request, image_id, remove_props=None, **kwargs)
Add or update a custom property of an image.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_add_resource_type(request, namespace_name, resource_type)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_create(request, namespace)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_delete(request, namespace_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_full_list(request, resource_type, filters={}, *args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_get(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_list(request, filters={}, sort_dir=\(aqasc\(aq, sort_key=\(aqnamespace\(aq, marker=None, paginate=False)
Retrieve a listing of Namespaces
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpaginate\fP \-\- If true will perform pagination based on settings.
.IP \(bu 2
\fBmarker\fP \-\- Specifies the namespace of the last\-seen namespace.
The typical pattern of limit and marker is to make an
initial limited request and then to use the last
namespace from the response as the marker parameter
in a subsequent limited request. With paginate, limit
is automatically set.
.IP \(bu 2
\fBsort_dir\fP \-\- The sort direction (\(aqasc\(aq or \(aqdesc\(aq).
.IP \(bu 2
\fBsort_key\fP \-\- The field to sort on (for example, \(aqcreated_at\(aq). Default
is namespace. The way base namespaces are loaded into glance
typically at first deployment is done in a single transaction
giving them a potentially unpredictable sort result when using
create_at.
.IP \(bu 2
\fBfilters\fP \-\- specifies addition fields to filter on such as
resource_types.
.UNINDENT
.TP
.B Returns A tuple of three values
.INDENT 7.0
.IP 1. 3
Current page results
.IP 2. 3
A boolean of whether or not there are previous page(s).
.IP 3. 3
A boolean of whether or not there are more page(s).
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_remove_resource_type(request, namespace_name, resource_type_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_resource_types(request, namespace_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_namespace_update(request, namespace_name, **properties)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.glance.metadefs_resource_types_list(request)
.UNINDENT
.SS The \fBopenstack_dashboard.api.base\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.base.APIResourceWrapper(apiresource)
Bases: \fBobject\fP
.sp
Simple wrapper for api objects.
.sp
Define _attrs on the child class and pass in the
api object as the only argument to the constructor
.INDENT 7.0
.TP
.B to_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.base.APIDictWrapper(apidict)
Bases: \fBobject\fP
.sp
Simple wrapper for api dictionaries
.sp
Some api calls return dictionaries.  This class provides identical
behavior as APIResourceWrapper, except that it will also behave as a
dictionary, in addition to attribute accesses.
.sp
Attribute access is the preferred method of access, to be
consistent with api resource objects from novaclient.
.INDENT 7.0
.TP
.B get(item, default=None)
.UNINDENT
.INDENT 7.0
.TP
.B to_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.base.get_service_from_catalog(catalog, service_type)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.base.url_for(request, service_type, endpoint_type=None, region=None)
.UNINDENT
.SS The \fBopenstack_dashboard.api.heat\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.action_check(request, stack_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.action_resume(request, stack_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.action_suspend(request, stack_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.events_list(request, stack_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.format_parameters(params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.heatclient(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.resource_get(request, stack_id, resource_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.resource_metadata_get(request, stack_id, resource_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.resource_type_get(request, resource_type)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.resource_types_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.resources_list(request, stack_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.service_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.stack_create(request, password=None, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.stack_delete(request, stack_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.stack_get(request, stack_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.stack_preview(request, password=None, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.stack_update(request, stack_id, password=None, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.stacks_list(request, marker=None, sort_dir=\(aqdesc\(aq, sort_key=\(aqcreated_at\(aq, paginate=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.template_get(request, stack_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.heat.template_validate(request, **kwargs)
.UNINDENT
.SS The \fBopenstack_dashboard.api.fwaas\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.fwaas.Firewall(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron firewall.
.INDENT 7.0
.TP
.B get_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.fwaas.Policy(apidict)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron firewall policy.
.INDENT 7.0
.TP
.B get_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.fwaas.Rule(apidict)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron firewall rule.
.INDENT 7.0
.TP
.B get_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_create(request, **kwargs)
Create a firewall for specified policy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for firewall
.IP \(bu 2
\fBdescription\fP \-\- description for firewall
.IP \(bu 2
\fBfirewall_policy_id\fP \-\- policy id used by firewall
.IP \(bu 2
\fBshared\fP \-\- boolean (default false)
.IP \(bu 2
\fBadmin_state_up\fP \-\- boolean (default true)
.UNINDENT
.TP
.B Returns
Firewall object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_delete(request, firewall_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_get(request, firewall_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_list_for_tenant(request, tenant_id, **kwargs)
Return a firewall list available for the tenant.
.sp
The list contains firewalls owned by the tenant and shared firewalls.
This is required because Neutron returns all resources including
all tenants if a user has admin role.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_unassociated_routers_list(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.firewall_update(request, firewall_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_create(request, **kwargs)
Create a firewall policy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for policy
.IP \(bu 2
\fBdescription\fP \-\- description for policy
.IP \(bu 2
\fBfirewall_rules\fP \-\- ordered list of rules in policy
.IP \(bu 2
\fBshared\fP \-\- boolean (default false)
.IP \(bu 2
\fBaudited\fP \-\- boolean (default false)
.UNINDENT
.TP
.B Returns
Policy object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_delete(request, policy_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_get(request, policy_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_insert_rule(request, policy_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_list_for_tenant(request, tenant_id, **kwargs)
Return a policy list available for the tenant.
.sp
The list contains policies owned by the tenant and shared policies.
This is required because Neutron returns all resources including
all tenants if a user has admin role.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_remove_rule(request, policy_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.policy_update(request, policy_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.rule_create(request, **kwargs)
Create a firewall rule
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for rule
.IP \(bu 2
\fBdescription\fP \-\- description for rule
.IP \(bu 2
\fBprotocol\fP \-\- protocol for rule
.IP \(bu 2
\fBaction\fP \-\- action for rule
.IP \(bu 2
\fBsource_ip_address\fP \-\- source IP address or subnet
.IP \(bu 2
\fBsource_port\fP \-\- integer in [1, 65535] or range in a:b
.IP \(bu 2
\fBdestination_ip_address\fP \-\- destination IP address or subnet
.IP \(bu 2
\fBdestination_port\fP \-\- integer in [1, 65535] or range in a:b
.IP \(bu 2
\fBshared\fP \-\- boolean (default false)
.IP \(bu 2
\fBenabled\fP \-\- boolean (default true)
.UNINDENT
.TP
.B Returns
Rule object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.rule_delete(request, rule_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.rule_get(request, rule_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.rule_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.rule_list_for_tenant(request, tenant_id, **kwargs)
Return a rule list available for the tenant.
.sp
The list contains rules owned by the tenant and shared rules.
This is required because Neutron returns all resources including
all tenants if a user has admin role.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.fwaas.rule_update(request, rule_id, **kwargs)
.UNINDENT
.SS The \fBopenstack_dashboard.api.network\fP Module
.sp
Abstraction layer for networking functionalities.
.sp
Currently Nova and Neutron have duplicated features. This API layer is
introduced to abstract the differences between them for seamless consumption by
different dashboard implementations.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.network.NetworkClient(request)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_associate(request, floating_ip_id, port_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_disassociate(request, floating_ip_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_pools_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_simple_associate_supported(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_supported(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_target_get_by_instance(request, instance_id, cache=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_target_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.floating_ip_target_list_by_instance(request, instance_id, cache=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_backend(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_create(request, name, desc)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_delete(request, sg_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_get(request, sg_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_rule_create(request, parent_group_id, direction, ethertype, ip_protocol, from_port, to_port, cidr, group_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_rule_delete(request, sgr_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.security_group_update(request, sg_id, name, desc)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.server_security_groups(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.server_update_security_groups(request, instance_id, new_security_group_ids)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.servers_update_addresses(request, servers, all_tenants=False)
Retrieve servers networking information from Neutron if enabled.
.sp
Should be used when up to date networking information is required,
and Nova\(aqs networking info caching mechanism is not fast enough.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.tenant_floating_ip_allocate(request, pool=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.tenant_floating_ip_get(request, floating_ip_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.tenant_floating_ip_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.network.tenant_floating_ip_release(request, floating_ip_id)
.UNINDENT
.SS The \fBopenstack_dashboard.api\fP Module
.sp
Methods and interface objects used to interact with external APIs.
.sp
API method calls return objects that are in many cases objects with
attributes that are direct maps to the data returned from the API http call.
Unfortunately, these objects are also often constructed dynamically, making
it difficult to know what data is available from the API object.  Because of
this, all API calls should wrap their returned object in one defined here,
using only explicitly defined attributes and/or methods.
.sp
In other words, Horizon developers not working on openstack_dashboard.api
shouldn\(aqt need to understand the finer details of APIs for
Keystone/Nova/Glance/Swift et. al.
.SS The \fBopenstack_dashboard.api.swift\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.swift.Container(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.swift.PseudoFolder(apidict, container_name)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.INDENT 7.0
.TP
.B bytes
.UNINDENT
.INDENT 7.0
.TP
.B content_type
.UNINDENT
.INDENT 7.0
.TP
.B id
.UNINDENT
.INDENT 7.0
.TP
.B name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.swift.StorageObject(apidict, container_name, orig_name=None, data=None)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.INDENT 7.0
.TP
.B id
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_api(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_container_exists(request, container_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_copy_object(request, orig_container_name, orig_object_name, new_container_name, new_object_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_create_container(request, name, metadata={})
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_create_pseudo_folder(request, container_name, pseudo_folder_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_delete_container(request, name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_delete_object(request, container_name, object_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_filter_objects(request, filter_string, container_name, prefix=None, marker=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_get_container(request, container_name, with_data=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_get_containers(request, marker=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_get_object(request, container_name, object_name, with_data=True, resp_chunk_size=524288)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_get_objects(request, container_name, prefix=None, marker=None, limit=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_object_exists(request, container_name, object_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_update_container(request, name, metadata={})
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.swift_upload_object(request, container_name, object_name, object_file=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.swift.wildcard_search(string, q)
.UNINDENT
.SS The \fBopenstack_dashboard.api.ceilometer\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.CeilometerUsage(request)
Bases: \fBobject\fP
.sp
Represents wrapper of any Ceilometer queries.
.sp
One instance of this class should be shared between resources
as this class provides a place where users and tenants are
cached. So there are no duplicate queries to API.
.sp
This class also wraps Ceilometer API calls and provides parallel
HTTP calls to API.
.sp
This class should also serve as reasonable abstraction, that will
cover huge amount of optimization due to optimization of Ceilometer
service, without changing of the interface.
.INDENT 7.0
.TP
.B get_tenant(tenant_id)
Returns tenant fetched from API.
.sp
Caching the result, so it doesn\(aqt contact API twice with the
same query.
.UNINDENT
.INDENT 7.0
.TP
.B get_user(user_id)
Returns user fetched from API.
.sp
Caching the result, so it doesn\(aqt contact API twice with the
same query.
.UNINDENT
.INDENT 7.0
.TP
.B global_data_get(used_cls=None, query=None, with_statistics=False, additional_query=None, with_users_and_tenants=True)
Obtaining a resources for table view.
.sp
It obtains resources with statistics data according to declaration
in used_cls class.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIuser_cls\fP: Class wrapper for usage data. It acts as wrapper for
settings needed. See the call of this method for
details.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIquery\fP: Explicit query definition for fetching the resources. If
no query is provided, it takes a default_query from
used_cls. If no default query is provided, it fetches
all the resources and filters them by meters defined
in used_cls.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIwith_statistic\fP: Define whether statistics data from the meters
defined in used_cls should be fetched.
Can be used to first obtain only the pure
resources, then with the statistics data by
AJAX.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIadditional_query\fP: Additional query for the statistics.
E.g. timespan, etc.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIwith_users_and_tenants\fP: If true a user and a tenant object will
be added to each resource object.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B preload_all_tenants()
Preloads all tenants into dictionary.
.sp
It\(aqs more effective to preload all tenants, rather than fetching each
tenant by separate API get calls.
.UNINDENT
.INDENT 7.0
.TP
.B preload_all_users()
Preloads all users into dictionary.
.sp
It\(aqs more effective to preload all users, rather than fetching many
users by separate API get calls.
.UNINDENT
.INDENT 7.0
.TP
.B query_from_object_id(object_id)
Obtaining a query from resource id.
.sp
Query can be then used to identify a resource in resources or meters
API calls. ID is being built in the Resource initializer, or returned
by Datatable into UpdateRow functionality.
.UNINDENT
.INDENT 7.0
.TP
.B resource_aggregates(queries=None)
Obtaining resource aggregates with queries.
.sp
Representing a resource aggregate by query is a most general way
how to obtain a resource aggregates.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIqueries\fP: Dictionary of named queries that defines a bulk of
resource aggregates.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B resource_aggregates_with_statistics(queries=None, meter_names=None, period=None, filter_func=None, stats_attr=None, additional_query=None)
Obtaining resource aggregates with statistics data inside.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIqueries\fP: Dictionary of named queries that defines a bulk of
resource aggregates.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fImeter_names\fP: List of meter names of which we want the
statistics.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIperiod\fP: In seconds. If no period is given, only one aggregate
statistic is returned. If given, a faceted result will
be returned, divided into given periods. Periods with
no data are ignored.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIstats_attr\fP: String representing the specific name of the stats.
E.g. (avg, max, min...) If defined, meter attribute
will contain just the one value. If None is given,
meter attribute will contain the whole Statistic
object.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIadditional_query\fP: Additional query for the statistics.
E.g. timespan, etc.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B resources(query=None, filter_func=None, with_users_and_tenants=False)
Obtaining resources with the query or filter_func.
.sp
Obtains resources and also fetch tenants and users associated
with those resources if with_users_and_tenants flag is true.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIquery\fP: Query for fetching the Ceilometer Resources.
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIfilter_func\fP: Callable for filtering of the obtained
resources.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIwith_users_and_tenants\fP: If true a user and a tenant object will
be added to each resource object.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B resources_with_statistics(query=None, meter_names=None, period=None, filter_func=None, stats_attr=None, additional_query=None, with_users_and_tenants=False)
Obtaining resources with statistics data inside.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIquery\fP: Query for fetching the Ceilometer Resources.
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIfilter_func\fP: Callable for filtering of the obtained
resources.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fImeter_names\fP: List of meter names of which we want the
statistics.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIperiod\fP: In seconds. If no period is given, only one aggregate
statistic is returned. If given, a faceted result will
be returned, divided into given periods. Periods with
no data are ignored.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIstats_attr\fP: String representing the specific name of the stats.
E.g. (avg, max, min...) If defined, meter attribute
will contain just the one value. If None is given,
meter attribute will contain the whole Statistic
object.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIadditional_query\fP: Additional query for the statistics.
E.g. timespan, etc.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIwith_users_and_tenants\fP: If true a user and a tenant object will
be added to each resource object.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B update_with_statistics(resource, meter_names=None, period=None, stats_attr=None, additional_query=None)
Adding statistical data into one Resource or ResourceAggregate.
.sp
It adds each statistic of each meter_names into the resource
attributes. Attribute name is the meter name with replaced \(aq.\(aq to \(aq_\(aq.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIresource\fP: Resource or ResourceAggregate object, that will
be filled by statistic data.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fImeter_names\fP: List of meter names of which we want the
statistics.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIperiod\fP: In seconds. If no period is given, only one aggregate
statistic is returned. If given a faceted result will be
returned, dividend into given periods. Periods with no
data are ignored.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIstats_attr\fP: String representing the specific name of the stats.
E.g. (avg, max, min...) If defined, meter attribute
will contain just the one value. If None is given,
meter attribute will contain the whole Statistic
object.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIadditional_query\fP: Additional query for the statistics.
E.g. timespan, etc.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.Meter(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Represents one Ceilometer meter.
.INDENT 7.0
.TP
.B augment(label=None, description=None)
.UNINDENT
.INDENT 7.0
.TP
.B description
.UNINDENT
.INDENT 7.0
.TP
.B label
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.Meters(request=None, ceilometer_meter_list=None)
Bases: \fBobject\fP
.sp
Class for listing of available meters.
.sp
It is listing meters defined in this class that are available
in Ceilometer meter_list.
.sp
It is storing information that is not available in Ceilometer, i.e.
label, description.
.INDENT 7.0
.TP
.B list_all(only_meters=None, except_meters=None)
Returns a list of meters based on the meters names.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIonly_meters\fP: The list of meter names we want to show.
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_cinder(except_meters=None)
Returns a list of meters tied to cinder.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_glance(except_meters=None)
Returns a list of meters tied to glance.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_ipmi(except_meters=None)
Returns a list of meters tied to ipmi
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_kwapi(except_meters=None)
Returns a list of meters tied to kwapi.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_neutron(except_meters=None)
Returns a list of meters tied to neutron.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_nova(except_meters=None)
Returns a list of meters tied to nova.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_swift(except_meters=None)
Returns a list of meters tied to swift.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIexcept_meters\fP: The list of meter names we don\(aqt want to show.
.UNINDENT
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.Resource(apiresource, ceilometer_usage=None)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Represents one Ceilometer resource.
.INDENT 7.0
.TP
.B get_meter(meter_name)
.UNINDENT
.INDENT 7.0
.TP
.B id
.UNINDENT
.INDENT 7.0
.TP
.B meters
.UNINDENT
.INDENT 7.0
.TP
.B name
.UNINDENT
.INDENT 7.0
.TP
.B query
.UNINDENT
.INDENT 7.0
.TP
.B resource
.UNINDENT
.INDENT 7.0
.TP
.B set_meter(meter_name, value)
.UNINDENT
.INDENT 7.0
.TP
.B tenant
.UNINDENT
.INDENT 7.0
.TP
.B user
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.ResourceAggregate(tenant_id=None, user_id=None, resource_id=None, tenant_ids=None, user_ids=None, resource_ids=None, ceilometer_usage=None, query=None, identifier=None)
Bases: \fBopenstack_dashboard.api.ceilometer.Resource\fP
.sp
Represents aggregate of more resources together.
.sp
Aggregate of resources can be obtained by specifying
multiple ids in one parameter or by not specifying
one parameter.
It can also be specified by query directly.
.INDENT 7.0
.TP
.B Example:
We can obtain an aggregate of resources by specifying
multiple resource_ids in resource_id parameter in init.
Or we can specify only tenant_id, which will return
all resources of that tenant.
.UNINDENT
.INDENT 7.0
.TP
.B id
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.Sample(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Represents one Ceilometer sample.
.INDENT 7.0
.TP
.B instance
.UNINDENT
.INDENT 7.0
.TP
.B name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.Statistic(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Represents one Ceilometer statistic.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.ceilometer.ThreadedUpdateResourceWithStatistics(resource_usage, resource, meter_names=None, period=None, filter_func=None, stats_attr=None, additional_query=None)
Bases: \fBthreading.Thread\fP
.sp
Multithread wrapper for update_with_statistics method of
resource_usage.
.sp
A join logic is placed in process_list class method. All resources
will have its statistics attribute filled in separate threads.
.sp
The resource_usage object is shared between threads. Each thread is
updating one Resource.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIresource\fP: Resource or ResourceAggregate object, that will
be filled by statistic data.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIresources\fP: List of Resource or ResourceAggregate object,
that will be filled by statistic data.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIresource_usage\fP: Wrapping resource usage object, that holds
all statistics data.
.UNINDENT
.IP \(bu 2
\fImeter_names\fP: List of meter names of the statistics we want.
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIperiod\fP: In seconds. If no period is given, only one aggregate
statistic is returned. If given, a faceted result will be
returned, divided into given periods. Periods with no
data are ignored.
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIstats_attr\fP: String representing the attribute name of the stats.
E.g. (avg, max, min...) If None is given, whole
statistic object is returned,
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B \fIadditional_query\fP: Additional query for the statistics.
E.g. timespan, etc.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B classmethod process_list(resource_usage, resources, meter_names=None, period=None, filter_func=None, stats_attr=None, additional_query=None)
.UNINDENT
.INDENT 7.0
.TP
.B run()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.ceilometerclient(*args, **kwargs)
Initialization of Ceilometer client.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.diff_lists(a, b)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.get_flavor_names(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.is_iterable(var)
Return True if the given is list or tuple.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.make_query(user_id=None, tenant_id=None, resource_id=None, user_ids=None, tenant_ids=None, resource_ids=None)
Returns query built from given parameters.
.sp
This query can be then used for querying resources, meters and
statistics.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fIuser_id\fP: user_id, has a priority over list of ids
.IP \(bu 2
\fItenant_id\fP: tenant_id, has a priority over list of ids
.IP \(bu 2
\fIresource_id\fP: resource_id, has a priority over list of ids
.IP \(bu 2
\fIuser_ids\fP: list of user_ids
.IP \(bu 2
\fItenant_ids\fP: list of tenant_ids
.IP \(bu 2
\fIresource_ids\fP: list of resource_ids
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.meter_list(request, query=None)
List the user\(aqs meters.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.resource_list(request, query=None, ceilometer_usage_object=None)
List the resources.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.sample_list(request, meter_name, query=None, limit=None)
List the samples for this meters.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.ceilometer.statistic_list(request, meter_name, query=None, period=None)
List of statistics.
.UNINDENT
.SS The \fBopenstack_dashboard.api.neutron\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.Agent(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron agents.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.FloatingIp(fip)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.FloatingIpManager(request)
Bases: \fBopenstack_dashboard.api.network_base.FloatingIpManager\fP
.INDENT 7.0
.TP
.B allocate(pool)
.UNINDENT
.INDENT 7.0
.TP
.B associate(floating_ip_id, port_id)
.UNINDENT
.INDENT 7.0
.TP
.B device_owner_map = {\(aqcompute:\(aq: \(aqcompute\(aq, \(aqneutron:LOADBALANCER\(aq: \(aqloadbalancer\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B disassociate(floating_ip_id)
.UNINDENT
.INDENT 7.0
.TP
.B get(floating_ip_id)
.UNINDENT
.INDENT 7.0
.TP
.B get_target_id_by_instance(instance_id, target_list=None)
.UNINDENT
.INDENT 7.0
.TP
.B is_simple_associate_supported()
.UNINDENT
.INDENT 7.0
.TP
.B is_supported()
.UNINDENT
.INDENT 7.0
.TP
.B list(all_tenants=False, **search_opts)
.UNINDENT
.INDENT 7.0
.TP
.B list_pools()
.UNINDENT
.INDENT 7.0
.TP
.B list_target_id_by_instance(instance_id, target_list=None)
.UNINDENT
.INDENT 7.0
.TP
.B list_targets()
.UNINDENT
.INDENT 7.0
.TP
.B release(floating_ip_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.FloatingIpPool(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.FloatingIpTarget(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.Network(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron Networks.
.INDENT 7.0
.TP
.B to_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.NeutronAPIDictWrapper(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.INDENT 7.0
.TP
.B items()
.UNINDENT
.INDENT 7.0
.TP
.B name_or_id
.UNINDENT
.INDENT 7.0
.TP
.B set_id_as_name_if_empty(length=8)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.Port(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron ports.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.Profile(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron profiles.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.Router(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron routers.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.RouterStaticRoute(route)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron routes extra route.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.SecurityGroup(sg, sg_dict=None)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.INDENT 7.0
.TP
.B to_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.SecurityGroupManager(request)
Bases: \fBopenstack_dashboard.api.network_base.SecurityGroupManager\fP
.INDENT 7.0
.TP
.B backend = \(aqneutron\(aq
.UNINDENT
.INDENT 7.0
.TP
.B create(name, desc)
.UNINDENT
.INDENT 7.0
.TP
.B delete(sg_id)
.UNINDENT
.INDENT 7.0
.TP
.B get(sg_id)
.UNINDENT
.INDENT 7.0
.TP
.B list()
.UNINDENT
.INDENT 7.0
.TP
.B list_by_instance(instance_id)
Gets security groups of an instance.
.UNINDENT
.INDENT 7.0
.TP
.B rule_create(parent_group_id, direction=None, ethertype=None, ip_protocol=None, from_port=None, to_port=None, cidr=None, group_id=None)
.UNINDENT
.INDENT 7.0
.TP
.B rule_delete(sgr_id)
.UNINDENT
.INDENT 7.0
.TP
.B update(sg_id, name, desc)
.UNINDENT
.INDENT 7.0
.TP
.B update_instance_security_group(instance_id, new_security_group_ids)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.SecurityGroupRule(sgr, sg_dict=None)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.Subnet(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron subnets.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.neutron.SubnetPool(apidict)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron subnetpools.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.add_network_to_dhcp_agent(request, dhcp_agent, network_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.agent_list(request, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.get_feature_permission(request, feature, operation=None)
Check if a feature\-specific field can be displayed.
.sp
This method check a permission for a feature\-specific field.
Such field is usually provided through Neutron extension.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- Request Object
.IP \(bu 2
\fBfeature\fP \-\- feature name defined in FEATURE_MAP
.IP \(bu 2
\fB(optional)\fP (\fIoperation\fP) \-\- Operation type. The valid value should be
defined in FEATURE_MAP[feature][\(aqpolicies\(aq]
It must be specified if FEATURE_MAP[feature] has \(aqpolicies\(aq.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.get_ipver_str(ip_version)
Convert an ip version number to a human\-friendly string.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.is_enabled_by_config(name, default=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.is_extension_supported(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.is_port_profiles_supported()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.is_quotas_extension_supported(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.is_service_enabled(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.list_dhcp_agent_hosting_networks(request, network, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.list_extensions(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.list_resources_with_long_filters(list_method, filter_attr, filter_values, **params)
List neutron resources with handling RequestURITooLong exception.
.sp
If filter parameters are long, list resources API request leads to
414 error (URL is too long). For such case, this method split
list parameters specified by a list_field argument into chunks
and call the specified list_method repeatedly.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBlist_method\fP \-\- Method used to retrieve resource list.
.IP \(bu 2
\fBfilter_attr\fP \-\- attribute name to be filtered. The value corresponding
to this attribute is specified by "filter_values".
If you want to specify more attributes for a filter condition,
pass them as keyword arguments like "attr2=values2".
.IP \(bu 2
\fBfilter_values\fP \-\- values of "filter_attr" to be filtered.
If filter_values are too long and the total URI length exceed the
maximum length supported by the neutron server, filter_values will
be split into sub lists if filter_values is a list.
.IP \(bu 2
\fBparams\fP \-\- parameters to pass a specified listing API call
without any changes. You can specify more filter conditions
in addition to a pair of filter_attr and filter_values.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.network_create(request, **kwargs)
Create a  network object.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBtenant_id\fP \-\- (optional) tenant id of the network created
.IP \(bu 2
\fBname\fP \-\- (optional) name of the network created
.UNINDENT
.TP
.B Returns
Network object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.network_delete(request, network_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.network_get(request, network_id, expand_subnet=True, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.network_list(request, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.network_list_for_tenant(request, tenant_id, **params)
Return a network list available for the tenant.
.sp
The list contains networks owned by the tenant and public networks.
If requested_networks specified, it searches requested_networks only.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.network_update(request, network_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.neutronclient(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.port_create(request, network_id, **kwargs)
Create a port on a specified network.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBnetwork_id\fP \-\- network id a subnet is created on
.IP \(bu 2
\fBdevice_id\fP \-\- (optional) device id attached to the port
.IP \(bu 2
\fBtenant_id\fP \-\- (optional) tenant id of the port created
.IP \(bu 2
\fBname\fP \-\- (optional) name of the port created
.UNINDENT
.TP
.B Returns
Port object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.port_delete(request, port_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.port_get(request, port_id, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.port_list(request, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.port_update(request, port_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.profile_bindings_list(request, type_p, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.profile_create(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.profile_delete(request, profile_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.profile_get(request, profile_id, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.profile_list(request, type_p, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.profile_update(request, profile_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.provider_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.remove_network_from_dhcp_agent(request, dhcp_agent, network_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_add_gateway(request, router_id, network_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_add_interface(request, router_id, subnet_id=None, port_id=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_create(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_delete(request, router_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_get(request, router_id, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_list(request, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_remove_gateway(request, router_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_remove_interface(request, router_id, subnet_id=None, port_id=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_static_route_add(request, router_id, newroute)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_static_route_list(request, router_id=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_static_route_remove(request, router_id, route_ids)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.router_update(request, r_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.servers_update_addresses(request, servers, all_tenants=False)
Retrieve servers networking information from Neutron if enabled.
.sp
Should be used when up to date networking information is required,
and Nova\(aqs networking info caching mechanism is not fast enough.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnet_create(request, network_id, **kwargs)
Create a subnet on a specified network.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBnetwork_id\fP \-\- network id a subnet is created on
.IP \(bu 2
\fBcidr\fP \-\- (optional) subnet IP address range
.IP \(bu 2
\fBip_version\fP \-\- (optional) IP version (4 or 6)
.IP \(bu 2
\fBgateway_ip\fP \-\- (optional) IP address of gateway
.IP \(bu 2
\fBtenant_id\fP \-\- (optional) tenant id of the subnet created
.IP \(bu 2
\fBname\fP \-\- (optional) name of the subnet created
.IP \(bu 2
\fBsubnetpool_id\fP \-\- (optional) subnetpool to allocate prefix from
.IP \(bu 2
\fBprefixlen\fP \-\- (optional) length of prefix to allocate
.UNINDENT
.TP
.B Returns
Subnet object
.UNINDENT
.sp
Although both cidr+ip_version and subnetpool_id+preifxlen is listed as
optional you MUST pass along one of the combinations to get a successful
result.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnet_delete(request, subnet_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnet_get(request, subnet_id, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnet_list(request, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnet_update(request, subnet_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnetpool_create(request, name, prefixes, **kwargs)
Create a subnetpool.
.sp
ip_version is auto\-detected in back\-end.
.sp
Parameters:
request           \-\- Request context
name              \-\- Name for subnetpool
prefixes          \-\- List of prefixes for pool
.sp
Keyword Arguments (optional):
min_prefixlen     \-\- Minimum prefix length for allocations from pool
max_prefixlen     \-\- Maximum prefix length for allocations from pool
default_prefixlen \-\- Default prefix length for allocations from pool
default_quota     \-\- Default quota for allocations from pool
shared            \-\- Subnetpool should be shared (Admin\-only)
tenant_id         \-\- Owner of subnetpool
.sp
Returns:
SubnetPool object
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnetpool_delete(request, subnetpool_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnetpool_get(request, subnetpool_id, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnetpool_list(request, **params)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.subnetpool_update(request, subnetpool_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.tenant_quota_get(request, tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.tenant_quota_update(request, tenant_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.neutron.unescape_port_kwargs(**kwargs)
.UNINDENT
.SS The \fBopenstack_dashboard.api.nova\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.FlavorExtraSpec(flavor_id, key, val)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.FloatingIp(fip)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.FloatingIpManager(request)
Bases: \fBopenstack_dashboard.api.network_base.FloatingIpManager\fP
.INDENT 7.0
.TP
.B allocate(pool)
.UNINDENT
.INDENT 7.0
.TP
.B associate(floating_ip_id, port_id)
.UNINDENT
.INDENT 7.0
.TP
.B disassociate(floating_ip_id)
.UNINDENT
.INDENT 7.0
.TP
.B get(floating_ip_id)
.UNINDENT
.INDENT 7.0
.TP
.B get_target_id_by_instance(instance_id, target_list=None)
.UNINDENT
.INDENT 7.0
.TP
.B is_simple_associate_supported()
.UNINDENT
.INDENT 7.0
.TP
.B is_supported()
.UNINDENT
.INDENT 7.0
.TP
.B list()
.UNINDENT
.INDENT 7.0
.TP
.B list_pools()
.UNINDENT
.INDENT 7.0
.TP
.B list_target_id_by_instance(instance_id, target_list=None)
.UNINDENT
.INDENT 7.0
.TP
.B list_targets()
.UNINDENT
.INDENT 7.0
.TP
.B release(floating_ip_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.FloatingIpPool(pool)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.FloatingIpTarget(server)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.Hypervisor(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.sp
Simple wrapper around novaclient.hypervisors.Hypervisor.
.INDENT 7.0
.TP
.B servers
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.NovaUsage(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Simple wrapper around contrib/simple_usage.py.
.INDENT 7.0
.TP
.B disk_gb_hours
.UNINDENT
.INDENT 7.0
.TP
.B get_summary()
.UNINDENT
.INDENT 7.0
.TP
.B local_gb
.UNINDENT
.INDENT 7.0
.TP
.B memory_mb
.UNINDENT
.INDENT 7.0
.TP
.B memory_mb_hours
.UNINDENT
.INDENT 7.0
.TP
.B total_active_instances
.UNINDENT
.INDENT 7.0
.TP
.B vcpu_hours
.UNINDENT
.INDENT 7.0
.TP
.B vcpus
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.RDPConsole(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.sp
Wrapper for the "console" dictionary.
.sp
Returned by the novaclient.servers.get_rdp_console method.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.SPICEConsole(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.sp
Wrapper for the "console" dictionary.
.sp
Returned by the novaclient.servers.get_spice_console method.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.SecurityGroup(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Wrapper around novaclient.security_groups.SecurityGroup.
.sp
Wraps its rules in SecurityGroupRule objects and allows access to them.
.INDENT 7.0
.TP
.B rules
Wraps transmitted rule info in the novaclient rule class.
.UNINDENT
.INDENT 7.0
.TP
.B to_dict()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.SecurityGroupManager(request)
Bases: \fBopenstack_dashboard.api.network_base.SecurityGroupManager\fP
.INDENT 7.0
.TP
.B backend = \(aqnova\(aq
.UNINDENT
.INDENT 7.0
.TP
.B create(name, desc)
.UNINDENT
.INDENT 7.0
.TP
.B delete(security_group_id)
.UNINDENT
.INDENT 7.0
.TP
.B get(sg_id)
.UNINDENT
.INDENT 7.0
.TP
.B list()
.UNINDENT
.INDENT 7.0
.TP
.B list_by_instance(instance_id)
Gets security groups of an instance.
.UNINDENT
.INDENT 7.0
.TP
.B rule_create(parent_group_id, direction=None, ethertype=None, ip_protocol=None, from_port=None, to_port=None, cidr=None, group_id=None)
.UNINDENT
.INDENT 7.0
.TP
.B rule_delete(security_group_rule_id)
.UNINDENT
.INDENT 7.0
.TP
.B update(sg_id, name, desc)
.UNINDENT
.INDENT 7.0
.TP
.B update_instance_security_group(instance_id, new_security_group_ids)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.SecurityGroupRule(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Wrapper for individual rules in a SecurityGroup.
.INDENT 7.0
.TP
.B direction
.UNINDENT
.INDENT 7.0
.TP
.B ethertype
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.SerialConsole(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.sp
Wrapper for the "console" dictionary.
.sp
Returned by the novaclient.servers.get_serial_console method.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.Server(apiresource, request)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.sp
Simple wrapper around novaclient.server.Server.
.sp
Preserves the request info so image name can later be retrieved.
.INDENT 7.0
.TP
.B availability_zone
.UNINDENT
.INDENT 7.0
.TP
.B host_server
.UNINDENT
.INDENT 7.0
.TP
.B image_name
.UNINDENT
.INDENT 7.0
.TP
.B internal_name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.nova.VNCConsole(apidict)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.sp
Wrapper for the "console" dictionary.
.sp
Returned by the novaclient.servers.get_vnc_console method.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.add_host_to_aggregate(request, aggregate_id, host)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.add_tenant_to_flavor(request, flavor, tenant)
Add a tenant to the given flavor access list.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.aggregate_create(request, name, availability_zone=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.aggregate_delete(request, aggregate_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.aggregate_details_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.aggregate_get(request, aggregate_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.aggregate_set_metadata(request, aggregate_id, metadata)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.aggregate_update(request, aggregate_id, values)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.availability_zone_list(request, detailed=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.can_set_mount_point()
Return the Hypervisor\(aqs capability of setting mount points.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.can_set_server_password()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.default_quota_get(request, tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.default_quota_update(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.evacuate_host(request, host, target=None, on_shared_storage=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.extension_supported(*args, **kwargs)
Determine if nova supports a given extension name.
.sp
Example values for the extension_name include AdminActions, ConsoleOutput,
etc.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_access_list(*args, **kwargs)
Get the list of access instance sizes (flavors).
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_create(request, name, memory, vcpu, disk, flavorid=\(aqauto\(aq, ephemeral=0, swap=0, metadata=None, is_public=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_delete(request, flavor_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_extra_delete(request, flavor_id, keys)
Unset the flavor extra spec keys.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_extra_set(request, flavor_id, metadata)
Set the flavor extra spec keys.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_get(request, flavor_id, get_extras=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_get_extras(request, flavor_id, raw=False, flavor=None)
Get flavor extra specs.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.flavor_list(*args, **kwargs)
Get the list of available instance sizes (flavors).
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.get_password(request, instance_id, private_key=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.get_x509_credentials(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.get_x509_root_certificate(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.host_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.hypervisor_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.hypervisor_search(request, query, servers=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.hypervisor_stats(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.instance_action_list(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.instance_volume_attach(request, volume_id, instance_id, device)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.instance_volume_detach(request, instance_id, att_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.instance_volumes_list(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.interface_attach(request, server, port_id=None, net_id=None, fixed_ip=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.interface_detach(request, server, port_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.keypair_create(request, name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.keypair_delete(request, keypair_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.keypair_get(request, keypair_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.keypair_import(request, name, public_key)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.keypair_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.list_extensions(*args, **kwargs)
List all nova extensions, except the ones in the blacklist.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.migrate_host(request, host, live_migrate=False, disk_over_commit=False, block_migration=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.novaclient(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.remove_host_from_aggregate(request, aggregate_id, host)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.remove_tenant_from_flavor(request, flavor, tenant)
Remove a tenant from the given flavor access list.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.requires_keypair()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_confirm_resize(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_console_output(request, instance_id, tail_length=None)
Gets console output of an instance.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_create(request, name, image, flavor, key_name, user_data, security_groups, block_device_mapping=None, block_device_mapping_v2=None, nics=None, availability_zone=None, instance_count=1, admin_pass=None, disk_config=None, config_drive=None, meta=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_delete(request, instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_get(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_list(request, search_opts=None, all_tenants=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_live_migrate(request, instance_id, host, block_migration=False, disk_over_commit=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_lock(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_migrate(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_pause(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_rdp_console(request, instance_id, console_type=\(aqrdp\-html5\(aq)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_reboot(request, instance_id, soft_reboot=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_rebuild(request, instance_id, image_id, password=None, disk_config=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_resize(request, instance_id, flavor, disk_config=None, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_resume(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_revert_resize(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_serial_console(request, instance_id, console_type=\(aqserial\(aq)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_shelve(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_spice_console(request, instance_id, console_type=\(aqspice\-html5\(aq)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_start(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_stop(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_suspend(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_unlock(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_unpause(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_unshelve(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_update(request, instance_id, name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.server_vnc_console(request, instance_id, console_type=\(aqnovnc\(aq)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.service_disable(request, host, binary, reason=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.service_enable(request, host, binary)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.service_list(request, binary=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.snapshot_create(request, instance_id, name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.tenant_absolute_limits(request, reserved=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.tenant_quota_get(request, tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.tenant_quota_update(request, tenant_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.usage_get(request, tenant_id, start, end)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.usage_list(request, start, end)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.nova.virtual_interfaces_list(request, instance_id)
.UNINDENT
.SS The \fBopenstack_dashboard.api.lbaas\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.lbaas.Member(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron load balancer member.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.lbaas.Pool(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron load balancer pool.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.lbaas.PoolMonitor(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron load balancer pool health monitor.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.lbaas.PoolStats(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron load balancer pool stats.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.lbaas.Vip(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron load balancer vip.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.member_create(request, **kwargs)
Create a load balance member
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBpool_id\fP \-\- pool_id of pool for member
.IP \(bu 2
\fBaddress\fP \-\- IP address
.IP \(bu 2
\fBprotocol_port\fP \-\- transport layer port number
.IP \(bu 2
\fBweight\fP \-\- weight for member
.IP \(bu 2
\fBadmin_state_up\fP \-\- admin_state
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.member_delete(request, mem_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.member_get(request, member_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.member_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.member_update(request, member_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_create(request, **kwargs)
Create a pool for specified protocol
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for pool
.IP \(bu 2
\fBdescription\fP \-\- description for pool
.IP \(bu 2
\fBsubnet_id\fP \-\- subnet_id for subnet of pool
.IP \(bu 2
\fBprotocol\fP \-\- load balanced protocol
.IP \(bu 2
\fBlb_method\fP \-\- load balancer method
.IP \(bu 2
\fBadmin_state_up\fP \-\- admin state (default on)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_delete(request, pool)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_get(request, pool_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_health_monitor_create(request, **kwargs)
Create a health monitor
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBtype\fP \-\- type of monitor
.IP \(bu 2
\fBdelay\fP \-\- delay of monitor
.IP \(bu 2
\fBtimeout\fP \-\- timeout of monitor
.IP \(bu 2
\fBmax_retries\fP \-\- max retries [1..10]
.IP \(bu 2
\fBhttp_method\fP \-\- http method
.IP \(bu 2
\fBurl_path\fP \-\- url path
.IP \(bu 2
\fBexpected_codes\fP \-\- http return code
.IP \(bu 2
\fBadmin_state_up\fP \-\- admin state
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_health_monitor_delete(request, mon_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_health_monitor_get(request, monitor_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_health_monitor_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_health_monitor_update(request, monitor_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_monitor_association_create(request, **kwargs)
Associate a health monitor with pool
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBmonitor_id\fP \-\- id of monitor
.IP \(bu 2
\fBpool_id\fP \-\- id of pool
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_monitor_association_delete(request, **kwargs)
Disassociate a health monitor from pool
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBmonitor_id\fP \-\- id of monitor
.IP \(bu 2
\fBpool_id\fP \-\- id of pool
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_stats(request, pool_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.pool_update(request, pool_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.vip_create(request, **kwargs)
Create a vip for a specified pool.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBaddress\fP \-\- virtual IP address
.IP \(bu 2
\fBname\fP \-\- name for vip
.IP \(bu 2
\fBdescription\fP \-\- description for vip
.IP \(bu 2
\fBsubnet_id\fP \-\- subnet_id for subnet of vip
.IP \(bu 2
\fBprotocol_port\fP \-\- transport layer port number for vip
.UNINDENT
.TP
.B Returns
Vip object
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.vip_delete(request, vip_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.vip_get(request, vip_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.vip_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.lbaas.vip_update(request, vip_id, **kwargs)
.UNINDENT
.SS The \fBopenstack_dashboard.api.keystone\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.keystone.IdentityAPIVersionManager(service_type, preferred_version=None)
Bases: \fBopenstack_dashboard.api.base.APIVersionManager\fP
.INDENT 7.0
.TP
.B get_project_manager(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B upgrade_v2_user(user)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.keystone.Service(service, region, *args, **kwargs)
Bases: \fBopenstack_dashboard.api.base.APIDictWrapper\fP
.sp
Wrapper for a dict based on the service data from keystone.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.add_domain_user_role(request, user, role, domain)
Adds a role for a user on a domain.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.add_group_role(request, role, group, domain=None, project=None)
Adds a role for a group on a domain or project.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.add_group_user(request, group_id, user_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.add_tenant_user_role(request, project=None, user=None, role=None, group=None, domain=None)
Adds a role for a user on a tenant.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.create_ec2_credentials(request, user_id, tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.domain_create(request, name, description=None, enabled=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.domain_delete(request, domain_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.domain_get(request, domain_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.domain_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.domain_update(request, domain_id, name=None, description=None, enabled=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.ec2_manager(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_default_domain(request)
Gets the default domain object to use when creating Identity object.
.sp
Returns the domain context if is set, otherwise return the domain
of the logon user.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_default_role(request)
Gets the default role object from Keystone and saves it as a global.
.sp
Since this is configured in settings and should not change from request
to request. Supports lookup by name or id.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_domain_users_roles(request, domain)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_project_groups_roles(request, project)
Gets the groups roles in a given project.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- the request entity containing the login user information
.IP \(bu 2
\fBproject\fP \-\- the project to filter the groups roles. It accepts both
project object resource or project ID
.UNINDENT
.TP
.B Returns group_roles
a dictionary mapping the groups and their roles in
given project
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_project_users_roles(request, project)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_user_ec2_credentials(request, user_id, access_token)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.get_version()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.group_create(request, domain_id, name, description=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.group_delete(request, group_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.group_get(request, group_id, admin=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.group_list(request, domain=None, project=None, user=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.group_update(request, group_id, name=None, description=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystone_backend_name()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystone_can_edit_domain()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystone_can_edit_group()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystone_can_edit_project()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystone_can_edit_role()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystone_can_edit_user()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.keystoneclient(request, admin=False)
Returns a client connected to the Keystone backend.
.sp
Several forms of authentication are supported:
.INDENT 7.0
.INDENT 3.5
.INDENT 0.0
.IP \(bu 2
Username + password \-> Unscoped authentication
.IP \(bu 2
Username + password + tenant id \-> Scoped authentication
.IP \(bu 2
Unscoped token \-> Unscoped authentication
.IP \(bu 2
Unscoped token + tenant id \-> Scoped authentication
.IP \(bu 2
Scoped token \-> Scoped authentication
.UNINDENT
.UNINDENT
.UNINDENT
.sp
Available services and data from the backend will vary depending on
whether the authentication was scoped or unscoped.
.sp
Lazy authentication if an \fBendpoint\fP parameter is provided.
.sp
Calls requiring the admin endpoint should have \fBadmin=True\fP passed in
as a keyword argument.
.sp
The client is cached so that subsequent API calls during the same
request/response cycle don\(aqt have to be re\-authenticated.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.list_ec2_credentials(request, user_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.remove_domain_user_role(request, user, role, domain=None)
Removes a given single role for a user from a domain.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.remove_group_role(request, role, group, domain=None, project=None)
Removes a given single role for a group from a domain or project.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.remove_group_roles(request, group, domain=None, project=None)
Removes all roles from a group on a domain or project.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.remove_group_user(request, group_id, user_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.remove_tenant_user(request, project=None, user=None, domain=None)
Removes all roles from a user on a tenant, removing them from it.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.remove_tenant_user_role(request, project=None, user=None, role=None, group=None, domain=None)
Removes a given single role for a user from a tenant.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.role_assignments_list(request, project=None, user=None, role=None, group=None, domain=None, effective=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.role_create(request, name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.role_delete(request, role_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.role_get(request, role_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.role_list(request)
Returns a global list of available roles.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.role_update(request, role_id, name=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.roles_for_group(request, group, domain=None, project=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.roles_for_user(request, user, project=None, domain=None)
Returns a list of user roles scoped to a project or domain.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.tenant_create(request, name, description=None, enabled=None, domain=None, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.tenant_delete(request, project)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.tenant_get(request, project, admin=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.tenant_list(request, paginate=False, marker=None, domain=None, user=None, admin=True, filters=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.tenant_update(request, project, name=None, description=None, enabled=None, domain=None, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_create(request, name=None, email=None, password=None, project=None, enabled=None, domain=None, description=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_delete(request, user_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_get(request, user_id, admin=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_list(request, project=None, domain=None, group=None, filters=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_update(request, user, **data)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_update_enabled(request, user, enabled)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_update_own_password(request, origpassword, password)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_update_password(request, user, password, admin=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_update_tenant(request, user, project, admin=True)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.keystone.user_verify_admin_password(request, admin_password)
.UNINDENT
.SS The \fBopenstack_dashboard.api.vpn\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.vpn.IKEPolicy(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron VPN IKEPolicy.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.vpn.IPSecPolicy(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron VPN IPSecPolicy.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.vpn.IPSecSiteConnection(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron IPSecSiteConnection.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.vpn.VPNService(apiresource)
Bases: \fBopenstack_dashboard.api.neutron.NeutronAPIDictWrapper\fP
.sp
Wrapper for neutron VPNService.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ikepolicy_create(request, **kwargs)
Create IKEPolicy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for IKEPolicy
.IP \(bu 2
\fBdescription\fP \-\- description for IKEPolicy
.IP \(bu 2
\fBauth_algorithm\fP \-\- authorization algorithm for IKEPolicy
.IP \(bu 2
\fBencryption_algorithm\fP \-\- encryption algorithm for IKEPolicy
.IP \(bu 2
\fBike_version\fP \-\- IKE version for IKEPolicy
.IP \(bu 2
\fBlifetime\fP \-\- Lifetime Units and Value for IKEPolicy
.IP \(bu 2
\fBpfs\fP \-\- Perfect Forward Secrecy for IKEPolicy
.IP \(bu 2
\fBphase1_negotiation_mode\fP \-\- IKE Phase1 negotiation mode for IKEPolicy
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ikepolicy_delete(request, ikepolicy_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ikepolicy_get(request, ikepolicy_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ikepolicy_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ikepolicy_update(request, ikepolicy_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecpolicy_create(request, **kwargs)
Create IPSecPolicy
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for IPSecPolicy
.IP \(bu 2
\fBdescription\fP \-\- description for IPSecPolicy
.IP \(bu 2
\fBauth_algorithm\fP \-\- authorization algorithm for IPSecPolicy
.IP \(bu 2
\fBencapsulation_mode\fP \-\- encapsulation mode for IPSecPolicy
.IP \(bu 2
\fBencryption_algorithm\fP \-\- encryption algorithm for IPSecPolicy
.IP \(bu 2
\fBlifetime\fP \-\- Lifetime Units and Value for IPSecPolicy
.IP \(bu 2
\fBpfs\fP \-\- Perfect Forward Secrecy for IPSecPolicy
.IP \(bu 2
\fBtransform_protocol\fP \-\- Transform Protocol for IPSecPolicy
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecpolicy_delete(request, ipsecpolicy_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecpolicy_get(request, ipsecpolicy_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecpolicy_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecpolicy_update(request, ipsecpolicy_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecsiteconnection_create(request, **kwargs)
Create IPSecSiteConnection
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBname\fP \-\- name for IPSecSiteConnection
.IP \(bu 2
\fBdescription\fP \-\- description for IPSecSiteConnection
.IP \(bu 2
\fBdpd\fP \-\- dead peer detection action, interval and timeout
.IP \(bu 2
\fBikepolicy_id\fP \-\- IKEPolicy associated with this connection
.IP \(bu 2
\fBinitiator\fP \-\- initiator state
.IP \(bu 2
\fBipsecpolicy_id\fP \-\- IPsecPolicy associated with this connection
.IP \(bu 2
\fBmtu\fP \-\- MTU size for the connection
.IP \(bu 2
\fBpeer_address\fP \-\- Peer gateway public address
.IP \(bu 2
\fBpeer_cidrs\fP \-\- remote subnet(s) in CIDR format
.IP \(bu 2
\fBpeer_id\fP \-\- Peer router identity for authentication"
.IP \(bu 2
\fBpsk\fP \-\- Pre\-Shared Key string
.IP \(bu 2
\fBvpnservice_id\fP \-\- VPNService associated with this connection
.IP \(bu 2
\fBadmin_state_up\fP \-\- admin state (default on)
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecsiteconnection_delete(request, ipsecsiteconnection_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecsiteconnection_get(request, ipsecsiteconnection_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecsiteconnection_list(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.ipsecsiteconnection_update(request, ipsecsiteconnection_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.vpnservice_create(request, **kwargs)
Create VPNService
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- request context
.IP \(bu 2
\fBadmin_state_up\fP \-\- admin state (default on)
.IP \(bu 2
\fBname\fP \-\- name for VPNService
.IP \(bu 2
\fBdescription\fP \-\- description for VPNService
.IP \(bu 2
\fBrouter_id\fP \-\- router id for router of VPNService
.IP \(bu 2
\fBsubnet_id\fP \-\- subnet id for subnet of VPNService
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.vpnservice_delete(request, vpnservice_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.vpnservice_get(request, vpnservice_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.vpnservice_list(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.vpn.vpnservice_update(request, vpnservice_id, **kwargs)
.UNINDENT
.SS The \fBopenstack_dashboard.api.cinder\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.BaseCinderAPIResourceWrapper(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.INDENT 7.0
.TP
.B description
.UNINDENT
.INDENT 7.0
.TP
.B name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.QosSpec(id, key, val)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.VolTypeExtraSpec(type_id, key, val)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.Volume(apiresource)
Bases: \fBopenstack_dashboard.api.cinder.BaseCinderAPIResourceWrapper\fP
.INDENT 7.0
.TP
.B is_bootable
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.VolumeBackup(apiresource)
Bases: \fBopenstack_dashboard.api.cinder.BaseCinderAPIResourceWrapper\fP
.INDENT 7.0
.TP
.B volume
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.VolumePool(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.VolumeSnapshot(apiresource)
Bases: \fBopenstack_dashboard.api.cinder.BaseCinderAPIResourceWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.VolumeTransfer(apiresource)
Bases: \fBopenstack_dashboard.api.base.APIResourceWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.cinder.VolumeType(apiresource)
Bases: \fBopenstack_dashboard.api.cinder.BaseCinderAPIResourceWrapper\fP
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.availability_zone_list(request, detailed=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.cinderclient(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.default_quota_get(request, tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.default_quota_update(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.extension_supported(*args, **kwargs)
This method will determine if Cinder supports a given extension name.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.list_extensions(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.pool_list(request, detailed=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_associate(request, qos_specs, vol_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_create(request, name, specs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_delete(request, qos_spec_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_disassociate(request, qos_specs, vol_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_get(request, qos_spec_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_get_associations(request, qos_spec_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_get_keys(request, qos_spec_id, raw=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_set_keys(request, qos_spec_id, specs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.qos_spec_unset_keys(request, qos_spec_id, specs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.service_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.tenant_absolute_limits(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.tenant_quota_get(request, tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.tenant_quota_update(request, tenant_id, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.transfer_accept(request, transfer_id, auth_key)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.transfer_create(request, transfer_id, name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.transfer_delete(request, transfer_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.transfer_get(request, transfer_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.transfer_list(request, detailed=True, search_opts=None)
To see all volumes transfers as an admin pass in a special
search option: {\(aqall_tenants\(aq: 1}
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.version_get()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_backup_create(request, volume_id, container_name, name, description)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_backup_delete(request, backup_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_backup_get(request, backup_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_backup_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_backup_restore(request, backup_id, volume_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_backup_supported(*args, **kwargs)
This method will determine if cinder supports backup.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_create(request, size, name, description, volume_type, snapshot_id=None, metadata=None, image_id=None, availability_zone=None, source_volid=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_delete(request, volume_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_encryption_type_create(request, volume_type_id, data)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_encryption_type_delete(request, volume_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_encryption_type_get(request, volume_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_encryption_type_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_extend(request, volume_id, new_size)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_get(request, volume_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_get_encryption_metadata(request, volume_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_list(request, search_opts=None)
To see all volumes in the cloud as an admin you can pass in a special
search option: {\(aqall_tenants\(aq: 1}
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_manage(request, host, identifier, id_type, name, description, volume_type, availability_zone, metadata, bootable)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_migrate(request, volume_id, host, force_host_copy=False, lock_volume=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_reset_state(request, volume_id, state)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_retype(request, volume_id, new_type, migration_policy)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_set_bootable(request, volume_id, bootable)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_snapshot_create(request, volume_id, name, description=None, force=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_snapshot_delete(request, snapshot_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_snapshot_get(request, snapshot_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_snapshot_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_snapshot_reset_state(request, snapshot_id, state)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_snapshot_update(request, snapshot_id, name, description)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_create(request, name, description=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_default(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_delete(request, volume_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_extra_delete(request, type_id, keys)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_extra_get(request, type_id, raw=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_extra_set(request, type_id, metadata)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_get(request, volume_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_get_with_qos_association(request, volume_type_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_list_with_qos_associations(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_type_update(request, volume_type_id, name=None, description=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_unmanage(request, volume_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_update(request, volume_id, name, description)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.cinder.volume_upload_to_image(request, volume_id, force, image_name, container_format, disk_format)
.UNINDENT
.SS The \fBopenstack_dashboard.api.network_base\fP Module
.sp
Abstraction layer for networking functionalities.
.sp
This module defines internal APIs for duplicated features between OpenStack
Compute and OpenStack Networking. The networking abstraction layer expects
methods defined in this module.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.network_base.FloatingIpManager
Bases: \fBobject\fP
.sp
Abstract class to implement Floating IP methods
.sp
The FloatingIP object returned from methods in this class
must contains the following attributes:
.INDENT 7.0
.IP \(bu 2
id: ID of Floating IP
.IP \(bu 2
ip: Floating IP address
.IP \(bu 2
pool: ID of Floating IP pool from which the address is allocated
.IP \(bu 2
fixed_ip: Fixed IP address of a VIF associated with the address
.IP \(bu 2
.INDENT 2.0
.TP
.B port_id: ID of a VIF associated with the address
(instance_id when Nova floating IP is used)
.UNINDENT
.IP \(bu 2
instance_id: Instance ID of an associated with the Floating IP
.UNINDENT
.INDENT 7.0
.TP
.B allocate(pool=None)
Allocates a floating IP to the tenant.
.sp
You must provide a pool name or id for which you would like to
allocate an floating IP.
.UNINDENT
.INDENT 7.0
.TP
.B associate(floating_ip_id, port_id)
Associates the floating IP to the port.
.sp
port_id is a fixed IP of an instance (Nova) or
a port_id attached to a VNIC of an instance.
.UNINDENT
.INDENT 7.0
.TP
.B disassociate(floating_ip_id)
Disassociates the floating IP specified.
.UNINDENT
.INDENT 7.0
.TP
.B get(floating_ip_id)
Fetches the floating IP.
.sp
It returns a FloatingIp object corresponding to floating_ip_id.
.UNINDENT
.INDENT 7.0
.TP
.B get_target_id_by_instance(instance_id, target_list=None)
Returns a target ID of floating IP association.
.sp
Based on a backend implementation.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBinstance_id\fP \-\- ID of target VM instance
.IP \(bu 2
\fBtarget_list\fP \-\- (optional) a list returned by list_targets().
If specified, looking up is done against the specified list
to save extra API calls to a back\-end. Otherwise a target
information is retrieved from a back\-end inside the method.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B is_simple_associate_supported()
Returns True if the default floating IP pool is enabled.
.UNINDENT
.INDENT 7.0
.TP
.B is_supported()
Returns True if floating IP feature is supported.
.UNINDENT
.INDENT 7.0
.TP
.B list()
Fetches a list all floating IPs.
.sp
A returned value is a list of FloatingIp object.
.UNINDENT
.INDENT 7.0
.TP
.B list_pools()
Fetches a list of all floating IP pools.
.sp
A list of FloatingIpPool objects is returned.
FloatingIpPool object is an APIResourceWrapper/APIDictWrapper
where \(aqid\(aq and \(aqname\(aq attributes are defined.
.UNINDENT
.INDENT 7.0
.TP
.B list_target_id_by_instance(instance_id, target_list=None)
Returns a list of instance\(aqs target IDs of floating IP association.
.sp
Based on the backend implementation
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBinstance_id\fP \-\- ID of target VM instance
.IP \(bu 2
\fBtarget_list\fP \-\- (optional) a list returned by list_targets().
If specified, looking up is done against the specified list
to save extra API calls to a back\-end. Otherwise target list
is retrieved from a back\-end inside the method.
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B list_targets()
Returns a list of association targets of instance VIFs.
.sp
Each association target is represented as FloatingIpTarget object.
FloatingIpTarget is a APIResourceWrapper/APIDictWrapper and
\(aqid\(aq and \(aqname\(aq attributes must be defined in each object.
FloatingIpTarget.id can be passed as port_id in associate().
FloatingIpTarget.name is displayed in Floating Ip Association Form.
.UNINDENT
.INDENT 7.0
.TP
.B release(floating_ip_id)
Releases a floating IP specified.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.network_base.SecurityGroupManager
Bases: \fBobject\fP
.sp
Abstract class to implement Security Group methods
.sp
SecurityGroup object returned from methods in this class
must contains the following attributes:
.INDENT 7.0
.IP \(bu 2
id: ID of Security Group (int for Nova, uuid for Neutron)
.IP \(bu 2
name
.IP \(bu 2
description
.IP \(bu 2
tenant_id
.IP \(bu 2
rules: A list of SecurityGroupRule objects
.UNINDENT
.sp
SecurityGroupRule object should have the following attributes
(The attribute names and their formats are borrowed from nova
security group implementation):
.INDENT 7.0
.IP \(bu 2
id
.IP \(bu 2
direction
.IP \(bu 2
ethertype
.IP \(bu 2
parent_group_id: security group the rule belongs to
.IP \(bu 2
ip_protocol
.IP \(bu 2
from_port: lower limit of allowed port range (inclusive)
.IP \(bu 2
to_port: upper limit of allowed port range (inclusive)
.IP \(bu 2
ip_range: remote IP CIDR (source for ingress, dest for egress).
The value should be a format of "{\(aqcidr\(aq: <cidr>}"
.IP \(bu 2
group: remote security group. The value should be a format of
"{\(aqname\(aq: <secgroup_name>}"
.UNINDENT
.INDENT 7.0
.TP
.B create(name, desc)
Create a new security group.
.sp
It returns a SecurityGroup object created.
.UNINDENT
.INDENT 7.0
.TP
.B delete(sg_id)
Delete the specified security group.
.UNINDENT
.INDENT 7.0
.TP
.B get(sg_id)
Fetches the security group.
.sp
It returns a SecurityGroup object corresponding to sg_id.
.UNINDENT
.INDENT 7.0
.TP
.B list()
Fetches a list all security groups.
.sp
A returned value is a list of SecurityGroup object.
.UNINDENT
.INDENT 7.0
.TP
.B list_by_instance(instance_id)
Get security groups of an instance.
.UNINDENT
.INDENT 7.0
.TP
.B rule_create(parent_group_id, direction=None, ethertype=None, ip_protocol=None, from_port=None, to_port=None, cidr=None, group_id=None)
Create a new security group rule.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBparent_group_id\fP \-\- security group id a rule is created to
.IP \(bu 2
\fBdirection\fP \-\- ingress or egress
.IP \(bu 2
\fBethertype\fP \-\- ipv4, ipv6, ...
.IP \(bu 2
\fBip_protocol\fP \-\- tcp, udp, icmp
.IP \(bu 2
\fBfrom_port\fP \-\- L4 port range min
.IP \(bu 2
\fBto_port\fP \-\- L4 port range max
.IP \(bu 2
\fBcidr\fP \-\- Source IP CIDR
.IP \(bu 2
\fBgroup_id\fP \-\- ID of Source Security Group
.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B rule_delete(sgr_id)
Delete the specified security group rule.
.UNINDENT
.INDENT 7.0
.TP
.B update_instance_security_group(instance_id, new_security_group_ids)
Update security groups of a specified instance.
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.glance\fP Module
.sp
API for the glance service.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.glance.Image(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for retrieving a single image
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific image
.sp
\fI\%http://localhost/api/glance/images/cc758c90\-3d98\-4ea1\-af44\-aab405c9c915\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqglance/images/(?P<image_id>[^/]+|default)/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.glance.ImageProperties(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for retrieving only a custom properties of single image.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get custom properties of specific image.
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update custom properties of specific image.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqglance/images/(?P<image_id>[^/]+)/properties/\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.glance.Images(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for Glance images.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of images.
.sp
The listing result is an object with property "items". Each item is
an image.
.sp
Example GET:
\fI\%http://localhost/api/glance/images?sort_dir=desc&sort_key=name&name=cirros\-0.3.2\-x86_64\-uec\fP  #flake8: noqa
.sp
The following get parameters may be passed in the GET
request:
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBpaginate\fP \-\- If true will perform pagination based on settings.
.IP \(bu 2
\fBmarker\fP \-\- Specifies the namespace of the last\-seen image.
The typical pattern of limit and marker is to make an
initial limited request and then to use the last
namespace from the response as the marker parameter
in a subsequent limited request. With paginate, limit
is automatically set.
.IP \(bu 2
\fBsort_dir\fP \-\- The sort direction (\(aqasc\(aq or \(aqdesc\(aq).
.IP \(bu 2
\fBsort_key\fP \-\- The field to sort on (for example, \(aqcreated_at\(aq).
Default is created_at.
.UNINDENT
.UNINDENT
.sp
Any additional request parameters will be passed through the API as
filters. There are v1/v2 complications which are being addressed as a
separate work stream: \fI\%https://review.openstack.org/#/c/150084/\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqglance/images/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.glance.MetadefsNamespaces(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for Single Glance Metadata Definitions.
.sp
\fI\%http://docs.openstack.org/developer/glance/metadefs\-concepts.html\fP
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of metadata definition namespaces.
.sp
The listing result is an object with property "items". Each item is
a namespace.
.sp
Example GET:
\fI\%http://localhost/api/glance/metadefs/namespaces?resource_types=OS::Nova::Flavor&sort_dir=desc&marker=OS::Compute::Watchdog&paginate=False&sort_key=namespace\fP  #flake8: noqa
.sp
The following get parameters may be passed in the GET
request:
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBresource_type\fP \-\- Namespace resource type.
If specified returned namespace properties will have prefixes
proper for selected resource type.
.IP \(bu 2
\fBpaginate\fP \-\- If true will perform pagination based on settings.
.IP \(bu 2
\fBmarker\fP \-\- Specifies the namespace of the last\-seen namespace.
The typical pattern of limit and marker is to make an
initial limited request and then to use the last
namespace from the response as the marker parameter
in a subsequent limited request. With paginate, limit
is automatically set.
.IP \(bu 2
\fBsort_dir\fP \-\- The sort direction (\(aqasc\(aq or \(aqdesc\(aq).
.IP \(bu 2
\fBsort_key\fP \-\- The field to sort on (for example, \(aqcreated_at\(aq).
Default is namespace. The way base namespaces are loaded into
glance typically at first deployment is done in a single
transaction giving them a potentially unpredictable sort result
when using create_at.
.UNINDENT
.UNINDENT
.sp
Any additional request parameters will be passed through the API as
filters.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqglance/metadefs/namespaces/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.heat\fP Module
.sp
API for the heat service.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.heat.Validate(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for validating a template
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Validate a template
.sp
The following parameters may be passed in the POST
application/json object. The parameters are:
request:
.INDENT 7.0
.TP
.B Parameters
\fBtemplate_url\fP \-\- The template to validate
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqheat/validate/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.network\fP Module
.sp
API for the network abstraction APIs.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.network.SecurityGroups(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for Network Abstraction
.sp
Handles differences between Nova and Neutron.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of security groups.
.sp
The listing result is an object with property "items". Each item is
an image.
.sp
Example GET:
\fI\%http://localhost/api/network/securitygroups\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnetwork/securitygroups/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest\fP Module
.sp
This package holds the REST API that supports the Horizon dashboard
Javascript code.
.sp
It is not intended to be used outside of Horizon, and makes no promises of
stability or fitness for purpose outside of that scope.
.sp
It does not promise to adhere to the general OpenStack API Guidelines set out
in \fI\%https://wiki.openstack.org/wiki/APIChangeGuidelines\fP\&.
.SS The \fBopenstack_dashboard.api.rest.json_encoder\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.json_encoder.NaNJSONEncoder(nan_str=\(aqNaN\(aq, inf_str=\(aq1e+999\(aq, **kwargs)
Bases: \fBjson.encoder.JSONEncoder\fP
.INDENT 7.0
.TP
.B iterencode(o, _one_shot=False)
The sole purpose of defining a custom JSONEncoder class is to
override floatstr() inner function, or more specifically the
representation of NaN and +/\-float(\(aqinf\(aq) values in a JSON. Although
Infinity values are not supported by JSON standard, we still can
convince Javascript JSON.parse() to create a Javascript Infinity
object if we feed a token \fI1e+999\fP to it.
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.urls\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.api.rest.urls.register(view)
Register API views to respond to a regex pattern (url_regex on the
view class).
.sp
The view should be a standard Django class\-based view implementing an
as_view() method. The url_regex attribute of the view should be a standard
Django URL regex pattern.
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.neutron\fP Module
.sp
API over the neutron service.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.neutron.Networks(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for Neutron Networks
.sp
\fI\%http://developer.openstack.org/api\-ref\-networking\-v2.html\fP
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of networks for a project
.sp
The listing result is an object with property "items".  Each item is
a network.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a network
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fB(optional)\fP (\fItenant_id\fP) \-\- The administrative state of the
network, which is up (true) or down (false).
.IP \(bu 2
\fB(optional)\fP \-\- The network name. A request body is optional:
If you include it, it can specify this optional attribute.
.IP \(bu 2
\fB(optional)\fP \-\- network profile id
.IP \(bu 2
\fB(optional)\fP \-\- Indicates whether this network is shared
across all tenants. By default, only administrative users can
change this value.
.IP \(bu 2
\fB(optional)\fP \-\- .INDENT 2.0
.TP
.B Admin\-only. The UUID of the tenant that
will own the network. This tenant can be different from the
tenant that makes the create network request. However, only
administrative users can specify a tenant ID other than their
own. You cannot change this value through authorization
policies.
.UNINDENT
.INDENT 2.0
.TP
.B return
JSON representation of a Network
.UNINDENT

.UNINDENT
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqneutron/networks/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.neutron.Ports(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for Neutron Ports
\fI\%http://developer.openstack.org/api\-ref\-networking\-v2.html#ports\fP
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of ports for a network
.sp
The listing result is an object with property "items".  Each item is
a subnet.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqneutron/ports/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.neutron.Subnets(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for Neutron SubNets
\fI\%http://developer.openstack.org/api\-ref\-networking\-v2.html#subnets\fP
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of subnets for a project
.sp
The listing result is an object with property "items".  Each item is
a subnet.
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a Subnet for a given Network
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fB(optional)\fP (\fIenable_dhcp\fP) \-\- The subnet name.
.IP \(bu 2
\fBnetwork_id\fP \-\- The ID of the attached network.
.IP \(bu 2
\fB(optional)\fP \-\- The ID of the tenant who owns the network.
Only administrative users can specify a tenant ID other than
their own.
.IP \(bu 2
\fB(optional)\fP \-\- The start and end addresses for the
allocation pools.
.IP \(bu 2
\fB(optional)\fP \-\- The gateway IP address.
.IP \(bu 2
\fBip_version\fP \-\- The IP version, which is 4 or 6.
.IP \(bu 2
\fBcidr\fP \-\- The CIDR.
.IP \(bu 2
\fB(optional)\fP \-\- The ID of the subnet.
.IP \(bu 2
\fB(optional)\fP \-\- Set to true if DHCP is enabled and false
if DHCP is disabled.
.UNINDENT
.TP
.B Returns
JSON representation of a Subnet
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqneutron/subnets/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.nova\fP Module
.sp
API over the nova service.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.AggregateExtraSpecs(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for managing aggregate extra specs
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific aggregate\(aqs extra specs
.sp
Example GET:
\fI\%http://localhost/api/nova/flavors/1/extra\-specs\fP
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update a specific aggregate\(aqs extra specs.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/aggregates/(?P<aggregate_id>[^/]+)/extra\-specs/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.AvailabilityZones(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for nova availability zones.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of availability zones.
.sp
The following get parameters may be passed in the GET
request:
.INDENT 7.0
.TP
.B Parameters
\fBdetailed\fP \-\- If this equals "true" then the result will
include more detail.
.UNINDENT
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/availzones/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Extensions(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for nova extensions.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of extensions.
.sp
The listing result is an object with property "items". Each item is
an image.
.sp
Example GET:
\fI\%http://localhost/api/nova/extensions\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/extensions/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Flavor(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for retrieving a single flavor
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific flavor
.INDENT 7.0
.TP
.B Parameters
\fBget_extras\fP \-\- Also retrieve the extra specs.
.UNINDENT
.sp
Example GET:
\fI\%http://localhost/api/nova/flavors/1\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/flavors/(?P<flavor_id>[^/]+)/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.FlavorExtraSpecs(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for managing flavor extra specs
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific flavor\(aqs extra specs
.sp
Example GET:
\fI\%http://localhost/api/nova/flavors/1/extra\-specs\fP
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update a specific flavor\(aqs extra specs.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/flavors/(?P<flavor_id>[^/]+)/extra\-specs/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Flavors(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for nova flavors.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of flavors.
.sp
The listing result is an object with property "items". Each item is
an flavor. By default this will return the flavors for the user\(aqs
current project. If the user is admin, public flavors will also be
returned.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBis_public\fP \-\- For a regular user, set to True to see all public
flavors. For an admin user, set to False to not see public flavors.
.IP \(bu 2
\fBget_extras\fP \-\- Also retrieve the extra specs.
.UNINDENT
.UNINDENT
.sp
Example GET:
\fI\%http://localhost/api/nova/flavors?is_public=true\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/flavors/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Keypairs(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for nova keypairs.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of keypairs associated with the current logged\-in
account.
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a keypair.
.sp
Create a keypair using the parameters supplied in the POST
application/json object. The parameters are:
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP \-\- the name to give the keypair
.IP \(bu 2
\fBpublic_key\fP \-\- (optional) a key to import
.UNINDENT
.UNINDENT
.sp
This returns the new keypair object on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/keypairs/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Limits(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for nova limits.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get an object describing the current project limits.
.sp
Note: the Horizon API doesn\(aqt support any other project (tenant) but
the underlying client does...
.sp
The following get parameters may be passed in the GET
request:
.INDENT 7.0
.TP
.B Parameters
\fBreserved\fP \-\- This may be set to "true" but it\(aqs not
clear what the result of that is.
.UNINDENT
.sp
The result is an object with limits as properties.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/limits/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Server(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for retrieving a single server
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific server
.sp
\fI\%http://localhost/api/nova/servers/1\fP
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/servers/(?P<server_id>.+|default)$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.nova.Servers(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API over all servers.
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a server.
.sp
Create a server using the parameters supplied in the POST
application/json object. The required parameters as specified by
the underlying novaclient are:
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBname\fP \-\- The new server name.
.IP \(bu 2
\fBsource_id\fP \-\- The ID of the image to use.
.IP \(bu 2
\fBflavor_id\fP \-\- The ID of the flavor to use.
.IP \(bu 2
\fBkey_name\fP \-\- (optional extension) name of previously created
keypair to inject into the instance.
.IP \(bu 2
\fBuser_data\fP \-\- user data to pass to be exposed by the metadata
server this can be a file type object as well or a
string.
.IP \(bu 2
\fBsecurity_groups\fP \-\- An array of one or more objects with a "name"
attribute.
.UNINDENT
.UNINDENT
.sp
Other parameters are accepted as per the underlying novaclient:
"block_device_mapping", "block_device_mapping_v2", "nics", "meta",
"availability_zone", "instance_count", "admin_pass", "disk_config",
"config_drive"
.sp
This returns the new server object on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqnova/servers/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.keystone\fP Module
.sp
API over the keystone service.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Domain(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API over a single domains.
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete a single domain by id.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific domain by id.
.sp
If the id supplied is \(aqdefault\(aq then the default domain will be
returned, otherwise the domain specified by the id.
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update a single domain.
.sp
The PATCH data should be an application/json object with the attributes
to set to new values: "name" (string), "description" (string) and
"enabled" (boolean).
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/domains/(?P<id>[0\-9a\-f]+|default)$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Domains(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API over all domains.
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete multiple domains by id.
.INDENT 7.0
.TP
.B The DELETE data should be an application/json array of domain ids to
delete.
.UNINDENT
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of domains.
.sp
A listing of all domains are returned.
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Perform some action on the collection of domains.
.sp
This action creates a domain using parameters supplied in the POST
application/json object. The "name" (string) parameter is required,
others are optional: "description" (string) and "enabled" (boolean,
defaults to true).
.sp
This method returns the new domain object on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/domains/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Project(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API over a single project.
.sp
Note that in the following "project" is used exclusively where in the
underlying keystone API the terms "project" and "tenant" are used
interchangeably.
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete a single project by id.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific project by id.
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update a single project.
.sp
The PATCH data should be an application/json object with  the
attributes to set to new values: "name" (string),  "description"
(string), "domain_id" (string) and "enabled" (boolean). Additional,
undefined parameters may also be provided, but you\(aqll have to look
deep into keystone to figure out what they might be.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/projects/(?P<id>[0\-9a\-f]+)$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.ProjectRole(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B put(request, *args, **kw)
Grant the specified role to the user in the project (tenant).
.sp
This method takes no data.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/projects/(?P<project_id>[0\-9a\-f]+)/(?P<role_id>[0\-9a\-f]+)/(?P<user_id>[0\-9a\-f]+)$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Projects(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API over all projects.
.sp
Note that in the following "project" is used exclusively where in the
underlying keystone API the terms "project" and "tenant" are used
interchangeably.
.INDENT 7.0
.TP
.B client_keywords = set([\(aqadmin\(aq, \(aqmarker\(aq, \(aqpaginate\(aq, \(aquser_id\(aq, \(aqdomain_id\(aq])
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete multiple projects by id.
.sp
The DELETE data should be an application/json array of project ids to
delete.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of projects.
.sp
By default a listing of all projects for the current domain are
returned.
.sp
You may specify GET parameters for domain_id (string), user_id
(string) and admin (boolean) to change that listing\(aqs context.
Additionally, paginate (boolean) and marker may be used to get
paginated listings.
.sp
The listing result is an object with properties:
.INDENT 7.0
.TP
.B items
The list of project objects.
.TP
.B has_more
Boolean indicating there are more results when pagination is used.
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a project (tenant).
.sp
Create a project using parameters supplied in the POST
application/json object. The "name" (string) parameter is required,
others are optional: "description" (string), "domain_id" (string) and
"enabled" (boolean, defaults to true). Additional, undefined
parameters may also be provided, but you\(aqll have to look deep into
keystone to figure out what they might be.
.sp
This method returns the new project object on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/projects/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Role(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for a single role.
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete a single role by id.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific role by id.
.sp
If the id supplied is \(aqdefault\(aq then the default role will be
returned, otherwise the role specified by the id.
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update a single role.
.sp
The PATCH data should be an application/json object with the "name"
attribute to update.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/roles/(?P<id>[0\-9a\-f]+|default)$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Roles(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API over all roles.
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete multiple roles by id.
.INDENT 7.0
.TP
.B The DELETE data should be an application/json array of role ids to
delete.
.UNINDENT
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of roles.
.sp
By default a listing of all roles are returned.
.sp
If the GET parameters project_id and user_id are specified then that
user\(aqs roles for that project are returned. If user_id is \(aqcurrent\(aq
then the current user\(aqs roles for that project are returned.
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a role.
.sp
Create a role using the "name" (string) parameter supplied in the POST
application/json object.
.sp
This method returns the new role object on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/roles/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.ServiceCatalog(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Return the Keystone service catalog associated with the current
user.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/svc\-catalog/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.User(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for a single keystone user.
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete a single user by id.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a specific user by id.
.sp
If the id supplied is \(aqcurrent\(aq then the current logged\-in user
will be returned, otherwise the user specified by the id.
.UNINDENT
.INDENT 7.0
.TP
.B patch(request, *args, **kw)
Update a single user.
.sp
The PATCH data should be an application/json object with attributes to
set to new values: password (string), project (string),
enabled (boolean).
.sp
A PATCH may contain any one of those attributes, but
if it contains more than one it must contain the project, even
if it is not being altered.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/users/(?P<id>[0\-9a\-f]+|current)$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.UserSession(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for a single keystone user.
.INDENT 7.0
.TP
.B allowed_fields = set([\(aqusername\(aq, \(aqproject_name\(aq, \(aquser_domain_id\(aq, \(aqroles\(aq, \(aqservices_region\(aq, \(aquser_domain_name\(aq, \(aqenabled\(aq, \(aqdomain_name\(aq, \(aqdomain_id\(aq, \(aqavailable_services_regions\(aq, \(aqis_superuser\(aq, \(aqproject_id\(aq, \(aqid\(aq])
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get the current user session.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/user\-session/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Users(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for keystone users.
.INDENT 7.0
.TP
.B client_keywords = set([\(aqproject_id\(aq, \(aqgroup_id\(aq, \(aqdomain_id\(aq])
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, *args, **kw)
Delete multiple users by id.
.sp
The DELETE data should be an application/json array of user ids to
delete.
.sp
This method returns HTTP 204 (no content) on success.
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a list of users.
.sp
By default, a listing of all users for the current domain are
returned. You may specify GET parameters for project_id, domain_id and
group_id to change that listing\(aqs context.
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Create a user.
.sp
Create a user using the parameters supplied in the POST
application/json object. The base parameters are name (string), email
(string, optional), password (string, optional), project_id (string,
optional), enabled (boolean, defaults to true). The user will be
created in the default domain.
.sp
This action returns the new user object on success.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/users/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.keystone.Version(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for active keystone version.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get active keystone version.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqkeystone/version/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.utils\fP Module
.INDENT 0.0
.TP
.B exception openstack_dashboard.api.rest.utils.AjaxError(http_status, msg)
Bases: \fBexceptions.Exception\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.utils.CreatedResponse(location, data=None)
Bases: \fBdjango.http.response.HttpResponse\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.utils.JSONResponse(data, status=200, json_encoder=<class \(aqjson.encoder.JSONEncoder\(aq>)
Bases: \fBdjango.http.response.HttpResponse\fP
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.rest.utils.ajax(authenticated=True, data_required=False, json_encoder=<class \(aqjson.encoder.JSONEncoder\(aq>)
Provide a decorator to wrap a view method so that it may exist in an
entirely AJAX environment:
.INDENT 7.0
.IP \(bu 2
data decoded from JSON as input and data coded as JSON as output
.IP \(bu 2
result status is coded in the HTTP status code; any non\-2xx response
data will be coded as a JSON string, otherwise the response type (always
JSON) is specific to the method called.
.UNINDENT
.sp
if authenticated is true then we\(aqll make sure the current user is
authenticated.
.sp
If data_required is true then we\(aqll assert that there is a JSON body
present.
.sp
The wrapped view method should return either:
.INDENT 7.0
.IP \(bu 2
JSON serialisable data
.IP \(bu 2
an object of the django http.HttpResponse subclass (one of JSONResponse
or CreatedResponse is suggested)
.IP \(bu 2
nothing
.UNINDENT
.sp
Methods returning nothing (or None explicitly) will result in a 204 "NO
CONTENT" being returned to the caller.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.api.rest.utils.parse_filters_kwargs(request, client_keywords={})
Extract REST filter parameters from the request GET args.
.sp
Client processes some keywords separately from filters and takes
them as separate inputs. This will ignore those keys to avoid
potential conflicts.
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.config\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.config.Settings(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for retrieving settings.
.sp
This API returns read\-only settings values.
This configuration object can be fetched as needed.
Examples of settings: OPENSTACK_HYPERVISOR_FEATURES
.INDENT 7.0
.TP
.B get(request, *args, **kw)
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqsettings/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.policy\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.policy.Policy(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for interacting with the policy engine.
.INDENT 7.0
.TP
.B post(request, *args, **kw)
Check policy rules.
.sp
Check the group of policy rules supplied in the POST
application/json object. The policy target, if specified will also be
passed in to the policy check method as well.
.sp
The action returns an object with one key: "allowed" and the value
is the result of the policy check, True or False.
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqpolicy/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.api.rest.cinder\fP Module
.sp
API over the cinder service.
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.cinder.VolumeSnapshots(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for cinder volume snapshots.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a detailed list of volume snapshots associated with the current
user\(aqs project.
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqcinder/volumesnapshots/$\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.api.rest.cinder.Volumes(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.sp
API for cinder volumes.
.INDENT 7.0
.TP
.B get(request, *args, **kw)
Get a detailed list of volumes associated with the current user\(aqs
project.
.sp
If invoked as an admin, you may set the GET parameter "all_projects"
to \(aqtrue\(aq.
.sp
The following get parameters may be passed in the GET
.sp
:param search_opts includes options such as name, status, bootable
.sp
The listing result is an object with property "items".
.UNINDENT
.INDENT 7.0
.TP
.B url_regex = \(aqcinder/volumes/$\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.templatetags\fP Module
.SS The \fBopenstack_dashboard.templatetags.context_selection\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.iframe_embed_settings(context)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.is_multi_region(context)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.is_multi_region_configured(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.is_multidomain()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.is_multidomain_supported()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.show_domain_list(context)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.show_overview(context)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.show_project_list(context)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.templatetags.context_selection.show_region_list(context)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.dashboard\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.dashboard.Identity(*args, **kwargs)
Bases: \fBhorizon.base.Dashboard\fP
.INDENT 7.0
.TP
.B default_panel = \(aqprojects\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8f91e90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqidentity\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.roles.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateRoleForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_role_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85343d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8534890>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b8534810>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b8534290>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b8534750>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/roles/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b7c01090>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBRolesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/roles/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateRoleForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_role_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85349d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85346d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b8534550>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:identity:roles:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b8534590>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/roles/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.roles\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.roles.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.roles.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.tables.CreateRoleLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, role)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.roles.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:create_role\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8066f50>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:identity:roles:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8082d50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:create_role\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:roles:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8082d50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.tables.DeleteRolesAction(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, role)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.roles.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:delete_role\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b869b938>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b86bc210>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b80df6a8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b88385f0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:delete_role\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.tables.EditRoleLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, role)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.roles.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_role\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8066ed8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:identity:roles:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b81f5910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_role\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:roles:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b81f5910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.tables.RoleFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.roles.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b8ba3938>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, roles, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.tables.RolesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqroles\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.identity.roles.tables.EditRoleLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.roles.tables.DeleteRolesAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.roles.tables.RoleFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.roles.tables.CreateRoleLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.roles.tables.DeleteRolesAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b88ce350>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RolesTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateRoleLink: create>), (\(aqdelete\(aq, <DeleteRolesAction: delete>), (\(aqedit\(aq, <EditRoleLink: edit>), (\(aqfilter\(aq, <RoleFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B RolesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqid\(aq, <Column: id>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.roles.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.panel.Roles
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B static can_register()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b84a7290>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_roles\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqroles\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.roles.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.forms.CreateRoleForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b89704d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b89704d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.roles.forms.UpdateRoleForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b89709d0>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8970050>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b89709d0>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8970050>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.domains.constants\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.domains.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.views.CreateDomainView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateDomain\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb2147d0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBDomainsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/domains/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.views.UpdateDomainView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateDomain\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.domains\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.domains.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.domains.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.CreateDomainLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, domain)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:create_domain\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8b3de60>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:identity:domains:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8604410>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:create_domain\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:domains:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8604410>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.DeleteDomainsAction(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:delete_domain\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b89a5410>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b863fb08>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b863fa98>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b89a5d70>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:delete_domain\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.DisableDomainsAction(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_domain\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b89a5c80>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqdisable\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b863f130>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b863f718>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b89a5848>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8604a10>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdisable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_domain\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8604a10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.DomainFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b89a5b90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b884ced8>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, domains, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.DomainsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqdomains\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.identity.domains.tables.SetDomainContext\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.UpdateUsersLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.UpdateGroupsLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.EditDomainLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.EnableDomainsAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.DisableDomainsAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.DeleteDomainsAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.domains.tables.DomainFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.CreateDomainLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.DeleteDomainsAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.UnsetDomainContext\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions_menu = (<class \(aqopenstack_dashboard.dashboards.identity.domains.tables.EnableDomainsAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.tables.DisableDomainsAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b86396d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B DomainsTable.base_actions = OrderedDict([(\(aqclear_domain_context\(aq, <UnsetDomainContext: clear_domain_context>), (\(aqcreate\(aq, <CreateDomainLink: create>), (\(aqdelete\(aq, <DeleteDomainsAction: delete>), (\(aqdisable\(aq, <DisableDomainsAction: disable>), (\(aqedit\(aq, <EditDomainLink: edit>), (\(aqenable\(aq, <EnableDomainsAction: enable>), (\(aqfilter\(aq, <DomainFilterAction: filter>), (\(aqgroups\(aq, <UpdateGroupsLink: groups>), (\(aqset_domain_context\(aq, <SetDomainContext: set_domain_context>), (\(aqusers\(aq, <UpdateUsersLink: users>)])
.UNINDENT
.INDENT 7.0
.TP
.B DomainsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqid\(aq, <Column: id>), (\(aqenabled\(aq, <Column: enabled>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.EditDomainLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, domain)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_domain\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8b3dd70>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:identity:domains:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b86048d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_domain\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:domains:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b86048d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.EnableDomainsAction(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_domain\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b89a50c8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqenable\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d2a3d0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b86f4fa0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b89a5b18>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8604d10>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqenable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_domain\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8604d10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.SetDomainContext(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqadmin_required\(aq),), \(aqsingle\(aq: <function single at 0x7ff3b884caa0>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b884ce60>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aqname\(aq: \(aqset_domain_context\(aq, \(aqurl\(aq: \(aqhorizon:identity:domains:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqpreempt\(aq: True, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8604cd0>, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqset_domain_context\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqadmin_required\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B preempt = True
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:domains:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8604cd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.UnsetDomainContext(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqrequires_input\(aq: False, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqadmin_required\(aq),), \(aqsingle\(aq: <function single at 0x7ff3b884c488>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b884c500>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aqname\(aq: \(aqclear_domain_context\(aq, \(aqurl\(aq: \(aqhorizon:identity:domains:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqpreempt\(aq: True, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8639a50>, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqclear_domain_context\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqadmin_required\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B preempt = True
.UNINDENT
.INDENT 7.0
.TP
.B requires_input = False
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:domains:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8639a50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.UpdateGroupsLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8b3d2a8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqgroups\(aq, \(aqurl\(aq: \(aqhorizon:identity:domains:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8604c10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(domain)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqgroups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:domains:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8604c10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.tables.UpdateUsersLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.domains.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:list_users\(aq), (\(aqidentity\(aq, \(aqidentity:list_roles\(aq), (\(aqidentity\(aq, \(aqidentity:list_role_assignments\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8b3ded8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqusers\(aq, \(aqurl\(aq: \(aqhorizon:identity:domains:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8604b50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(domain)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqusers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_users\(aq), (\(aqidentity\(aq, \(aqidentity:list_roles\(aq), (\(aqidentity\(aq, \(aqidentity:list_role_assignments\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:domains:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8604b50>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.domains.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.CreateDomain(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.identity.domains.workflows.CreateDomainInfo\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b8c96d50>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b9516e10>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9516910>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_domain\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8c963d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:identity:domains:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.CreateDomainInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateDomainInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqdomain_id\(aq, \(aqname\(aq, \(aqdescription\(aq, \(aqenabled\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.CreateDomainInfoAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bb214fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bb214b90>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3bb214050>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bb214fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bb214b90>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3bb214050>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bb214a10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb214910>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9516250>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_domain\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomain(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainUsers\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainGroups\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bc3c4d90>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bc3c4f50>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc3c46d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_domain\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bc3c4750>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:identity:domains:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainGroups(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateDomainGroupsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b95169d0>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b95163d0>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b9516ad0>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b9516bd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainGroupsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9516ed0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9516650>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_group_members\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateDomainInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqenabled\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqdomain_id\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainInfoAction(request, context, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.domains.workflows.CreateDomainInfoAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bb214fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bb214b90>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3bb214050>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bb214fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bb214b90>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3bb214050>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b8c960d0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8c96110>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bc3c4ad0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_domain\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainUsers(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateDomainUsersAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9516110>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9516d10>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b9516350>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b9516e90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.workflows.UpdateDomainUsersAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b95160d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9516a10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_user_members\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.domains.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.domains.panel.Domains
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B static can_register()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b85d0cd0>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:get_domain\(aq), (\(aqidentity\(aq, \(aqidentity:list_domains\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdomains\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.projects.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.views.CreateProjectView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateProject\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.views.DetailProjectView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8092610>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBTenantsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.views.ProjectUsageView(*args, **kwargs)
Bases: \fBopenstack_dashboard.usage.views.UsageView\fP
.INDENT 7.0
.TP
.B csv_response_class
alias of \fBProjectUsageCsvRenderer\fP
.UNINDENT
.INDENT 7.0
.TP
.B csv_template_name = \(aqproject/overview/usage.csv\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8092650>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBProjectUsageTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/usage.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B usage_class
alias of \fBProjectUsage\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.views.TenantContextMixin
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.views.UpdateProjectView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateProject\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.projects\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.projects.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.projects.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.CreateProject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, project)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:create_project\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b81df5f0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:identity:projects:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6610>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:create_project\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:projects:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.DeleteTenantsAction(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, project)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3b81df938>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:delete_project\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b81df848>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b80dffa0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b80df9f0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b81df8c0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B handle(table, request, obj_ids)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:delete_project\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.ModifyQuotas(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:quotas:update\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b81df6e0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqquotas\(aq, \(aqurl\(aq: \(aqhorizon:identity:projects:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa67d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqquotas\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:quotas:update\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:projects:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa67d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.RescopeTokenToProject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, project)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b81df398>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b81df320>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqrescope\(aq, \(aqurl\(aq: \(aqswitch_tenants\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6490>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrescope\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqswitch_tenants\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6490>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.TenantFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b81df9b0>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, tenants, filter_string)
Really naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.TenantsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqtenants\(aq
.UNINDENT
.INDENT 7.0
.TP
.B pagination_param = \(aqtenant_marker\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.identity.projects.tables.UpdateMembersLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.UpdateGroupsLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.UpdateProject\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.UsageLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.ModifyQuotas\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.DeleteTenantsAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.RescopeTokenToProject\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.projects.tables.TenantFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.CreateProject\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.tables.DeleteTenantsAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8bbb1d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B TenantsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateProject: create>), (\(aqdelete\(aq, <DeleteTenantsAction: delete>), (\(aqfilter\(aq, <TenantFilterAction: filter>), (\(aqgroups\(aq, <UpdateGroupsLink: groups>), (\(aqquotas\(aq, <ModifyQuotas: quotas>), (\(aqrescope\(aq, <RescopeTokenToProject: rescope>), (\(aqupdate\(aq, <UpdateProject: update>), (\(aqusage\(aq, <UsageLink: usage>), (\(aqusers\(aq, <UpdateMembersLink: users>)])
.UNINDENT
.INDENT 7.0
.TP
.B TenantsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqid\(aq, <Column: id>), (\(aqenabled\(aq, <Column: enabled>)])
.UNINDENT
.INDENT 7.0
.TP
.B TenantsTable.get_project_detail_link(project)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.UpdateCell
Bases: \fBhorizon.tables.actions.UpdateAction\fP
.INDENT 7.0
.TP
.B allowed(request, project, cell)
.UNINDENT
.INDENT 7.0
.TP
.B update_cell(request, datum, project_id, cell_name, new_cell_value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.UpdateGroupsLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, project)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:list_groups\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b81df500>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b81df488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqgroups\(aq, \(aqurl\(aq: \(aqhorizon:identity:projects:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6050>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqgroups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_groups\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:projects:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6050>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.UpdateMembersLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:list_users\(aq), (\(aqidentity\(aq, \(aqidentity:list_roles\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b81df410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqusers\(aq, \(aqurl\(aq: \(aqhorizon:identity:projects:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6210>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqusers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_users\(aq), (\(aqidentity\(aq, \(aqidentity:list_roles\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:projects:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6210>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.UpdateProject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, project)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_project\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b81df668>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:identity:projects:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa61d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_project\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:projects:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa61d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, project_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.tables.UsageLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, project)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.projects.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:simple_tenant_usage:show\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b81df578>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqstats\(aq, \(aqname\(aq: \(aqusage\(aq, \(aqurl\(aq: \(aqhorizon:identity:projects:usage\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6590>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqstats\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqusage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:simple_tenant_usage:show\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:projects:usage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6590>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.projects.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.CommonQuotaWorkflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.CreateProject(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.projects.workflows.CommonQuotaWorkflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.identity.projects.workflows.CreateProjectInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectMembers\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.workflows.CreateProjectQuota\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b8090e50>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b8090dd0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8090d90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_project\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8090e10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:identity:projects:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.CreateProjectInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateProjectInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqdomain_id\(aq, \(aqdomain_name\(aq, \(aqproject_id\(aq, \(aqname\(aq, \(aqdescription\(aq, \(aqenabled\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/_common_horizontal_form.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.CreateProjectInfoAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8e10>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8f10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b80901d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b8090290>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8e10>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8f10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b80901d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b8090290>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b8090350>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8090310>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b80905d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcreateprojectinfoaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.CreateProjectQuota(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateProjectQuotaAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqmetadata_items\(aq, \(aqcores\(aq, \(aqinstances\(aq, \(aqinjected_files\(aq, \(aqinjected_file_content_bytes\(aq, \(aqram\(aq, \(aqfloating_ips\(aq, \(aqfixed_ips\(aq, \(aqsecurity_groups\(aq, \(aqsecurity_group_rules\(aq, \(aqvolumes\(aq, \(aqsnapshots\(aq, \(aqgigabytes\(aq, \(aqnetwork\(aq, \(aqsubnet\(aq, \(aqport\(aq, \(aqrouter\(aq, \(aqfloatingip\(aq, \(aqsecurity_group\(aq, \(aqsecurity_group_rule\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqproject_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/_common_horizontal_form.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.CreateProjectQuotaAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.projects.workflows.ProjectQuotaAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7fe3610>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82c96d0>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa10>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa50>), (\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b87324d0>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b865c290>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8655a10>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b86552d0>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb810>), (\(aqfixed_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb950>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8002490>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9b90>), (\(aqsecurity_group\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9d10>), (\(aqsecurity_group_rule\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9e90>), (\(aqfloatingip\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8050>), (\(aqnetwork\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c81d0>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8350>), (\(aqrouter\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c84d0>), (\(aqsubnet\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7fe3610>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82c96d0>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa10>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa50>), (\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b87324d0>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b865c290>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8655a10>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b86552d0>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb810>), (\(aqfixed_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb950>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8002490>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9b90>), (\(aqsecurity_group\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9d10>), (\(aqsecurity_group_rule\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9e90>), (\(aqfloatingip\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8050>), (\(aqnetwork\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c81d0>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8350>), (\(aqrouter\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c84d0>), (\(aqsubnet\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b80c8b90>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b80c8b50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b80c8d50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_quotas\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.ProjectQuotaAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7fe3610>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82c96d0>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa10>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa50>), (\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b87324d0>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b865c290>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8655a10>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b86552d0>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb810>), (\(aqfixed_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb950>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8002490>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9b90>), (\(aqsecurity_group\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9d10>), (\(aqsecurity_group_rule\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9e90>), (\(aqfloatingip\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8050>), (\(aqnetwork\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c81d0>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8350>), (\(aqrouter\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c84d0>), (\(aqsubnet\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7fe3610>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82c96d0>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa10>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa50>), (\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b87324d0>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b865c290>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8655a10>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b86552d0>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb810>), (\(aqfixed_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb950>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8002490>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9b90>), (\(aqsecurity_group\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9d10>), (\(aqsecurity_group_rule\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9e90>), (\(aqfloatingip\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8050>), (\(aqnetwork\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c81d0>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8350>), (\(aqrouter\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c84d0>), (\(aqsubnet\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B ifcb_label = <django.utils.functional.__proxy__ object at 0x7ff3b8317f10>
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqProjectQuotaAction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b80c88d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqprojectquotaaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProject(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.projects.workflows.CommonQuotaWorkflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectMembers\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectQuota\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b80923d0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b8092350>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8092310>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_project\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8092390>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:identity:projects:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectGroups(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateProjectGroupsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b8090c10>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b8090c50>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b8090c90>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b8090cd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectGroupsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8090990>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b8090bd0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_group_members\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateProjectInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqdomain_id\(aq, \(aqdomain_name\(aq, \(aqname\(aq, \(aqdescription\(aq, \(aqenabled\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqproject_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/_common_horizontal_form.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectInfoAction(request, initial, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.projects.workflows.CreateProjectInfoAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8e10>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8f10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b80901d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b8090f50>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8e10>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8f10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b80c8fd0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b80901d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b8090f50>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b8092090>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8092050>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b80922d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_info\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectMembers(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateProjectMembersAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b8090810>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b8090850>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b8090890>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b80908d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectMembersAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8090610>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b80907d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_members\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectQuota(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateProjectQuotaAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqmetadata_items\(aq, \(aqcores\(aq, \(aqinstances\(aq, \(aqinjected_files\(aq, \(aqinjected_file_content_bytes\(aq, \(aqram\(aq, \(aqfloating_ips\(aq, \(aqfixed_ips\(aq, \(aqsecurity_groups\(aq, \(aqsecurity_group_rules\(aq, \(aqvolumes\(aq, \(aqsnapshots\(aq, \(aqgigabytes\(aq, \(aqnetwork\(aq, \(aqsubnet\(aq, \(aqport\(aq, \(aqrouter\(aq, \(aqfloatingip\(aq, \(aqsecurity_group\(aq, \(aqsecurity_group_rule\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqproject_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/projects/_common_horizontal_form.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.workflows.UpdateProjectQuotaAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.projects.workflows.ProjectQuotaAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7fe3610>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82c96d0>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa10>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa50>), (\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b87324d0>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b865c290>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8655a10>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b86552d0>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb810>), (\(aqfixed_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb950>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8002490>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9b90>), (\(aqsecurity_group\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9d10>), (\(aqsecurity_group_rule\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9e90>), (\(aqfloatingip\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8050>), (\(aqnetwork\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c81d0>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8350>), (\(aqrouter\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c84d0>), (\(aqsubnet\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7fe3610>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82c96d0>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa10>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3b82faa50>), (\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b87324d0>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b865c290>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8655a10>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3b86552d0>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb810>), (\(aqfixed_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7feb950>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8002490>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9b90>), (\(aqsecurity_group\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9d10>), (\(aqsecurity_group_rule\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80f9e90>), (\(aqfloatingip\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8050>), (\(aqnetwork\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c81d0>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8350>), (\(aqrouter\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c84d0>), (\(aqsubnet\(aq, <django.forms.fields.IntegerField object at 0x7ff3b80c8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b80c8950>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b80c8910>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b80c8b10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_quotas\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.projects.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.projects.panel.Tenants
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6890>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_projects\(aq), (\(aqidentity\(aq, \(aqidentity:list_user_projects\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqprojects\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.users.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.views.ChangePasswordView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B dispatch(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBChangePasswordForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqchange_user_password_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b78cf890>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b78cf110>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b78cf2d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:identity:users:change_password\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b78cf090>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/users/change_password.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B dispatch(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateUserForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_user_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b7b88510>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b7b88850>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b7b88310>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b7b88450>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b7b881d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/users/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.views.DetailView(**kwargs)
Bases: \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tenant(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b78cf910>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/users/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b7b88f50>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBUsersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/users/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B dispatch(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateUserForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_user_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b7b88dd0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b7b88390>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b7b88f90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:identity:users:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b7b88490>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/users/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.users\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.users.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.users.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.ChangePasswordLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, user)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aqpolicy_target_attrs\(aq: ((\(aquser_id\(aq, \(aqid\(aq),), \(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.users.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:change_password\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b79f8488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqkey\(aq, \(aqname\(aq: \(aqchange_password\(aq, \(aqurl\(aq: \(aqhorizon:identity:users:change_password\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7942910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqkey\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqchange_password\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:change_password\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aquser_id\(aq, \(aqid\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:users:change_password\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7942910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.CreateUserLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, user)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.users.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:create_grant\(aq), (\(aqidentity\(aq, \(aqidentity:create_user\(aq), (\(aqidentity\(aq, \(aqidentity:list_roles\(aq), (\(aqidentity\(aq, \(aqidentity:list_projects\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b79f8578>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:identity:users:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7942a10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:create_grant\(aq), (\(aqidentity\(aq, \(aqidentity:create_user\(aq), (\(aqidentity\(aq, \(aqidentity:list_roles\(aq), (\(aqidentity\(aq, \(aqidentity:list_projects\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:users:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7942a10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.DeleteUsersAction(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.users.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:delete_user\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b79f8050>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b87d18a0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b79f6b78>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b79f8b18>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:delete_user\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.EditUserLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, user)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aqpolicy_target_attrs\(aq: ((\(aquser_id\(aq, \(aqid\(aq),), \(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.users.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_user\(aq), (\(aqidentity\(aq, \(aqidentity:list_projects\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b79f8500>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:identity:users:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b79428d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_user\(aq), (\(aqidentity\(aq, \(aqidentity:list_projects\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aquser_id\(aq, \(aqid\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:users:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b79428d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.ToggleEnabled(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, user=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aqpolicy_target_attrs\(aq: ((\(aquser_id\(aq, \(aqid\(aq),), \(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.users.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3b79f8230>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_user\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b79f82a8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqtoggle\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7c219b8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7aecf68>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-toggle\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b79f81b8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-toggle\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqtoggle\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_user\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aquser_id\(aq, \(aqid\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B update(request, user=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.UpdateCell
Bases: \fBhorizon.tables.actions.UpdateAction\fP
.INDENT 7.0
.TP
.B allowed(request, user, cell)
.UNINDENT
.INDENT 7.0
.TP
.B update_cell(request, datum, user_id, cell_name, new_cell_value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, user_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.UserFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.users.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b79f8b90>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, users, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.tables.UsersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqusers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.identity.users.tables.EditUserLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.users.tables.ChangePasswordLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.users.tables.ToggleEnabled\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.users.tables.DeleteUsersAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.users.tables.UserFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.users.tables.CreateUserLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.users.tables.DeleteUsersAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7942410>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B UsersTable.STATUS_CHOICES = ((\(aqtrue\(aq, True), (\(aqfalse\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B UsersTable.base_actions = OrderedDict([(\(aqchange_password\(aq, <ChangePasswordLink: change_password>), (\(aqcreate\(aq, <CreateUserLink: create>), (\(aqdelete\(aq, <DeleteUsersAction: delete>), (\(aqedit\(aq, <EditUserLink: edit>), (\(aqfilter\(aq, <UserFilterAction: filter>), (\(aqtoggle\(aq, <ToggleEnabled: toggle>)])
.UNINDENT
.INDENT 7.0
.TP
.B UsersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqemail\(aq, <Column: email>), (\(aqid\(aq, <Column: id>), (\(aqenabled\(aq, <Column: enabled>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.users.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.panel.Users
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7942510>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:get_user\(aq), (\(aqidentity\(aq, \(aqidentity:list_users\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqusers\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.users.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.forms.BaseUserForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.forms.ChangePasswordForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.users.forms.PasswordMixin\fP, \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3b7b57dd0>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57ed0>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b835d850>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b849a950>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3b7b57dd0>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57ed0>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b835d850>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b849a950>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.forms.CreateUserForm(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.users.forms.PasswordMixin\fP, \fBopenstack_dashboard.dashboards.identity.users.forms.BaseUserForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3b7b57dd0>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57ed0>), (\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57f90>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b7b88090>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7b50f50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57090>), (\(aqemail\(aq, <django.forms.fields.EmailField object at 0x7ff3b7b57150>), (\(aqproject\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3b7b571d0>), (\(aqrole_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b7b57250>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b7c01710>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3b7b57dd0>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57ed0>), (\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57f90>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b7b88090>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7b50f50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57090>), (\(aqemail\(aq, <django.forms.fields.EmailField object at 0x7ff3b7b57150>), (\(aqproject\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3b7b571d0>), (\(aqrole_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b7b57250>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b7c01710>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.forms.PasswordMixin(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3b7b57dd0>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
Check to make sure password fields match.
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3b7b57dd0>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B no_autocomplete = True
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.users.forms.UpdateUserForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.users.forms.BaseUserForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b7c01150>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b7c010d0>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b7c01050>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7b979d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b835da10>), (\(aqemail\(aq, <django.forms.fields.EmailField object at 0x7ff3b835dc50>), (\(aqproject\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b835d910>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdomain_id\(aq, <django.forms.fields.CharField object at 0x7ff3b7c01150>), (\(aqdomain_name\(aq, <django.forms.fields.CharField object at 0x7ff3b7c010d0>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b7c01050>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7b979d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b835da10>), (\(aqemail\(aq, <django.forms.fields.EmailField object at 0x7ff3b835dc50>), (\(aqproject\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b835d910>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.ngusers.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.ngusers.views.IndexView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B template_name = \(aqidentity/ngusers/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.ngusers\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.ngusers.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.ngusers.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.ngusers.panel.NGUsers
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b96514d0>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:get_user\(aq), (\(aqidentity\(aq, \(aqidentity:list_users\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqngusers\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.groups.constants\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.groups.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateGroupForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_group_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3bd0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bdbf34d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3750>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3550>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b806cc90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/groups/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.views.GroupManageMixin
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3950>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBGroupsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/groups/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.views.ManageMembersView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.groups.views.GroupManageMixin\fP, \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd9bcc90>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBGroupMembersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/groups/manage.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.views.NonMembersView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.groups.views.GroupManageMixin\fP, \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B ajax_template_name = \(aqidentity/groups/_add_non_member.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBGroupNonMembersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/groups/add_non_member.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateGroupForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_group_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3610>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3350>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3590>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:identity:groups:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bdbf3910>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqidentity/groups/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.groups\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.groups.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.identity.groups.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.AddMembers(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, user=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqrequires_input\(aq: True, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:add_user_to_group\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b81a1488>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b81a1398>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddMember\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b87d1c20>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b86bcd38>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b81a1410>, \(aqsuccess_url\(aq: \(aqhorizon:identity:groups:manage_members\(aq, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddMember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:add_user_to_group\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B requires_input = True
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:identity:groups:manage_members\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.AddMembersLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, user=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:list_users\(aq), (\(aqidentity\(aq, \(aqidentity:add_user_to_group\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b81a10c8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b81a1050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqadd_user_link\(aq, \(aqurl\(aq: \(aqhorizon:identity:groups:add_members\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b81d2310>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqadd_user_link\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_users\(aq), (\(aqidentity\(aq, \(aqidentity:add_user_to_group\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:groups:add_members\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b81d2310>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.CreateGroupLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, group)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:create_group\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b818f7d0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:identity:groups:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b81d2890>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:create_group\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:groups:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b81d2890>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.DeleteGroupsAction(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:delete_group\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b818f9b0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8b94590>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b86b81d8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b818fa28>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:delete_group\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.EditGroupLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, group)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:update_group\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b818f848>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:identity:groups:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b86b3450>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:update_group\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:groups:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b86b3450>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.GroupFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b818fb18>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, groups, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.GroupMembersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.groups.tables.UsersTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqgroup_members\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.groups.tables.UserFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.AddMembersLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.RemoveMembers\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8312d90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B GroupMembersTable.base_actions = OrderedDict([(\(aqadd_user_link\(aq, <AddMembersLink: add_user_link>), (\(aqfilter\(aq, <UserFilterAction: filter>), (\(aqremoveGroupMember\(aq, <RemoveMembers: removeGroupMember>)])
.UNINDENT
.INDENT 7.0
.TP
.B GroupMembersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqemail\(aq, <Column: email>), (\(aqid\(aq, <Column: id>), (\(aqenabled\(aq, <Column: enabled>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.GroupNonMembersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.identity.groups.tables.UsersTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqgroup_non_members\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.groups.tables.UserFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.AddMembers\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8256590>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B GroupNonMembersTable.base_actions = OrderedDict([(\(aqaddMember\(aq, <AddMembers: addMember>), (\(aqfilter\(aq, <UserFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B GroupNonMembersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqemail\(aq, <Column: email>), (\(aqid\(aq, <Column: id>), (\(aqenabled\(aq, <Column: enabled>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.GroupsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqgroups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.identity.groups.tables.ManageUsersLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.EditGroupLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.DeleteGroupsAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.identity.groups.tables.GroupFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.CreateGroupLink\(aq>, <class \(aqopenstack_dashboard.dashboards.identity.groups.tables.DeleteGroupsAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b81d29d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B GroupsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateGroupLink: create>), (\(aqdelete\(aq, <DeleteGroupsAction: delete>), (\(aqedit\(aq, <EditGroupLink: edit>), (\(aqfilter\(aq, <GroupFilterAction: filter>), (\(aqusers\(aq, <ManageUsersLink: users>)])
.UNINDENT
.INDENT 7.0
.TP
.B GroupsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqid\(aq, <Column: id>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.ManageUsersLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:get_group\(aq), (\(aqidentity\(aq, \(aqidentity:list_users\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b818faa0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqusers\(aq, \(aqurl\(aq: \(aqhorizon:identity:groups:manage_members\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b86b3610>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqusers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:get_group\(aq), (\(aqidentity\(aq, \(aqidentity:list_users\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:identity:groups:manage_members\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b86b3610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.RemoveMembers(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, user=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqidentity\(aq, \(aqidentity:remove_user_from_group\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b818fed8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqremoveGroupMember\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b87d1b40>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b87d1d38>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b818ff50>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bea06e60>}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqremoveGroupMember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:remove_user_from_group\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.UserFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.identity.groups.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b818fd70>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, users, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.tables.UsersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqemail\(aq, <Column: email>), (\(aqid\(aq, <Column: id>), (\(aqenabled\(aq, <Column: enabled>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.groups.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.panel.Groups
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B static can_register()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b81cce50>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_groups\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqgroups\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.identity.groups.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.forms.CreateGroupForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8229510>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8229c90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8229510>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8229c90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.identity.groups.forms.UpdateGroupForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqgroup_id\(aq, <django.forms.fields.CharField object at 0x7ff3b8229f90>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8229f50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8229c10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqgroup_id\(aq, <django.forms.fields.CharField object at 0x7ff3b8229f90>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8229f50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8229c10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.models\fP Module
.sp
Stub file to work around django bug: \fI\%https://code.djangoproject.com/ticket/7198\fP
.SS The \fBopenstack_dashboard.dashboards.project\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.dashboard\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.dashboard.Project(*args, **kwargs)
Bases: \fBhorizon.base.Dashboard\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc168c50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqproject\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.ChangeTemplateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3810>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBChangeTemplateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqchange_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85a3b50>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85a3690>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b85a3850>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:stacks:change_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3610>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/change_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.CreateStackView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateStackForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqlaunch_stack\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B load_kwargs(initial)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85a33d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85a3450>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b85a3a50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3a10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3050>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_template(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b56c8710>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBStackDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.EditStackView
Bases: \fBopenstack_dashboard.dashboards.project.stacks.views.CreateStackView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBEditStackForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_stack\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85a3410>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85a3e90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b85a3ad0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:stacks:edit_stack\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3f50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/update.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85a3190>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBStacksTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.JSONView(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B get(request, stack_id=\(aq\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.PreviewStackDetailsView(**kwargs)
Bases: \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b56c8790>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/preview_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.PreviewStackView
Bases: \fBopenstack_dashboard.dashboards.project.stacks.views.CreateStackView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBPreviewStackForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqpreview_stack\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85a3350>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b56c85d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b56c8690>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b56c8bd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b56c8450>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/preview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.PreviewTemplateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBPreviewTemplateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqpreview_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85a3c90>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85a3f10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b85a3bd0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3790>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3710>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/preview_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.ResourceView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_metadata(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b56c8090>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBResourceDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/resource.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.views.SelectTemplateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBTemplateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqselect_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b85a3e50>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b85a3990>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b85a3110>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a32d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b85a3910>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/select_template.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.stacks.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.ResourceDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqresource_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.stacks.tabs.ResourceOverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.ResourceOverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b586bf90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqresource_overview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/_resource_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.StackDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqstack_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.stacks.tabs.StackTopologyTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tabs.StackOverviewTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tabs.StackResourcesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tabs.StackEventsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tabs.StackTemplateTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.StackEventsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b586bb10>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqevents\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/_detail_events.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.StackOverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b586b750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.StackResourcesTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b586b2d0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqresources\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/_detail_resources.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.StackTemplateTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b57ca050>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqstack_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/_stack_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tabs.StackTopologyTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b586b7d0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqtopology\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks/_detail_topology.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.stacks.mappings\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.mappings.get_resource_image(status, type)
Sets the image url and in_progress action sw based on status.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.mappings.get_resource_status(status)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.mappings.get_resource_type(type)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.mappings.resource_to_url(resource)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.mappings.stack_output(output)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.api\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.api.Stack
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.api.d3_data(request, stack_id=\(aq\(aq)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.ChangeStackTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b509ccf8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:stacks:change_template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7aa7e90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(stack)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:stacks:change_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7aa7e90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.CheckStack(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, stack_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqorchestration\(aq, \(aqcloudformation:CheckStack\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqcheck\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b51963d0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b5196328>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b509c9b0>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7aa7a90>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcheck\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqorchestration\(aq, \(aqcloudformation:CheckStack\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7aa7a90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.DeleteStack(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, stack)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqorchestration\(aq, \(aqcloudformation:DeleteStack\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b509ced8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b5139670>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b51397f8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b509ce60>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, stack_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqorchestration\(aq, \(aqcloudformation:DeleteStack\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.EventsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqevents\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5887d10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B EventsTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B EventsTable.base_columns = OrderedDict([(\(aqlogical_resource\(aq, <Column: logical_resource>), (\(aqphysical_resource\(aq, <Column: physical_resource>), (\(aqtimestamp\(aq, <Column: timestamp>), (\(aqstatus\(aq, <Column: status>), (\(aqstatusreason\(aq, <Column: statusreason>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.LaunchStack(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqorchestration\(aq, \(aqcloudformation:CreateStack\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqlaunch\(aq, \(aqurl\(aq: \(aqhorizon:project:stacks:select_template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7aa7550>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqorchestration\(aq, \(aqcloudformation:CreateStack\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:stacks:select_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7aa7550>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.PreviewStack(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqorchestration\(aq, \(aqcloudformation:PreviewStack\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqpreview\(aq, \(aqurl\(aq: \(aqhorizon:project:stacks:preview_template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8588890>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqpreview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqorchestration\(aq, \(aqcloudformation:PreviewStack\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:stacks:preview_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8588890>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.ResourcesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqresources\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBResourcesUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus_hidden\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b65b7e50>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ResourcesTable.STATUS_CHOICES = ((\(aqComplete\(aq, True), (\(aqFailed\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B ResourcesTable.STATUS_DISPLAY_CHOICES = ((\(aqinit_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229610>), (\(aqinit_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b82297d0>), (\(aqinit_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229690>), (\(aqcreate_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229750>), (\(aqcreate_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229910>), (\(aqcreate_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229b10>), (\(aqdelete_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229150>), (\(aqdelete_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229a10>), (\(aqdelete_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229ad0>), (\(aqupdate_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229710>), (\(aqupdate_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229850>), (\(aqupdate_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065f50>), (\(aqrollback_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065c90>), (\(aqrollback_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065150>), (\(aqrollback_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065cd0>), (\(aqsuspend_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065dd0>), (\(aqsuspend_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b80659d0>), (\(aqsuspend_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065810>), (\(aqresume_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065f90>), (\(aqresume_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065550>), (\(aqresume_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba33fad0>), (\(aqadopt_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba33f4d0>), (\(aqadopt_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba33f210>), (\(aqadopt_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671810>), (\(aqsnapshot_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671250>), (\(aqsnapshot_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671a50>), (\(aqsnapshot_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671a90>), (\(aqcheck_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671890>), (\(aqcheck_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b86718d0>), (\(aqcheck_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671ed0>))
.UNINDENT
.INDENT 7.0
.TP
.B class ResourcesTable.StatusColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_raw_data(datum)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ResourcesTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B ResourcesTable.base_columns = OrderedDict([(\(aqlogical_resource\(aq, <Column: logical_resource>), (\(aqphysical_resource\(aq, <Column: physical_resource>), (\(aqresource_type\(aq, <Column: resource_type>), (\(aqupdated_time\(aq, <Column: updated_time>), (\(aqstatus\(aq, <Column: status>), (\(aqstatusreason\(aq, <Column: statusreason>), (\(aqstatus_hidden\(aq, <StatusColumn: status_hidden>)])
.UNINDENT
.INDENT 7.0
.TP
.B ResourcesTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.ResourcesUpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, resource_name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.ResumeStack(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, stack_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqorchestration\(aq, \(aqcloudformation:ResumeStack\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqresume\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b5196868>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b5196ad0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b509cc80>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7aa7fd0>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqresume\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqorchestration\(aq, \(aqcloudformation:ResumeStack\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7aa7fd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.StacksFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b509f0c8>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, stacks, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.StacksTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqstacks\(aq
.UNINDENT
.INDENT 7.0
.TP
.B pagination_param = \(aqstack_marker\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.stacks.tables.CheckStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.SuspendStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.ResumeStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.ChangeStackTemplate\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.DeleteStack\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBStacksUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.stacks.tables.LaunchStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.PreviewStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.CheckStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.SuspendStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.ResumeStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.DeleteStack\(aq>, <class \(aqopenstack_dashboard.dashboards.project.stacks.tables.StacksFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8671e90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B StacksTable.STACK_STATUS_DISPLAY_CHOICES = ((\(aqinit_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229610>), (\(aqinit_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b82297d0>), (\(aqinit_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229690>), (\(aqcreate_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229750>), (\(aqcreate_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229910>), (\(aqcreate_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229b10>), (\(aqdelete_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229150>), (\(aqdelete_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229a10>), (\(aqdelete_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229ad0>), (\(aqupdate_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229710>), (\(aqupdate_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8229850>), (\(aqupdate_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065f50>), (\(aqrollback_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065c90>), (\(aqrollback_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065150>), (\(aqrollback_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065cd0>), (\(aqsuspend_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065dd0>), (\(aqsuspend_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b80659d0>), (\(aqsuspend_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065810>), (\(aqresume_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065f90>), (\(aqresume_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8065550>), (\(aqresume_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba33fad0>), (\(aqadopt_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba33f4d0>), (\(aqadopt_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba33f210>), (\(aqadopt_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671810>), (\(aqsnapshot_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671250>), (\(aqsnapshot_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671a50>), (\(aqsnapshot_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671a90>), (\(aqcheck_in_progress\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671890>), (\(aqcheck_complete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b86718d0>), (\(aqcheck_failed\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8671ed0>))
.UNINDENT
.INDENT 7.0
.TP
.B StacksTable.STATUS_CHOICES = ((\(aqComplete\(aq, True), (\(aqFailed\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B StacksTable.base_actions = OrderedDict([(\(aqcheck\(aq, <CheckStack: check>), (\(aqdelete\(aq, <DeleteStack: delete>), (\(aqedit\(aq, <ChangeStackTemplate: edit>), (\(aqfilter\(aq, <StacksFilterAction: filter>), (\(aqlaunch\(aq, <LaunchStack: launch>), (\(aqpreview\(aq, <PreviewStack: preview>), (\(aqresume\(aq, <ResumeStack: resume>), (\(aqsuspend\(aq, <SuspendStack: suspend>)])
.UNINDENT
.INDENT 7.0
.TP
.B StacksTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqcreated\(aq, <Column: created>), (\(aqupdated\(aq, <Column: updated>), (\(aqstatus\(aq, <Column: status>), (\(aqstack_status\(aq, <Column: stack_status>)])
.UNINDENT
.INDENT 7.0
.TP
.B StacksTable.get_object_display(stack)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.StacksUpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B can_be_selected(datum)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, stack_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.tables.SuspendStack(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, stack_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.stacks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqorchestration\(aq, \(aqcloudformation:SuspendStack\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqsuspend\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b5196e18>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b5196b40>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b509cb18>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7aa71d0>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsuspend\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqorchestration\(aq, \(aqcloudformation:SuspendStack\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7aa71d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.tables.get_resource_url(obj)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.sro\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.sro.resource_info(resource)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.sro.stack_info(stack, stack_image)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.panel.Stacks
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5b2bed0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.orchestration\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqstacks\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.forms.ChangeTemplateForm(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.stacks.forms.TemplateForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b72cdc50>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b72cd1d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ChangeTemplateForm.base_fields = OrderedDict([(\(aqtemplate_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72dd290>), (\(aqtemplate_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72ddb10>), (\(aqtemplate_url\(aq, <django.forms.fields.URLField object at 0x7ff3b72dd310>), (\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b81d2590>), (\(aqenvironment_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72cdb50>), (\(aqenvironment_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72cd690>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b72cdc90>), (\(aqstack_id\(aq, <django.forms.fields.CharField object at 0x7ff3b72cd390>), (\(aqstack_name\(aq, <django.forms.fields.CharField object at 0x7ff3b72cd9d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B ChangeTemplateForm.declared_fields = OrderedDict([(\(aqtemplate_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72dd290>), (\(aqtemplate_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72ddb10>), (\(aqtemplate_url\(aq, <django.forms.fields.URLField object at 0x7ff3b72dd310>), (\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b81d2590>), (\(aqenvironment_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72cdb50>), (\(aqenvironment_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72cd690>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b72cdc90>), (\(aqstack_id\(aq, <django.forms.fields.CharField object at 0x7ff3b72cd390>), (\(aqstack_name\(aq, <django.forms.fields.CharField object at 0x7ff3b72cd9d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B ChangeTemplateForm.media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.forms.CreateStackForm(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b72cdbd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B CreateStackForm.base_fields = OrderedDict([(\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600d550>), (\(aqtemplate_url\(aq, <django.forms.fields.CharField object at 0x7ff3b600ddd0>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600da50>), (\(aqparameters\(aq, <django.forms.fields.CharField object at 0x7ff3b600d250>), (\(aqstack_name\(aq, <django.forms.fields.RegexField object at 0x7ff3b600d590>), (\(aqtimeout_mins\(aq, <django.forms.fields.IntegerField object at 0x7ff3b600d110>), (\(aqenable_rollback\(aq, <django.forms.fields.BooleanField object at 0x7ff3b600dd90>)])
.UNINDENT
.INDENT 7.0
.TP
.B CreateStackForm.declared_fields = OrderedDict([(\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600d550>), (\(aqtemplate_url\(aq, <django.forms.fields.CharField object at 0x7ff3b600ddd0>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600da50>), (\(aqparameters\(aq, <django.forms.fields.CharField object at 0x7ff3b600d250>), (\(aqstack_name\(aq, <django.forms.fields.RegexField object at 0x7ff3b600d590>), (\(aqtimeout_mins\(aq, <django.forms.fields.IntegerField object at 0x7ff3b600d110>), (\(aqenable_rollback\(aq, <django.forms.fields.BooleanField object at 0x7ff3b600dd90>)])
.UNINDENT
.INDENT 7.0
.TP
.B CreateStackForm.handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B CreateStackForm.media
.UNINDENT
.INDENT 7.0
.TP
.B CreateStackForm.param_prefix = \(aq__param_\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.forms.EditStackForm(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.stacks.forms.CreateStackForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b600da90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B EditStackForm.base_fields = OrderedDict([(\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600d550>), (\(aqtemplate_url\(aq, <django.forms.fields.CharField object at 0x7ff3b600ddd0>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600da50>), (\(aqparameters\(aq, <django.forms.fields.CharField object at 0x7ff3b600d250>), (\(aqstack_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5cf5f90>), (\(aqtimeout_mins\(aq, <django.forms.fields.IntegerField object at 0x7ff3b600d110>), (\(aqenable_rollback\(aq, <django.forms.fields.BooleanField object at 0x7ff3b600dd90>), (\(aqstack_id\(aq, <django.forms.fields.CharField object at 0x7ff3b600de50>)])
.UNINDENT
.INDENT 7.0
.TP
.B EditStackForm.declared_fields = OrderedDict([(\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600d550>), (\(aqtemplate_url\(aq, <django.forms.fields.CharField object at 0x7ff3b600ddd0>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600da50>), (\(aqparameters\(aq, <django.forms.fields.CharField object at 0x7ff3b600d250>), (\(aqstack_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5cf5f90>), (\(aqtimeout_mins\(aq, <django.forms.fields.IntegerField object at 0x7ff3b600d110>), (\(aqenable_rollback\(aq, <django.forms.fields.BooleanField object at 0x7ff3b600dd90>), (\(aqstack_id\(aq, <django.forms.fields.CharField object at 0x7ff3b600de50>)])
.UNINDENT
.INDENT 7.0
.TP
.B EditStackForm.handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B EditStackForm.media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.forms.PreviewStackForm(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.stacks.forms.CreateStackForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5cf5c90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PreviewStackForm.base_fields = OrderedDict([(\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600d550>), (\(aqtemplate_url\(aq, <django.forms.fields.CharField object at 0x7ff3b600ddd0>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600da50>), (\(aqparameters\(aq, <django.forms.fields.CharField object at 0x7ff3b600d250>), (\(aqstack_name\(aq, <django.forms.fields.RegexField object at 0x7ff3b600d590>), (\(aqtimeout_mins\(aq, <django.forms.fields.IntegerField object at 0x7ff3b600d110>), (\(aqenable_rollback\(aq, <django.forms.fields.BooleanField object at 0x7ff3b600dd90>)])
.UNINDENT
.INDENT 7.0
.TP
.B PreviewStackForm.declared_fields = OrderedDict([(\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600d550>), (\(aqtemplate_url\(aq, <django.forms.fields.CharField object at 0x7ff3b600ddd0>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b600da50>), (\(aqparameters\(aq, <django.forms.fields.CharField object at 0x7ff3b600d250>), (\(aqstack_name\(aq, <django.forms.fields.RegexField object at 0x7ff3b600d590>), (\(aqtimeout_mins\(aq, <django.forms.fields.IntegerField object at 0x7ff3b600d110>), (\(aqenable_rollback\(aq, <django.forms.fields.BooleanField object at 0x7ff3b600dd90>)])
.UNINDENT
.INDENT 7.0
.TP
.B PreviewStackForm.handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B PreviewStackForm.media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.forms.PreviewTemplateForm(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.stacks.forms.TemplateForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b72cdfd0>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b72cddd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PreviewTemplateForm.base_fields = OrderedDict([(\(aqtemplate_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72dd290>), (\(aqtemplate_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72ddb10>), (\(aqtemplate_url\(aq, <django.forms.fields.URLField object at 0x7ff3b72dd310>), (\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b81d2590>), (\(aqenvironment_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72cdb50>), (\(aqenvironment_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72cd690>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b72cdc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B PreviewTemplateForm.declared_fields = OrderedDict([(\(aqtemplate_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72dd290>), (\(aqtemplate_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72ddb10>), (\(aqtemplate_url\(aq, <django.forms.fields.URLField object at 0x7ff3b72dd310>), (\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b81d2590>), (\(aqenvironment_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72cdb50>), (\(aqenvironment_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72cd690>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b72cdc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B PreviewTemplateForm.media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.forms.TemplateForm(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b72dd650>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b72dd810>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.attributes = {\(aqdata\-envsource\-raw\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b72cd3d0>, \(aqdata\-switch\-on\(aq: \(aqenvsource\(aq, \(aqclass\(aq: \(aqswitched\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.base_choices = [(\(aqfile\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b72ddc50>), (\(aqraw\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b72ddfd0>)]
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.base_fields = OrderedDict([(\(aqtemplate_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72dd290>), (\(aqtemplate_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72ddb10>), (\(aqtemplate_url\(aq, <django.forms.fields.URLField object at 0x7ff3b72dd310>), (\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b81d2590>), (\(aqenvironment_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72cdb50>), (\(aqenvironment_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72cd690>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b72cdc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.clean()
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.clean_uploaded_files(prefix, field_label, cleaned, files)
Cleans Template & Environment data from form upload.
.sp
Does some of the crunchy bits for processing uploads vs raw
data depending on what the user specified. Identical process
for environment data & template data.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBprefix\fP (\fIstr\fP) \-\- prefix (environment, template) of field
.IP \(bu 2
\fBfield_label\fP (\fIstr\fP) \-\- translated prefix str for messages
.IP \(bu 2
\fBprefix\fP \-\- existing cleaned fields from form
.UNINDENT
.TP
.B Return type
dict
.TP
.B Returns
cleaned dict including environment & template data
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.create_kwargs(data)
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.declared_fields = OrderedDict([(\(aqtemplate_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72dd290>), (\(aqtemplate_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72ddb10>), (\(aqtemplate_url\(aq, <django.forms.fields.URLField object at 0x7ff3b72dd310>), (\(aqtemplate_data\(aq, <django.forms.fields.CharField object at 0x7ff3b81d2590>), (\(aqenvironment_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72cdb50>), (\(aqenvironment_upload\(aq, <django.forms.fields.FileField object at 0x7ff3b72cd690>), (\(aqenvironment_data\(aq, <django.forms.fields.CharField object at 0x7ff3b72cdc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.media
.UNINDENT
.INDENT 7.0
.TP
.B TemplateForm.url_choice = [(\(aqurl\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b72dded0>)]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.stacks.forms.create_upload_form_attributes(prefix, input_type, name)
Creates attribute dicts for the switchable upload form
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBprefix\fP (\fIstr\fP) \-\- prefix (environment, template) of field
.IP \(bu 2
\fBinput_type\fP (\fIstr\fP) \-\- field type (file, raw, url)
.IP \(bu 2
\fBname\fP (\fIstr\fP) \-\- translated text label to display to user
.UNINDENT
.TP
.B Return type
dict
.TP
.B Returns
an attribute set to pass to form build
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.resource_types.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.resource_types.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_resource_type(request, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8b24690>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBResourceTypeDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks.resource_types/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.resource_types.views.ResourceTypesView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8b24f10>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBResourceTypesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks.resource_types/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.resource_types\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.stacks.resource_types.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.resource_types.tabs.ResourceTypeDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqresource_type_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.stacks.resource_types.tabs.ResourceTypeOverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.resource_types.tabs.ResourceTypeOverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7439610>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqresource_type_overview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/stacks.resource_types/_details.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.resource_types.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.stacks.resource_types.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.resource_types.tables.ResourceTypesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqresource_types\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8296250>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class ResourceTypesTable.ResourceColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_raw_data(datum)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ResourceTypesTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B ResourceTypesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqimplementation\(aq, <ResourceColumn: implementation>), (\(aqcomponent\(aq, <ResourceColumn: component>), (\(aqresource\(aq, <ResourceColumn: resource>)])
.UNINDENT
.INDENT 7.0
.TP
.B ResourceTypesTable.get_object_id(resource)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.stacks.resource_types.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.stacks.resource_types.panel.ResourceTypes
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4850>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.orchestration\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqstacks.resource_types\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.InstanceView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.views.IndexView\fP
.INDENT 7.0
.TP
.B table_class
alias of \fBInstancesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/iframe.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.JSONView(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B add_resource_url(view, resources)
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B is_router_enabled
.UNINDENT
.INDENT 7.0
.TP
.B trans = <openstack_dashboard.dashboards.project.network_topology.views.TranslationHelper object at 0x7ff3b5aa8d90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTAddInterfaceView
Bases: \fBopenstack_dashboard.dashboards.project.routers.ports.views.AddInterfaceView\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:network_topology:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:network_topology:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTCreateNetwork(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateNetwork\fP
.INDENT 7.0
.TP
.B get_failure_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTCreateNetworkView
Bases: \fBopenstack_dashboard.dashboards.project.networks.views.CreateView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBNTCreateNetwork\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTCreateRouterView
Bases: \fBopenstack_dashboard.dashboards.project.routers.views.CreateView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b5aa8c10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b5b4ac90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/create_router.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTCreateSubnet(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnet\fP
.INDENT 7.0
.TP
.B get_failure_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTCreateSubnetView
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.views.CreateView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBNTCreateSubnet\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTLaunchInstance(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.workflows.create_instance.LaunchInstance\fP
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:network_topology:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NTLaunchInstanceView
Bases: \fBopenstack_dashboard.dashboards.project.instances.views.LaunchInstanceView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBNTLaunchInstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NetworkDetailView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.views.DetailView\fP
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.subnets.tables.SubnetsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/iframe.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NetworkTopologyView(**kwargs)
Bases: \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b5aa8d50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.NetworkView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.views.IndexView\fP
.INDENT 7.0
.TP
.B table_class
alias of \fBNetworksTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/iframe.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.RouterDetailView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.views.DetailView\fP
.INDENT 7.0
.TP
.B get_interfaces_data()
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.ports.tables.PortsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/iframe.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.RouterView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.views.IndexView\fP
.INDENT 7.0
.TP
.B table_class
alias of \fBRoutersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/network_topology/iframe.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.views.TranslationHelper
Bases: \fBobject\fP
.sp
Helper class to provide the translations of instances, networks,
routers and ports from other parts of the code to the network topology
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.panel.NetworkTopology
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6336790>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnetwork_topology\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.ports\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.ports.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.ports.tables.PortsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.ports.tables.PortsTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqinterfaces\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.ports.tables.RemoveInterface\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b675b650>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_actions = OrderedDict([(\(aqdelete\(aq, <RemoveInterface: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqfixed_ips\(aq, <Column: fixed_ips>), (\(aqstatus\(aq, <Column: status>), (\(aqdevice_owner\(aq, <Column: device_owner>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.ports.tables.RemoveInterface(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.ports.tables.RemoveInterface\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.network_topology.ports.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqremove_router_interface\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqfailure_url\(aq: \(aqhorizon:project:network_topology:router\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d9c4e8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d9c590>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8e0d758>}
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:network_topology:router\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.subnets\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.subnets.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.subnets.tables.DeleteSubnet(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.DeleteSubnet\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.network_topology.subnets.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_subnet\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqfailure_url\(aq: \(aqhorizon:project:network_topology:network\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9024ef8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8f38408>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8f39140>}
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:network_topology:network\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.subnets.tables.SubnetsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetsTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqsubnets\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.subnets.tables.DeleteSubnet\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.subnets.tables.DeleteSubnet\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5b2ba90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteSubnet: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqcidr\(aq, <Column: cidr>), (\(aqip_version\(aq, <Column: ip_version>), (\(aqgateway_ip\(aq, <Column: gateway_ip>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.instances\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.instances.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.instances.tables.InstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.InstancesTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqinstances\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.TerminateInstance\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b6c0fb50>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_actions = OrderedDict([(\(aqterminate\(aq, <TerminateInstance: terminate>)])
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqimage_name\(aq, <Column: image_name>), (\(aqip\(aq, <Column: ip>), (\(aqsize\(aq, <Column: size>), (\(aqkeypair\(aq, <Column: keypair>), (\(aqstatus\(aq, <Column: status>), (\(aqaz\(aq, <Column: az>), (\(aqtask\(aq, <Column: task>), (\(aqstate\(aq, <Column: state>), (\(aqcreated\(aq, <Column: created>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.routers\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.routers.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.routers.tables.DeleteRouter(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tables.DeleteRouter\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.network_topology.routers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_router\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b8d11578>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d9cbe8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d9cc90>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqredirect_url\(aq: \(aqhorizon:project:network_topology:router\(aq, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8d11500>}
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:project:network_topology:router\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.routers.tables.RoutersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tables.RoutersTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqRouters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.routers.tables.DeleteRouter\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b630bfd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteRouter: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqstatus\(aq, <Column: status>), (\(aqdistributed\(aq, <Column: distributed>), (\(aqha\(aq, <Column: ha>), (\(aqext_net\(aq, <Column: ext_net>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.networks\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.network_topology.networks.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.networks.tables.DeleteNetwork(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.tables.DeleteNetwork\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.network_topology.networks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_network\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b90f2a28>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9306670>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqredirect_url\(aq: \(aqhorizon:project:network_topology:network\(aq, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b92e8f50>}
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:project:network_topology:network\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.network_topology.networks.tables.NetworksTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.tables.NetworksTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqnetworks\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.networks.tables.DeleteNetwork\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.network_topology.networks.tables.DeleteNetwork\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8f3d6d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B NetworksTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteNetwork: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B NetworksTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqsubnets\(aq, <Column: subnets>), (\(aqshared\(aq, <Column: shared>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.views\fP Module
.sp
Views for managing instances.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.AttachInterfaceView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAttachInterface\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqattach_interface_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4a10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4e10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:instances:attach_interface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4050>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/attach_interface.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.DecryptPasswordView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBDecryptPasswordInstanceForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2e40d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4dd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/decryptpassword.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.DetachInterfaceView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBDetachInterface\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqdetach_interface_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4210>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4ed0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:instances:detach_interface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4650>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/detach_interface.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B image_url = \(aqhorizon:project:images:images:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4690>
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:project:instances:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBInstanceDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/detail.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B volume_url = \(aqhorizon:project:volumes:volumes:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_filters(filters)
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4e50>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBInstancesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.LaunchInstanceView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBLaunchInstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.RebuildView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBRebuildInstanceForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4e90>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4450>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/rebuild.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.ResizeView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4310>
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBResizeInstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.SerialConsoleView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/serial_console.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.views.UpdateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4750>
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateInstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.views.console(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.views.rdp(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.views.spice(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.views.vnc(request, instance_id)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.instances.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tabs.AuditTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_audit_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba113190>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaudit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.instances.audit_tables.AuditTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/_detail_audit.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tabs.ConsoleTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba113e10>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqconsole\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/_detail_console.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tabs.InstanceDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqinstance_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.instances.tabs.OverviewTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tabs.LogTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tabs.ConsoleTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tabs.AuditTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tabs.LogTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba1131d0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqlog\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/_detail_log.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba113b50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.console\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.console.get_console(request, console_type, instance)
Get a tuple of console url and console type.
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.instances.audit_tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.audit_tables.AuditTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B ACTION_DISPLAY_CHOICES = ((\(aqcreate\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9c28410>), (\(aqpause\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba583750>), (\(aqunpause\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb67f310>), (\(aqrebuild\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb67f3d0>), (\(aqresize\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb67f090>), (\(aqconfirmresize\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb67f910>), (\(aqsuspend\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb67f750>), (\(aqresume\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb67f710>), (\(aqreboot\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd515cd0>), (\(aqstop\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd5155d0>), (\(aqstart\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd515d90>))
.UNINDENT
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqaudit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba113cd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AuditTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B AuditTable.base_columns = OrderedDict([(\(aqrequest_id\(aq, <Column: request_id>), (\(aqaction\(aq, <Column: action>), (\(aqstart_time\(aq, <Column: start_time>), (\(aquser_id\(aq, <Column: user_id>), (\(aqmessage\(aq, <Column: message>)])
.UNINDENT
.INDENT 7.0
.TP
.B AuditTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.AssociateIP(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqnetwork:associate_floating_ip\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b979a320>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b979a2a8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqlink\(aq, \(aqname\(aq: \(aqassociate\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:floating_ips:associate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe48d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqnetwork:associate_floating_ip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:floating_ips:associate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe48d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.AttachInterface(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:attach_interfaces\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b979aed8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b979ae60>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqattach_interface\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:attach_interface\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-confirm\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4e90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-confirm\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqattach_interface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:attach_interfaces\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:attach_interface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4e90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.ConfirmResize(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqname\(aq: \(aqconfirm\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4c90>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b97a8ed8>, \(aqclasses\(aq: (\(aqbtn\-confirm\(aq, \(aqbtn\-action\-required\(aq), \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:confirm_resize\(aq),), \(aqallowed\(aq: <function allowed at 0x7ff3b97a8e60>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-confirm\(aq, \(aqbtn\-action\-required\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqconfirm\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:confirm_resize\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4c90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.ConsoleLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:consoles\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8b90>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8b18>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqconsole\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-console\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4f10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-console\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqconsole\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:consoles\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4f10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.CreateSnapshot(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:snapshot\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8aa0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqsnapshot\(aq, \(aqurl\(aq: \(aqhorizon:project:images:snapshots:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4b50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsnapshot\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:snapshot\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:images:snapshots:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4b50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.DecryptInstancePassword(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b979a230>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b979a1b8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqdecryptpassword\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:decryptpassword\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-decrypt\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-decrypt\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdecryptpassword\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:decryptpassword\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.DetachInterface(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b979e050>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b979af50>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqdetach_interface\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:detach_interface\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-confirm\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4090>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-confirm\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdetach_interface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:detach_interface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4090>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.EditInstance(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:update\(aq),), \(aq_get_link_url\(aq: <function _get_link_url at 0x7ff3b97a88c0>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8848>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8938>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe40d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:update\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe40d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.EditInstanceSecurityGroups(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.EditInstance\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:update\(aq),), \(aq_get_link_url\(aq: <function _get_link_url at 0x7ff3b97a88c0>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a89b0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8a28>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit_secgroups\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4290>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit_secgroups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4290>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.InstancesFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9651bd0>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9651250>, True), (\(aqimage\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9651350>, True), (\(aqflavor\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b96949d0>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9651bd0>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9651250>, True), (\(aqimage\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9651350>, True), (\(aqflavor\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b96949d0>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.InstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B launch_actions = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.LaunchLink\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqinstances\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.StartInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ConfirmResize\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.RevertResize\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.CreateSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.SimpleAssociateIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.AssociateIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.SimpleDisassociateIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.AttachInterface\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.DetachInterface\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.EditInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.DecryptInstancePassword\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.EditInstanceSecurityGroups\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ConsoleLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.LogLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.TogglePause\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ToggleSuspend\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ToggleShelve\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ResizeLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.LockInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.UnlockInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.SoftRebootInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.RebootInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.StopInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.RebuildInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.TerminateInstance\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq, \(aqtask\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.LaunchLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.TerminateInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.InstancesFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions_menu = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.StartInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.StopInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.SoftRebootInstance\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9667110>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.STATUS_CHOICES = ((\(aqactive\(aq, True), (\(aqshutoff\(aq, True), (\(aqsuspended\(aq, True), (\(aqpaused\(aq, True), (\(aqerror\(aq, False), (\(aqrescue\(aq, True), (\(aqshelved\(aq, True), (\(aqshelved_offloaded\(aq, True))
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.TASK_STATUS_CHOICES = ((None, True), (\(aqnone\(aq, True))
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_actions = OrderedDict([(\(aqassociate\(aq, <AssociateIP: associate>), (\(aqassociate\-simple\(aq, <SimpleAssociateIP: associate\-simple>), (\(aqattach_interface\(aq, <AttachInterface: attach_interface>), (\(aqconfirm\(aq, <ConfirmResize: confirm>), (\(aqconsole\(aq, <ConsoleLink: console>), (\(aqdecryptpassword\(aq, <DecryptInstancePassword: decryptpassword>), (\(aqdetach_interface\(aq, <DetachInterface: detach_interface>), (\(aqdisassociate\(aq, <SimpleDisassociateIP: disassociate>), (\(aqedit\(aq, <EditInstance: edit>), (\(aqedit_secgroups\(aq, <EditInstanceSecurityGroups: edit_secgroups>), (\(aqfilter\(aq, <InstancesFilterAction: filter>), (\(aqlaunch\(aq, <LaunchLink: launch>), (\(aqlock\(aq, <LockInstance: lock>), (\(aqlog\(aq, <LogLink: log>), (\(aqpause\(aq, <TogglePause: pause>), (\(aqreboot\(aq, <RebootInstance: reboot>), (\(aqrebuild\(aq, <RebuildInstance: rebuild>), (\(aqresize\(aq, <ResizeLink: resize>), (\(aqrevert\(aq, <RevertResize: revert>), (\(aqshelve\(aq, <ToggleShelve: shelve>), (\(aqsnapshot\(aq, <CreateSnapshot: snapshot>), (\(aqsoft_reboot\(aq, <SoftRebootInstance: soft_reboot>), (\(aqstart\(aq, <StartInstance: start>), (\(aqstop\(aq, <StopInstance: stop>), (\(aqsuspend\(aq, <ToggleSuspend: suspend>), (\(aqterminate\(aq, <TerminateInstance: terminate>), (\(aqunlock\(aq, <UnlockInstance: unlock>)])
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqimage_name\(aq, <Column: image_name>), (\(aqip\(aq, <Column: ip>), (\(aqsize\(aq, <Column: size>), (\(aqkeypair\(aq, <Column: keypair>), (\(aqstatus\(aq, <Column: status>), (\(aqaz\(aq, <Column: az>), (\(aqtask\(aq, <Column: task>), (\(aqstate\(aq, <Column: state>), (\(aqcreated\(aq, <Column: created>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.LaunchLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: True, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8668>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3b97a85f0>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqsingle\(aq: <function single at 0x7ff3b97a86e0>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd572b50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, object_id=None)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:launch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd572b50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.LaunchLinkNG(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.LaunchLink\fP
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a87d0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8668>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3b97a85f0>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch\-ng\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqsingle\(aq: <function single at 0x7ff3b97a86e0>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-launch\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3b97a8758>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd572b50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-launch\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_default_attrs()
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\-ng\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.LockInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:lock\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b979ab90>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqlock\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b398>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b3d0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b979ac08>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlock\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:lock\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.LogLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:console_output\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8c80>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8c08>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlog\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-log\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4790>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-log\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlog\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:console_output\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4790>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.RebootInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:reboot\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b975fcf8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba798a90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqreboot\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b0c0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b088>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-reboot\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b975fd70>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-reboot\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba798a90>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqreboot\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:reboot\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.RebuildInstance(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:rebuild\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b979a140>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b979a0c8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqrebuild\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:rebuild\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-rebuild\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4950>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-rebuild\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrebuild\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:rebuild\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:rebuild\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4950>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.ResizeLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:resize\(aq),), \(aq_get_link_url\(aq: <function _get_link_url at 0x7ff3b97a8d70>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8cf8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8de8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqresize\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:resize\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-resize\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4f50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-resize\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(project)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqresize\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:resize\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:resize\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4f50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.RevertResize(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqname\(aq: \(aqrevert\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4bd0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b979a050>, \(aqclasses\(aq: (\(aqbtn\-revert\(aq, \(aqbtn\-action\-required\(aq), \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:revert_resize\(aq),), \(aqallowed\(aq: <function allowed at 0x7ff3b97a8f50>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-revert\(aq, \(aqbtn\-action\-required\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrevert\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:revert_resize\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4bd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.SimpleAssociateIP(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqname\(aq: \(aqassociate\-simple\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4510>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b979a410>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqnetwork:associate_floating_ip\(aq),), \(aqallowed\(aq: <function allowed at 0x7ff3b979a398>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqicon\(aq: \(aqlink\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqassociate\-simple\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqnetwork:associate_floating_ip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, instance_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4510>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.SimpleDisassociateIP(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqname\(aq: \(aqdisassociate\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4590>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b979a500>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-disassociate\(aq), \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqnetwork:disassociate_floating_ip\(aq),), \(aqallowed\(aq: <function allowed at 0x7ff3b979a488>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-disassociate\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdisassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqnetwork:disassociate_floating_ip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, instance_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4590>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.SoftRebootInstance(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.RebootInstance\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:reboot\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b975fcf8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba798a90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqsoft_reboot\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b0f8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b130>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-reboot\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b975fed8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsoft_reboot\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.StartInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:start\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b979a7d0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqstart\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b2b8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b2f0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-confirm\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b979a848>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-confirm\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqstart\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:start\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.StopInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:stop\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b979a9b0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4890>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqstop\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b328>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b360>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b979aa28>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9fe4890>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqstop\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:stop\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.TerminateInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
Allow terminate action if instance not currently being deleted.
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:delete\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b975fb18>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba798350>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqremove\(aq, \(aqname\(aq: \(aqterminate\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b94f3788>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b94f3ef8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b975fb90>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba798350>
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqremove\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqterminate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:delete\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.TogglePause(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8140>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqpause\(aq, \(aqname\(aq: \(aqpause\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b168>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b1a0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b97a81b8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpause\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqpause\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.ToggleShelve(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8500>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqshelve\(aq, \(aqname\(aq: \(aqshelve\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b248>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b280>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b97a8578>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqshelve\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqshelve\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.ToggleSuspend(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8320>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqsuspend\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b1d8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b210>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-suspend\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b97a8398>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-suspend\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsuspend\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.UnlockInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:unlock\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b979ad70>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqunlock\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b977b408>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b977b440>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b979ade8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqunlock\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:unlock\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, instance_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.get_instance_error(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.get_ips(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.get_keyname(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.get_power_state(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.get_size(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.instance_fault_to_friendly_message(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.tables.is_deleting(instance)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.utils\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.utils.availability_zone_list(request)
Utility method to retrieve a list of availability zones.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.utils.flavor_field_data(request, include_empty_option=False)
Returns a list of tuples of all image flavors.
.sp
Generates a list of image flavors available. And returns a list of
(id, name) tuples.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- django http request object
.IP \(bu 2
\fBinclude_empty_option\fP \-\- flag to include a empty tuple in the front of
the list
.UNINDENT
.TP
.B Returns
list of (id, name) tuples
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.utils.flavor_list(request)
Utility method to retrieve a list of flavors.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.utils.keypair_field_data(request, include_empty_option=False)
Returns a list of tuples of all keypairs.
.sp
Generates a list of keypairs available to the user (request). And returns
a list of (id, name) tuples.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- django http request object
.IP \(bu 2
\fBinclude_empty_option\fP \-\- flag to include a empty tuple in the front of
the list
.UNINDENT
.TP
.B Returns
list of (id, name) tuples
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.utils.network_field_data(request, include_empty_option=False)
Returns a list of tuples of all networks.
.sp
Generates a list of networks available to the user (request). And returns
a list of (id, name) tuples.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- django http request object
.IP \(bu 2
\fBinclude_empty_option\fP \-\- flag to include a empty tuple in the front of
the list
.UNINDENT
.TP
.B Returns
list of (id, name) tuples
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.instances.utils.sort_flavor_list(request, flavors)
Utility method to sort a list of flavors.
By default, returns the available flavors, sorted by RAM
usage (ascending). Override these behaviours with a
CREATE_INSTANCE_FLAVOR_SORT dict
in local_settings.py.
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.panel.Instances
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7c074d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqinstances\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.forms.AttachInterface(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bd413d10>), (\(aqnetwork\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba3ded10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bd413d10>), (\(aqnetwork\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba3ded10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.forms.DecryptPasswordInstanceForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bd3f01d0>), (\(aqkeypair_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc483450>), (\(aqencrypted_password\(aq, <django.forms.fields.CharField object at 0x7ff3ba70f8d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bd3f01d0>), (\(aqkeypair_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc483450>), (\(aqencrypted_password\(aq, <django.forms.fields.CharField object at 0x7ff3ba70f8d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.forms.DetachInterface(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bc168cd0>), (\(aqport\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc168210>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bc168cd0>), (\(aqport\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc168210>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.forms.RebuildInstanceForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e610>), (\(aqimage\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bba16190>), (\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3bba16e10>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3bba164d0>), (\(aqdisk_config\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd865450>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e610>), (\(aqimage\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bba16190>), (\(aqpassword\(aq, <django.forms.fields.RegexField object at 0x7ff3bba16e10>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3bba164d0>), (\(aqdisk_config\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd865450>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.workflows.create_instance\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.CustomizeAction(*args)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B attributes = {\(aqdata\-slug\(aq: \(aqscriptsource\(aq, \(aqclass\(aq: \(aqswitchable\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqscript_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc8a8390>), (\(aqscript_upload\(aq, <django.forms.fields.FileField object at 0x7ff3bc8a8410>), (\(aqscript_data\(aq, <django.forms.fields.CharField object at 0x7ff3bc8a8310>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B clean_uploaded_files(prefix, files)
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqscript_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc8a8390>), (\(aqscript_upload\(aq, <django.forms.fields.FileField object at 0x7ff3bc8a8410>), (\(aqscript_data\(aq, <django.forms.fields.CharField object at 0x7ff3bc8a8310>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/instances/_launch_customize_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc8a8f50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bd360910>
.UNINDENT
.INDENT 7.0
.TP
.B script_help = <django.utils.functional.__proxy__ object at 0x7ff3bc8a88d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcustomizeaction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B source_choices = [(\(aq\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc8a8890>), (\(aqraw\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc8a8550>), (\(aqfile\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc8a8cd0>)]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.LaunchInstance(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.SelectProjectUser\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.SetInstanceDetails\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAccessControls\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.SetNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.PostCreationStep\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAdvanced\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3ba5ced90>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5ce350>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B multipart = True
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba5ce790>
.UNINDENT
.INDENT 7.0
.TP
.B set_network_port_profiles(request, net_ids, profile_id)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqlaunch_instance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3ba5ced50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:instances:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.PostCreationStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCustomizeAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqscript_data\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SelectProjectUser(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectProjectUserAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqproject_id\(aq, \(aquser_id\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SelectProjectUserAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqproject_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb8acf90>), (\(aquser_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb8ac550>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqproject_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb8acf90>), (\(aquser_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb8ac550>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8ac590>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aq!\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9f77e50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectprojectuseraction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAccessControls(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetAccessControlsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqkeypair_id\(aq, \(aqsecurity_group_ids\(aq, \(aqadmin_pass\(aq, \(aqconfirm_admin_pass\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqproject_id\(aq, \(aquser_id\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAccessControlsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqkeypair\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bac1e4d0>), (\(aqadmin_pass\(aq, <django.forms.fields.RegexField object at 0x7ff3bac1e1d0>), (\(aqconfirm_admin_pass\(aq, <django.forms.fields.CharField object at 0x7ff3bac1e3d0>), (\(aqgroups\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bac1e810>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
Check to make sure password fields match.
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqkeypair\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bac1e4d0>), (\(aqadmin_pass\(aq, <django.forms.fields.RegexField object at 0x7ff3bac1e1d0>), (\(aqconfirm_admin_pass\(aq, <django.forms.fields.CharField object at 0x7ff3bac1e3d0>), (\(aqgroups\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bac1e810>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bc8a8c90>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bac1ec90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_groups_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_keypair_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bc8a8490>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsetaccesscontrolsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAdvanced(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetAdvancedAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqdisk_config\(aq, \(aqconfig_drive\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B prepare_action_context(request, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAdvancedAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdisk_config\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba5ce110>), (\(aqconfig_drive\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba5ce450>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdisk_config\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba5ce110>), (\(aqconfig_drive\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba5ce450>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/instances/_launch_advanced_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba5cebd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba5ce210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsetadvancedaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetInstanceDetails(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetInstanceDetailsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqsource_type\(aq, \(aqsource_id\(aq, \(aqavailability_zone\(aq, \(aqname\(aq, \(aqcount\(aq, \(aqflavor\(aq, \(aqdevice_name\(aq, \(aqdelete_on_terminate\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqproject_id\(aq, \(aquser_id\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B prepare_action_context(request, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetInstanceDetailsAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77450>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9f77e10>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77790>), (\(aqcount\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9f77250>), (\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77d50>), (\(aqinstance_snapshot_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77810>), (\(aqvolume_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77350>), (\(aqvolume_snapshot_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77890>), (\(aqimage_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77ad0>), (\(aqvolume_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9f77f10>), (\(aqdevice_name\(aq, <django.forms.fields.CharField object at 0x7ff3bac1e0d0>), (\(aqdelete_on_terminate\(aq, <django.forms.fields.BooleanField object at 0x7ff3bac1e090>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77450>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9f77e10>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77790>), (\(aqcount\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9f77250>), (\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77d50>), (\(aqinstance_snapshot_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77810>), (\(aqvolume_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77350>), (\(aqvolume_snapshot_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77890>), (\(aqimage_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f77ad0>), (\(aqvolume_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9f77f10>), (\(aqdevice_name\(aq, <django.forms.fields.CharField object at 0x7ff3bac1e0d0>), (\(aqdelete_on_terminate\(aq, <django.forms.fields.BooleanField object at 0x7ff3bac1e090>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text(extra_context=None)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/instances/_launch_details_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bac1e490>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_availability_zone_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_flavor_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_image_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_instance_snapshot_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_volume_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_volume_snapshot_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bac1efd0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsetinstancedetailsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetNetwork(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetNetworkAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqnetwork_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/instances/_update_networks.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.create_instance.SetNetworkAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bd360790>), (\(aqprofile\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd360e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bd360790>), (\(aqprofile\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd360e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_policy_profile_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba5ce150>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba5ce910>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_network_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba5cea50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsetnetworkaction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B widget = <django.forms.widgets.HiddenInput object at 0x7ff3bd360f10>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.workflows.resize_instance\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.resize_instance.ResizeInstance(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.instances.workflows.resize_instance.SetFlavorChoice\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.create_instance.SetAdvanced\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3ba798890>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3ba7988d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba7984d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqresize_instance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3ba798dd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:instances:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.resize_instance.SetFlavorChoice(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetFlavorChoiceAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqold_flavor_id\(aq, \(aqold_flavor_name\(aq, \(aqflavors\(aq, \(aqflavor\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqinstance_id\(aq, \(aqname\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.resize_instance.SetFlavorChoiceAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqold_flavor_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb8ac9d0>), (\(aqold_flavor_name\(aq, <django.forms.fields.CharField object at 0x7ff3ba798690>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba798810>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqold_flavor_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb8ac9d0>), (\(aqold_flavor_name\(aq, <django.forms.fields.CharField object at 0x7ff3ba798690>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba798810>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text(extra_context=None)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/instances/_flavors_and_quotas.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba7982d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_flavor_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba798e50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqflavor_choice\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.instances.workflows\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.instances.workflows.update_instance\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.update_instance.AdminUpdateInstance(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstance\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceInfo\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:instances:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstance(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceSecurityGroups\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bd572850>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bd5728d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd572a50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_instance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bd5725d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:instances:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateInstanceInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqinstance_id\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceInfoAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba520cd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba520cd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba520e10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba520650>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bd572290>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqinstance_info\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceSecurityGroups(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateInstanceSecurityGroupsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3ba520790>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqwanted_groups\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqinstance_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba5200d0>
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3ba5206d0>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3ba520510>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3ba520850>
.UNINDENT
.INDENT 7.0
.TP
.B show_roles = False
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.instances.workflows.update_instance.UpdateInstanceSecurityGroupsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba798590>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba520750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_security_groups\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.views\fP Module
.sp
Views for managing Neutron Routers.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_router_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba3dea10>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9516810>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b9516050>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b9531490>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9516cd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.views.DetailView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B failure_url = <django.utils.functional.__proxy__ object at 0x7ff3ba3de090>
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba3decd0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBRouterDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba3debd0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBRoutersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_router_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bbb83e90>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbb83450>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bc42da50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:routers:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbb834d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tabs.InterfacesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_interfaces_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd11ba90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqinterfaces\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.PortsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd11b990>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tabs.RouterDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqrouter_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.routers.tabs.OverviewTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tabs.InterfacesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tabs.ExtraRoutesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs.RulesGridTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs.RouterRulesTab\(aq>)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.ClearGateway(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b8d11848>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b8d118c0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a89d0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqcleargateway\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8e07bb0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d9cc20>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-cleargateway\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqredirect_url\(aq: \(aqhorizon:project:routers:index\(aq, \(aqaction\(aq: <function action at 0x7ff3b8d117d0>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-cleargateway\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b95a89d0>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcleargateway\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.CreateRouter(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_router\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8d115f0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:routers:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a8a90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95a8a90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.DeleteRouter(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, router=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_router\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b8d11578>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d9cbe8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d9cc90>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqredirect_url\(aq: \(aqhorizon:project:routers:index\(aq, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8d11500>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.EditRouter(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:project:routers:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a8850>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95a8850>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.RoutersFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b8d11a28>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, routers, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.RoutersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqRouters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.tables.SetGateway\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tables.ClearGateway\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tables.EditRouter\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tables.DeleteRouter\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.tables.CreateRouter\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tables.DeleteRouter\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tables.RoutersFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b94b0950>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.base_actions = OrderedDict([(\(aqcleargateway\(aq, <ClearGateway: cleargateway>), (\(aqcreate\(aq, <CreateRouter: create>), (\(aqdelete\(aq, <DeleteRouter: delete>), (\(aqfilter\(aq, <RoutersFilterAction: filter>), (\(aqsetgateway\(aq, <SetGateway: setgateway>), (\(aqupdate\(aq, <EditRouter: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqstatus\(aq, <Column: status>), (\(aqdistributed\(aq, <Column: distributed>), (\(aqha\(aq, <Column: ha>), (\(aqext_net\(aq, <Column: ext_net>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.get_object_display(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.SetGateway(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8d11668>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqsetgateway\(aq, \(aqurl\(aq: \(aqhorizon:project:routers:setgateway\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a8c50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsetgateway\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:setgateway\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95a8c50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, router_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.routers.tables.get_external_network(router)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.panel.Routers
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B static can_register()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5a68c90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqrouters\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.forms\fP Module
.sp
Views for managing Neutron Routers.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.forms.CreateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba33fed0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd5b7690>), (\(aqexternal_network\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43450>), (\(aqmode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43d50>), (\(aqha\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43590>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba33fed0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd5b7690>), (\(aqexternal_network\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43450>), (\(aqmode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43d50>), (\(aqha\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43590>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.forms.UpdateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43710>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f434d0>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43a90>), (\(aqmode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43cd0>), (\(aqha\(aq, <django.forms.fields.BooleanField object at 0x7ff3b984d450>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43710>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f434d0>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43a90>), (\(aqmode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43cd0>), (\(aqha\(aq, <django.forms.fields.BooleanField object at 0x7ff3b984d450>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = <django.utils.functional.__proxy__ object at 0x7ff3b984da50>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.ports.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.views.AddInterfaceView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBAddInterface\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b5aa8b90>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/ports/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPortDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/ports/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.views.SetGatewayView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBSetGatewayForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b5aa8bd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/ports/setgateway.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.ports\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.ports.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9588950>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/ports/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.tabs.PortDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqport_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.routers.ports.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.ports.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.ports.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.tables.AddInterface(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.ports.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqadd_router_interface\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8e0d5f0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:routers:addinterface\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbaf3810>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqadd_router_interface\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:addinterface\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbaf3810>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.tables.PortsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqinterfaces\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.RemoveInterface\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.AddInterface\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.RemoveInterface\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc489210>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <AddInterface: create>), (\(aqdelete\(aq, <RemoveInterface: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqfixed_ips\(aq, <Column: fixed_ips>), (\(aqstatus\(aq, <Column: status>), (\(aqdevice_owner\(aq, <Column: device_owner>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.get_object_display(port)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.tables.RemoveInterface(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.ports.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqremove_router_interface\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqfailure_url\(aq: \(aqhorizon:project:routers:detail\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d9c4e8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d9c590>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8e0d758>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqremove_router_interface\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.routers.ports.tables.get_device_owner(port)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.ports.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.forms.AddInterface(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5aa8290>), (\(aqip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b5aa8410>), (\(aqrouter_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8550>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5aa8290>), (\(aqip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b5aa8410>), (\(aqrouter_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8550>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8650>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_subnet_id_choices(request)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.ports.forms.SetGatewayForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5aa8850>), (\(aqrouter_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8950>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8a10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5aa8850>), (\(aqrouter_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8950>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5aa8a10>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_network_id_choices(request)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.extraroutes.views.AddRouterRouteView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAddRouterRoute\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/extensions/routerroutes/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.extraroutes.tabs.ExtraRoutesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_extra_routes_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b92d5910>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqextraroutes\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.ExtraRoutesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.AddRouterRoute(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8e431b8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:routers:addrouterroute\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba32e3d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:addrouterroute\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba32e3d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.ExtraRoutesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqextra_routes\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.RemoveRouterRoute\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.AddRouterRoute\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.RemoveRouterRoute\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbfbbf90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ExtraRoutesTable.base_actions = OrderedDict([(\(aqcreate\(aq, <AddRouterRoute: create>), (\(aqdelete\(aq, <RemoveRouterRoute: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B ExtraRoutesTable.base_columns = OrderedDict([(\(aqdestination\(aq, <Column: destination>), (\(aqnexthop\(aq, <Column: nexthop>)])
.UNINDENT
.INDENT 7.0
.TP
.B ExtraRoutesTable.get_object_display(datum)
Display ExtraRoutes when deleted.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.RemoveRouterRoute(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqfailure_url\(aq: \(aqhorizon:project:routers:detail\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b91ccd38>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b91cc7f8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8e43320>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.extraroutes.forms.AddRouterRoute(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdestination\(aq, <horizon.forms.fields.IPField object at 0x7ff3b57c9510>), (\(aqnexthop\(aq, <horizon.forms.fields.IPField object at 0x7ff3b57c9c10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdestination\(aq, <horizon.forms.fields.IPField object at 0x7ff3b57c9510>), (\(aqnexthop\(aq, <horizon.forms.fields.IPField object at 0x7ff3b57c9c10>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.routerrules.rulemanager\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.rulemanager.RuleObject(rule)
Bases: \fBdict\fP
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.routers.extensions.routerrules.rulemanager.add_rule(request, router_id, newrule, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.routers.extensions.routerrules.rulemanager.format_for_api(rules)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.routers.extensions.routerrules.rulemanager.remove_rules(request, rule_ids, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.routers.extensions.routerrules.rulemanager.routerrule_list(request, **params)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.routerrules.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.views.AddRouterRuleView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBAddRouterRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8732150>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/extensions/routerrules/create.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.routerrules\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs.RouterRulesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_routerrules_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd11bdd0>
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqrouterrules\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.RouterRulesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs.RulesGridTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_routerrules_data(checksupport=False)
.UNINDENT
.INDENT 7.0
.TP
.B get_routerrulesgrid_data(rules)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd11bf90>
.UNINDENT
.INDENT 7.0
.TP
.B render()
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqrulesgrid\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/extensions/routerrules/grid.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.AddRouterRule(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8d2e758>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:routers:addrouterrule\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd27ef10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:routers:addrouterrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd27ef10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.RemoveRouterRule(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqfailure_url\(aq: \(aqhorizon:project:routers:detail\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d9cde0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8c60088>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8d2e8c0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_router\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.RouterRulesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqrouterrules\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.RemoveRouterRule\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.AddRouterRule\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tables.RemoveRouterRule\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9d0b690>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RouterRulesTable.base_actions = OrderedDict([(\(aqcreate\(aq, <AddRouterRule: create>), (\(aqdelete\(aq, <RemoveRouterRule: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B RouterRulesTable.base_columns = OrderedDict([(\(aqsource\(aq, <Column: source>), (\(aqdestination\(aq, <Column: destination>), (\(aqaction\(aq, <Column: action>), (\(aqnexthops\(aq, <Column: nexthops>)])
.UNINDENT
.INDENT 7.0
.TP
.B RouterRulesTable.get_object_display(rule)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.routers.extensions.routerrules.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.forms.AddRouterRule(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqsource\(aq, <openstack_dashboard.dashboards.project.routers.extensions.routerrules.forms.RuleCIDRField object at 0x7ff3b555b2d0>), (\(aqdestination\(aq, <openstack_dashboard.dashboards.project.routers.extensions.routerrules.forms.RuleCIDRField object at 0x7ff3b555b3d0>), (\(aqaction\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b555b450>), (\(aqnexthops\(aq, <horizon.forms.fields.MultiIPField object at 0x7ff3b555b550>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b555b610>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqsource\(aq, <openstack_dashboard.dashboards.project.routers.extensions.routerrules.forms.RuleCIDRField object at 0x7ff3b555b2d0>), (\(aqdestination\(aq, <openstack_dashboard.dashboards.project.routers.extensions.routerrules.forms.RuleCIDRField object at 0x7ff3b555b3d0>), (\(aqaction\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b555b450>), (\(aqnexthops\(aq, <horizon.forms.fields.MultiIPField object at 0x7ff3b555b550>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b555b610>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:routers:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.routers.extensions.routerrules.forms.RuleCIDRField(*args, **kwargs)
Bases: \fBhorizon.forms.fields.IPField\fP
.sp
Extends IPField to allow (\(aqany\(aq,\(aqexternal\(aq) keywords and requires CIDR
.INDENT 7.0
.TP
.B validate(value)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.AddMemberView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddMember\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.AddMonitorView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddMonitor\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.AddPMAssociationView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddPMAssociation\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.AddPoolView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddPool\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.AddVipView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddVip\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.DeletePMAssociationView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBDeletePMAssociation\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82db310>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBLoadBalancerTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.MemberDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82db790>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBMemberDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.MonitorDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82dbb90>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBMonitorDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.PoolDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82db4d0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPoolDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.UpdateMemberView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqmember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateMember\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_pool_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b82dbf90>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82db350>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b82db610>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:loadbalancers:updatemember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b82db450>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/updatemember.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.UpdateMonitorView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqmonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateMonitor\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_monitor_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b8435dd0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b84358d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b8435110>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:loadbalancers:updatemonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b8435bd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/updatemonitor.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.UpdatePoolView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqpool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdatePool\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_pool_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b82db510>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82dbe50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b82db490>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:loadbalancers:updatepool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b82db710>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/updatepool.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.UpdateVipView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqvip\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateVip\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_vip_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b82db990>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82db410>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b82dbdd0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:loadbalancers:updatevip\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b82db690>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/updatevip.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.views.VipDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82db090>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBVipDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.models\fP Module
.sp
Stub file to work around django bug: \fI\%https://code.djangoproject.com/ticket/7198\fP
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.LoadBalancerTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqlbtabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.PoolsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.MembersTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.MonitorsTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.MemberDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b84d48d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmemberdetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/_member_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.MemberDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqmembertabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.MemberDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.MembersTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_memberstable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b65debd0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmembers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.MembersTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.MonitorDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b81cc810>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmonitordetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/_monitor_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.MonitorDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqmonitortabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.MonitorDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.MonitorsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_monitorstable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b65de110>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmonitors\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.MonitorsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.PoolDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b81cc210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqpooldetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/_pool_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.PoolDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqpooltabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.PoolDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.PoolsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_poolstable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b65de190>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqpools\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.PoolsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.VipDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b81ccf90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvipdetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/loadbalancers/_vip_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tabs.VipDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqviptabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tabs.VipDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.AddMemberLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_member\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddmember\(aq, \(aqurl\(aq: \(aqhorizon:project:loadbalancers:addmember\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e12f90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddmember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_member\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:loadbalancers:addmember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e12f90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.AddMonitorLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_health_monitor\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddmonitor\(aq, \(aqurl\(aq: \(aqhorizon:project:loadbalancers:addmonitor\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f090>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddmonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_health_monitor\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:loadbalancers:addmonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f090>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.AddPMAssociationLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_pool_health_monitor\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b612e0c8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddassociation\(aq, \(aqurl\(aq: \(aqhorizon:project:loadbalancers:addassociation\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f0d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddassociation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_pool_health_monitor\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:loadbalancers:addassociation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f0d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.AddPoolLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_pool\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddpool\(aq, \(aqurl\(aq: \(aqhorizon:project:loadbalancers:addpool\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e12bd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddpool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_pool\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:loadbalancers:addpool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e12bd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.AddVIPFloatingIP(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.sp
Add floating ip to VIP
.sp
This class is extremely similar to AssociateIP from
the instances page
.INDENT 7.0
.TP
.B allowed(request, pool)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqnetwork:associate_floating_ip\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b612ed70>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b612e050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqlink\(aq, \(aqname\(aq: \(aqassociate\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:floating_ips:associate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7fe10>, \(aq__doc__\(aq: \(aqAdd floating ip to VIP\en\en    This class is extremely similar to AssociateIP from\en    the instances page\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqnetwork:associate_floating_ip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:floating_ips:associate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7fe10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.AddVipLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_vip\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b612a398>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b612a758>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddvip\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e12810>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(pool)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddvip\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_vip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e12810>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.DeleteMemberLink(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_member\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeletemember\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b6e26f30>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b690c408>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b612ab90>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletemember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_member\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.DeleteMonitorLink(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_health_monitor\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeletemonitor\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b690cd38>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b690c360>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b612ab18>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletemonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_health_monitor\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.DeletePMAssociationLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_pool_health_monitor\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b612e140>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqremove\(aq, \(aqname\(aq: \(aqdeleteassociation\(aq, \(aqurl\(aq: \(aqhorizon:project:loadbalancers:deleteassociation\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-danger\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f310>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-danger\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqremove\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeleteassociation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_pool_health_monitor\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:loadbalancers:deleteassociation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f310>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.DeletePoolLink(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_pool\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b612a8c0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeletepool\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b690c9b8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b690cec0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b612a848>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletepool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_pool\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.DeleteVipLink(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_vip\(aq),), \(aqsingle\(aq: <function single at 0x7ff3b612a668>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b612a5f0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aqget_help_text\(aq: <function get_help_text at 0x7ff3b612a7d0>, \(aqname\(aq: \(aqdeletevip\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqpreempt\(aq: True, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f750>, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text(vip_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletevip\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_vip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B preempt = True
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f750>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.MembersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqmemberstable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.UpdateMemberLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeleteMemberLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateMemberRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.AddMemberLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeleteMemberLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5df2c10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B MembersTable.base_actions = OrderedDict([(\(aqaddmember\(aq, <AddMemberLink: addmember>), (\(aqdeletemember\(aq, <DeleteMemberLink: deletemember>), (\(aqupdatemember\(aq, <UpdateMemberLink: updatemember>)])
.UNINDENT
.INDENT 7.0
.TP
.B MembersTable.base_columns = OrderedDict([(\(aqaddress\(aq, <Column: address>), (\(aqprotocol_port\(aq, <Column: protocol_port>), (\(aqweight\(aq, <Column: weight>), (\(aqpool_name\(aq, <Column: pool_name>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.MonitorsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqmonitorstable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.UpdateMonitorLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeleteMonitorLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.AddMonitorLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeleteMonitorLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5de51d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B MonitorsTable.base_actions = OrderedDict([(\(aqaddmonitor\(aq, <AddMonitorLink: addmonitor>), (\(aqdeletemonitor\(aq, <DeleteMonitorLink: deletemonitor>), (\(aqupdatemonitor\(aq, <UpdateMonitorLink: updatemonitor>)])
.UNINDENT
.INDENT 7.0
.TP
.B MonitorsTable.base_columns = OrderedDict([(\(aqmonitor_type\(aq, <Column: monitor_type>), (\(aqdelay\(aq, <Column: delay>), (\(aqtimeout\(aq, <Column: timeout>), (\(aqmax_retries\(aq, <Column: max_retries>), (\(aqdetails\(aq, <Column: details>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.PoolsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B METHOD_DISPLAY_CHOICES = ((\(aqround_robin\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b5ec01d0>), (\(aqleast_connections\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b5ec0f50>), (\(aqsource_ip\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b5ec0550>))
.UNINDENT
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqpoolstable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.UpdatePoolLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.AddVipLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.UpdateVipLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeleteVipLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.AddPMAssociationLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeletePMAssociationLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeletePoolLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.AddVIPFloatingIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.RemoveVIPFloatingIP\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdatePoolsRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.AddPoolLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables.DeletePoolLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5f65990>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PoolsTable.base_actions = OrderedDict([(\(aqaddassociation\(aq, <AddPMAssociationLink: addassociation>), (\(aqaddpool\(aq, <AddPoolLink: addpool>), (\(aqaddvip\(aq, <AddVipLink: addvip>), (\(aqassociate\(aq, <AddVIPFloatingIP: associate>), (\(aqdeleteassociation\(aq, <DeletePMAssociationLink: deleteassociation>), (\(aqdeletepool\(aq, <DeletePoolLink: deletepool>), (\(aqdeletevip\(aq, <DeleteVipLink: deletevip>), (\(aqdisassociate\(aq, <RemoveVIPFloatingIP: disassociate>), (\(aqupdatepool\(aq, <UpdatePoolLink: updatepool>), (\(aqupdatevip\(aq, <UpdateVipLink: updatevip>)])
.UNINDENT
.INDENT 7.0
.TP
.B PoolsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqprovider\(aq, <Column: provider>), (\(aqsubnet_name\(aq, <Column: subnet_name>), (\(aqprotocol\(aq, <Column: protocol>), (\(aqmethod\(aq, <Column: method>), (\(aqstatus\(aq, <Column: status>), (\(aqvip_name\(aq, <Column: vip_name>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.RemoveVIPFloatingIP(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.sp
Remove floating IP from VIP
.sp
This class is extremely similar to the project instance table
SimpleDisassociateIP feature, but just different enough to not
be able to share much code
.INDENT 7.0
.TP
.B allowed(request, pool)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqnetwork:disassociate_floating_ip\(aq),), \(aqsingle\(aq: <function single at 0x7ff3b612e668>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b612e5f0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aqicon\(aq: \(aqunlink\(aq, \(aqname\(aq: \(aqdisassociate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqpreempt\(aq: True, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-disassociate\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7fb10>, \(aq__doc__\(aq: \(aqRemove floating IP from VIP\en\en    This class is extremely similar to the project instance table\en    SimpleDisassociateIP feature, but just different enough to not\en    be able to share much code\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-disassociate\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqunlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdisassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqnetwork:disassociate_floating_ip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B preempt = True
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, pool_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7fb10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.UpdateMemberLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_member\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b612e230>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdatemember\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f610>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(member)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdatemember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_member\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.UpdateMemberRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, member_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.UpdateMonitorLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_health_monitor\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b612e1b8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdatemonitor\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f510>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(monitor)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdatemonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_health_monitor\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f510>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.UpdatePoolLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_pool\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b612e410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdatepool\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7fad0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(pool)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdatepool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_pool\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7fad0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.UpdatePoolsRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, pool_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.tables.UpdateVipLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.loadbalancers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_vip\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b612e398>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b612eb18>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdatevip\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5e7f5d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(pool)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdatevip\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_vip\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5e7f5d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.loadbalancers.tables.get_member_link(member)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.loadbalancers.tables.get_monitor_details(monitor)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.loadbalancers.tables.get_pool_link(member)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.loadbalancers.tables.get_subnet(pool)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.loadbalancers.tables.get_vip_name(pool)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.utils\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.loadbalancers.utils.get_monitor_display_name(monitor)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddMember(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.workflows.AddMemberStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b8970110>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b89700d0>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8970890>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddmember\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8970090>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddMemberAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpool_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6491ad0>), (\(aqmember_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6491e50>), (\(aqmembers\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b64918d0>), (\(aqaddress\(aq, <horizon.forms.fields.IPField object at 0x7ff3b6491310>), (\(aqweight\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6491690>), (\(aqprotocol_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6491dd0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64913d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpool_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6491ad0>), (\(aqmember_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6491e50>), (\(aqmembers\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b64918d0>), (\(aqaddress\(aq, <horizon.forms.fields.IPField object at 0x7ff3b6491310>), (\(aqweight\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6491690>), (\(aqprotocol_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6491dd0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64913d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b8970c10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8970a10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b8970d10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddmemberaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddMemberStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddMemberAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqpool_id\(aq, \(aqmember_type\(aq, \(aqmembers\(aq, \(aqaddress\(aq, \(aqprotocol_port\(aq, \(aqweight\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddMonitor(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.workflows.AddMonitorStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b83dfd10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b83dff10>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b83dfd90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddmonitor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b83dfa50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddMonitorAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqtype\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8970490>), (\(aqdelay\(aq, <django.forms.fields.IntegerField object at 0x7ff3b92d5310>), (\(aqtimeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9301490>), (\(aqmax_retries\(aq, <django.forms.fields.IntegerField object at 0x7ff3b927eb50>), (\(aqhttp_method\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72aac50>), (\(aqurl_path\(aq, <django.forms.fields.CharField object at 0x7ff3b72aaf50>), (\(aqexpected_codes\(aq, <django.forms.fields.RegexField object at 0x7ff3b72aa5d0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72aab90>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqtype\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8970490>), (\(aqdelay\(aq, <django.forms.fields.IntegerField object at 0x7ff3b92d5310>), (\(aqtimeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9301490>), (\(aqmax_retries\(aq, <django.forms.fields.IntegerField object at 0x7ff3b927eb50>), (\(aqhttp_method\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72aac50>), (\(aqurl_path\(aq, <django.forms.fields.CharField object at 0x7ff3b72aaf50>), (\(aqexpected_codes\(aq, <django.forms.fields.RegexField object at 0x7ff3b72aa5d0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72aab90>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b95febd0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b95fea10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b83df810>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddmonitoraction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddMonitorStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddMonitorAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqtype\(aq, \(aqdelay\(aq, \(aqtimeout\(aq, \(aqmax_retries\(aq, \(aqhttp_method\(aq, \(aqurl_path\(aq, \(aqexpected_codes\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddPMAssociation(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.workflows.AddPMAssociationStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b83df9d0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b83df690>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b83df750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddassociation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b83dff50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddPMAssociationAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmonitor_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b83dfe90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmonitor_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b83dfe90>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b83dfa10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b83df290>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_monitor_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b83dfb10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddpmassociationaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddPMAssociationStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddPMAssociationAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqmonitor_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqpool_id\(aq, \(aqpool_name\(aq, \(aqpool_monitors\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddPool(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.workflows.AddPoolStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b91c8790>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b91c8550>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b91c8890>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddpool\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b91c8810>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddPoolAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b64fc6d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b64fcf10>), (\(aqprovider\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fcc90>), (\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fc150>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fc190>), (\(aqlb_method\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fcf90>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fcb10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b64fc6d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b64fcf10>), (\(aqprovider\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fcc90>), (\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fc150>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fc190>), (\(aqlb_method\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fcf90>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b64fcb10>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/loadbalancers/_create_pool_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b64fcbd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b91c81d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddpoolaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddPoolStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddPoolAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqsubnet_id\(aq, \(aqprovider\(aq, \(aqprotocol\(aq, \(aqlb_method\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddVip(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.workflows.AddVipStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b8639610>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3be20a9d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8f2ef50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddvip\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8639ad0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddVipAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b91c8110>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b91c8ad0>), (\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b91c8750>), (\(aqaddress\(aq, <horizon.forms.fields.IPField object at 0x7ff3b91c83d0>), (\(aqprotocol_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b91c8f10>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b91c8c10>), (\(aqsession_persistence\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba68e650>), (\(aqcookie_name\(aq, <django.forms.fields.CharField object at 0x7ff3ba68e8d0>), (\(aqconnection_limit\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7f1be90>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b7f1bc50>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b91c8110>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b91c8ad0>), (\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b91c8750>), (\(aqaddress\(aq, <horizon.forms.fields.IPField object at 0x7ff3b91c83d0>), (\(aqprotocol_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b91c8f10>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b91c8c10>), (\(aqsession_persistence\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba68e650>), (\(aqcookie_name\(aq, <django.forms.fields.CharField object at 0x7ff3ba68e8d0>), (\(aqconnection_limit\(aq, <django.forms.fields.IntegerField object at 0x7ff3b7f1be90>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b7f1bc50>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/loadbalancers/_create_vip_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7f1b110>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b8f2e8d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddvipaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.AddVipStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddVipAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqsubnet_id\(aq, \(aqaddress\(aq, \(aqprotocol_port\(aq, \(aqprotocol\(aq, \(aqsession_persistence\(aq, \(aqcookie_name\(aq, \(aqconnection_limit\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqpool_id\(aq, \(aqsubnet\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.DeletePMAssociation(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.loadbalancers.workflows.DeletePMAssociationStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b82db750>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b82db050>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b82dba50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdeleteassociation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b82db2d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.DeletePMAssociationAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmonitor_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b83df390>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmonitor_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b83df390>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b82dbc90>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b82dbd90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_monitor_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b82dbed0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqdeletepmassociationaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.workflows.DeletePMAssociationStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBDeletePMAssociationAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqmonitor_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqpool_id\(aq, \(aqpool_name\(aq, \(aqpool_monitors\(aq)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.panel.LoadBalancer
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B allowed(context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5dae190>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqloadbalancers\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.loadbalancers.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.forms.UpdateMember(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmember_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5de55d0>), (\(aqpool_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5de5710>), (\(aqweight\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5de5150>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5df2ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmember_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5de55d0>), (\(aqpool_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5de5710>), (\(aqweight\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5de5150>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5df2ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.forms.UpdateMonitor(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmonitor_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5df2e50>), (\(aqdelay\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5e0dc90>), (\(aqtimeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5e0d290>), (\(aqmax_retries\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5e0d4d0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5e8ed10>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmonitor_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5df2e50>), (\(aqdelay\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5e0dc90>), (\(aqtimeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5e0d290>), (\(aqmax_retries\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5e0d4d0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5e8ed10>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.forms.UpdatePool(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6134b10>), (\(aqpool_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5ef4d10>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b5ef4490>), (\(aqlb_method\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5ef44d0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5e71950>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6134b10>), (\(aqpool_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5ef4d10>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b5ef4490>), (\(aqlb_method\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5ef44d0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5e71950>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.loadbalancers.forms.UpdateVip(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b5e716d0>), (\(aqvip_id\(aq, <django.forms.fields.CharField object at 0x7ff3b6bf8950>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b5e26910>), (\(aqpool_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5e26410>), (\(aqsession_persistence\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6144750>), (\(aqcookie_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5e26a90>), (\(aqconnection_limit\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5de5250>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5de5050>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b5e716d0>), (\(aqvip_id\(aq, <django.forms.fields.CharField object at 0x7ff3b6bf8950>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b5e26910>), (\(aqpool_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5e26410>), (\(aqsession_persistence\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6144750>), (\(aqcookie_name\(aq, <django.forms.fields.CharField object at 0x7ff3b5e26a90>), (\(aqconnection_limit\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5de5250>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5de5050>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:loadbalancers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.views\fP Module
.sp
Views for managing Images and Snapshots.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba32ebd0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBImagesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/images/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.images.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.images.utils\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.utils.get_available_images(request, project_id=None, images_cache=None)
Returns a list of images that are public or owned by the given
project_id. If project_id is not specified, only public images
are returned.
.INDENT 7.0
.TP
.B Parameters
\fBimages_cache\fP \-\- An optional dict\-like object in which to
cache public and per\-project id image metadata.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.utils.image_field_data(request, include_empty_option=False)
Returns a list of tuples of all images.
.sp
Generates a sorted list of images available. And returns a list of
(id, name) tuples.
.INDENT 7.0
.TP
.B Parameters
.INDENT 7.0
.IP \(bu 2
\fBrequest\fP \-\- django http request object
.IP \(bu 2
\fBinclude_empty_option\fP \-\- flag to include a empty tuple in the front of
the list
.UNINDENT
.TP
.B Returns
list of (id, name) tuples
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.panel.Images
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7f1b310>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.image\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqimages\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.images.views\fP Module
.sp
Views for managing images.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqimage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateImageForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_image_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bbb83690>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8e50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8250>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2d80d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8550>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/images/images/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8290>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBImageDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/images/images/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateImageForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_image_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8950>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8710>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8310>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:images:images:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8c50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/images/images/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.images\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.images.images.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tabs.ImageDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqimage_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.images.images.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb71fbd0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/images/images/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.images.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.images.images.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.CreateImage(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqadd_image\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:images:images:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc42abd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqadd_image\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:images:images:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc42abd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.CreateVolumeFromImage(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b9a9cd70>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9a9cc08>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqcreate_volume_from_image\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc42a910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate_volume_from_image\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc42a910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.DeleteImage(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqdelete_image\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b9a9ced8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bccdf790>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9cff5c8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9b55e18>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b9a9cf50>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bccdf790>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqdelete_image\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.EditImage(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqmodify_image\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9a9ccf8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:images:images:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc42aa10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqmodify_image\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:images:images:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc42aa10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.ImagesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B launch_actions = (<class \(aqopenstack_dashboard.dashboards.project.images.images.tables.LaunchImage\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqimages\(aq
.UNINDENT
.INDENT 7.0
.TP
.B pagination_param = \(aqimage_marker\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.images.images.tables.LaunchImage\(aq>, <class \(aqopenstack_dashboard.dashboards.project.images.images.tables.CreateVolumeFromImage\(aq>, <class \(aqopenstack_dashboard.dashboards.project.images.images.tables.EditImage\(aq>, <class \(aqopenstack_dashboard.dashboards.project.images.images.tables.UpdateMetadata\(aq>, <class \(aqopenstack_dashboard.dashboards.project.images.images.tables.DeleteImage\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.images.images.tables.OwnerFilter\(aq>, <class \(aqopenstack_dashboard.dashboards.project.images.images.tables.CreateImage\(aq>, <class \(aqopenstack_dashboard.dashboards.project.images.images.tables.DeleteImage\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba26b410>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ImagesTable.STATUS_CHOICES = ((\(aqactive\(aq, True), (\(aqsaving\(aq, None), (\(aqqueued\(aq, None), (\(aqpending_delete\(aq, None), (\(aqkilled\(aq, False), (\(aqdeleted\(aq, False), (\(aqdeactivated\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B ImagesTable.STATUS_DISPLAY_CHOICES = ((\(aqactive\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4c90>), (\(aqsaving\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4550>), (\(aqqueued\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4cd0>), (\(aqpending_delete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4710>), (\(aqkilled\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4650>), (\(aqdeleted\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4b10>), (\(aqdeactivated\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4690>))
.UNINDENT
.INDENT 7.0
.TP
.B ImagesTable.TYPE_CHOICES = ((\(aqimage\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4390>), (\(aqsnapshot\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bccb4910>))
.UNINDENT
.INDENT 7.0
.TP
.B ImagesTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateImage: create>), (\(aqcreate_volume_from_image\(aq, <CreateVolumeFromImage: create_volume_from_image>), (\(aqdelete\(aq, <DeleteImage: delete>), (\(aqedit\(aq, <EditImage: edit>), (\(aqfilter\(aq, <OwnerFilter: filter>), (\(aqlaunch_image\(aq, <LaunchImage: launch_image>), (\(aqupdate_metadata\(aq, <UpdateMetadata: update_metadata>)])
.UNINDENT
.INDENT 7.0
.TP
.B ImagesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqimage_type\(aq, <Column: image_type>), (\(aqstatus\(aq, <Column: status>), (\(aqpublic\(aq, <Column: public>), (\(aqprotected\(aq, <Column: protected>), (\(aqdisk_format\(aq, <Column: disk_format>), (\(aqsize\(aq, <Column: size>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.LaunchImage(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba122f50>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba122b90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch_image\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9c8d550>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch_image\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:launch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9c8d550>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.LaunchImageNG(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.tables.LaunchImage\fP
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b9a9cb18>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba122b90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3b9a9c668>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch_image_ng\(aq, \(aqurl\(aq: \(aqhorizon:project:images:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-launch\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9c8d0d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-launch\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch_image_ng\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:images:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9c8d0d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.OwnerFilter(**kwargs)
Bases: \fBhorizon.tables.actions.FixedFilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_fixed_buttons\(aq: <function get_fixed_buttons at 0x7ff3b98d25f0>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqcategorize\(aq: <function categorize at 0x7ff3b98d2500>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea067d0>, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqfilter\(aq: <function filter at 0x7ff3bea06848>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aq__doc__\(aq: \(aqA filter action with fixed buttons.\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B categorize(table, images)
.UNINDENT
.INDENT 7.0
.TP
.B get_fixed_buttons()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.UpdateMetadata(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B attrs = {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.images.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b9a9c7d0>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3b98d2b90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3b9a9cc80>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_metadata\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc42a8d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_metadata\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc42a8d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, image_id)
.UNINDENT
.INDENT 7.0
.TP
.B load_cells(image=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.tables.filter_tenant_ids(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.tables.filter_tenants()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.tables.get_format(image)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.tables.get_image_categories(im, user_tenant_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.tables.get_image_name(image)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.tables.get_image_type(image)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.images.forms\fP Module
.sp
Views for managing images.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.forms.CreateImageForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5610>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5250>), (\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bdc0d310>), (\(aqimage_url\(aq, <django.forms.fields.URLField object at 0x7ff3bcbd0cd0>), (\(aqimage_file\(aq, <django.forms.fields.FileField object at 0x7ff3bb96a4d0>), (\(aqkernel\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a1d0>), (\(aqramdisk\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a850>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a190>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bb96a690>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae150>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae9d0>), (\(aqis_copying\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb50>), (\(aqis_public\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aedd0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb10>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5610>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5250>), (\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bdc0d310>), (\(aqimage_url\(aq, <django.forms.fields.URLField object at 0x7ff3bcbd0cd0>), (\(aqimage_file\(aq, <django.forms.fields.FileField object at 0x7ff3bb96a4d0>), (\(aqkernel\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a1d0>), (\(aqramdisk\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a850>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a190>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bb96a690>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae150>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae9d0>), (\(aqis_copying\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb50>), (\(aqis_public\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aedd0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.images.forms.UpdateImageForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba7ae410>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc930d90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc930990>), (\(aqkernel\(aq, <django.forms.fields.CharField object at 0x7ff3bc930110>), (\(aqramdisk\(aq, <django.forms.fields.CharField object at 0x7ff3bc930f90>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bc930810>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bba84250>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84050>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84fd0>), (\(aqpublic\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba847d0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba84210>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba7ae410>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc930d90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc930990>), (\(aqkernel\(aq, <django.forms.fields.CharField object at 0x7ff3bc930110>), (\(aqramdisk\(aq, <django.forms.fields.CharField object at 0x7ff3bc930f90>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bc930810>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bba84250>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84050>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84fd0>), (\(aqpublic\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba847d0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba84210>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.images.images.forms.create_image_metadata(data)
Use the given dict of image form data to generate the metadata used for
creating the image in glance.
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.snapshots.views\fP Module
.sp
Views for managing instance snapshots.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.snapshots.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateSnapshot\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_snapshot_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba7a9050>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_snapshot_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba7a9410>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba7a9690>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:images:snapshots:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba7a9250>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/images/snapshots/create.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.images.snapshots\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.images.snapshots.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.images.snapshots.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.images.snapshots.forms.CreateSnapshot(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3b7aa78d0>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7aa7790>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3b7aa78d0>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7aa7790>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.vpn.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.AddIKEPolicyView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddIKEPolicy\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.AddIPSecPolicyView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddIPSecPolicy\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.AddIPSecSiteConnectionView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddIPSecSiteConnection\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.AddVPNServiceView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddVPNService\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.IKEPolicyDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b84983d0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBIKEPolicyDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.IPSecPolicyDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8498d90>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBIPSecPolicyDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.IPSecSiteConnectionDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8498790>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBIPSecSiteConnectionDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.IndexView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b5c058d0>
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBVPNTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.UpdateIKEPolicyView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateIKEPolicy\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_ikepolicy_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b630b490>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b630b8d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b630b990>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:vpn:update_ikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b630b610>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/update_ikepolicy.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.UpdateIPSecPolicyView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateIPSecPolicy\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_ipsecpolicy_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b630b950>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8ee1890>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b8ee11d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:vpn:update_ipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b8ee1390>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/update_ipsecpolicy.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.UpdateIPSecSiteConnectionView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateIPSecSiteConnection\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_ipsecsiteconnection_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b8ee1050>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8ee1d50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b8ee12d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:vpn:update_ipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b8ee1c10>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/update_ipsecsiteconnection.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.UpdateVPNServiceView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqvpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateVPNService\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_vpnservice_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b630b510>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b630b910>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b630bc50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:vpn:update_vpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b630b710>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/update_vpnservice.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.views.VPNServiceDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b84989d0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBVPNServiceDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.vpn\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.vpn.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IKEPoliciesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_ikepoliciestable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b61ae2d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqikepolicies\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.IKEPoliciesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IKEPolicyDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5b4a6d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqikepolicydetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/_ikepolicy_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IKEPolicyDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqikepolicytabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.IKEPolicyDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IPSecPoliciesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_ipsecpoliciestable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b61ae750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqipsecpolicies\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.IPSecPoliciesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IPSecPolicyDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5b4a210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqipsecpolicydetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/_ipsecpolicy_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IPSecPolicyDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqipsecpolicytabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.IPSecPolicyDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IPSecSiteConnectionDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5b4a750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqipsecsiteconnectiondetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/_ipsecsiteconnection_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IPSecSiteConnectionDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqipsecsiteconnectiontabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.IPSecSiteConnectionDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.IPSecSiteConnectionsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_ipsecsiteconnectionstable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b61ae0d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqipsecsiteconnections\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.IPSecSiteConnectionsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.VPNServiceDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5b4a2d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvpnservicedetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/vpn/_vpnservice_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.VPNServiceDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqvpnservicetabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.VPNServiceDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.VPNServicesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_vpnservicestable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b61aec90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvpnservices\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.VPNServicesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tabs.VPNTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqvpntabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.IKEPoliciesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.IPSecPoliciesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.VPNServicesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tabs.IPSecSiteConnectionsTab\(aq>)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.vpn.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.vpn.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.AddIKEPolicyLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_ikepolicy\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddikepolicy\(aq, \(aqurl\(aq: \(aqhorizon:project:vpn:addikepolicy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5887c90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_ikepolicy\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:vpn:addikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5887c90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.AddIPSecPolicyLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_ipsecpolicy\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddipsecpolicy\(aq, \(aqurl\(aq: \(aqhorizon:project:vpn:addipsecpolicy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b5887a50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_ipsecpolicy\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:vpn:addipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b5887a50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.AddIPSecSiteConnectionLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_ipsec_site_connection\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddipsecsiteconnection\(aq, \(aqurl\(aq: \(aqhorizon:project:vpn:addipsecsiteconnection\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9026d50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_ipsec_site_connection\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:vpn:addipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9026d50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.AddVPNServiceLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_vpnservice\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddvpnservice\(aq, \(aqurl\(aq: \(aqhorizon:project:vpn:addvpnservice\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9026150>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddvpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_vpnservice\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:vpn:addvpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9026150>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.DeleteIKEPolicyLink(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_ikepolicy\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea7848>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeleteikepolicy\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b5006a98>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b50841d8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bea06e60>}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeleteikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_ikepolicy\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.DeleteIPSecPolicyLink(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_ipsecpolicy\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea79b0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeleteipsecpolicy\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b50840f8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b4eb5fd8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bea06e60>}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeleteipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_ipsecpolicy\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.DeleteIPSecSiteConnectionLink(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_ipsec_site_connection\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeleteipsecsiteconnection\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b4eb5d38>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b4eb5ef8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bea06e60>}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeleteipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_ipsec_site_connection\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.DeleteVPNServiceLink(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_vpnservice\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea76e0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeletevpnservice\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b5006cc8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b5006868>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bea06e60>}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletevpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_vpnservice\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.IKEPoliciesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqikepoliciestable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.UpdateIKEPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteIKEPolicyLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.AddIKEPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteIKEPolicyLink\(aq>, <class \(aqhorizon.tables.actions.NameFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b62e7810>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B IKEPoliciesTable.base_actions = OrderedDict([(\(aqaddikepolicy\(aq, <AddIKEPolicyLink: addikepolicy>), (\(aqdeleteikepolicy\(aq, <DeleteIKEPolicyLink: deleteikepolicy>), (\(aqfilter\(aq, <NameFilterAction: filter>), (\(aqupdateikepolicy\(aq, <UpdateIKEPolicyLink: updateikepolicy>)])
.UNINDENT
.INDENT 7.0
.TP
.B IKEPoliciesTable.base_columns = OrderedDict([(\(aqid\(aq, <Column: id>), (\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqauth_algorithm\(aq, <Column: auth_algorithm>), (\(aqencryption_algorithm\(aq, <Column: encryption_algorithm>), (\(aqpfs\(aq, <Column: pfs>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.IPSecPoliciesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqipsecpoliciestable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.UpdateIPSecPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteIPSecPolicyLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.AddIPSecPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteIPSecPolicyLink\(aq>, <class \(aqhorizon.tables.actions.NameFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b61aea10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B IPSecPoliciesTable.base_actions = OrderedDict([(\(aqaddipsecpolicy\(aq, <AddIPSecPolicyLink: addipsecpolicy>), (\(aqdeleteipsecpolicy\(aq, <DeleteIPSecPolicyLink: deleteipsecpolicy>), (\(aqfilter\(aq, <NameFilterAction: filter>), (\(aqupdateipsecpolicy\(aq, <UpdateIPSecPolicyLink: updateipsecpolicy>)])
.UNINDENT
.INDENT 7.0
.TP
.B IPSecPoliciesTable.base_columns = OrderedDict([(\(aqid\(aq, <Column: id>), (\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqauth_algorithm\(aq, <Column: auth_algorithm>), (\(aqencryption_algorithm\(aq, <Column: encryption_algorithm>), (\(aqpfs\(aq, <Column: pfs>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.IPSecSiteConnectionsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqipsecsiteconnectionstable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.UpdateIPSecSiteConnectionLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteIPSecSiteConnectionLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.AddIPSecSiteConnectionLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteIPSecSiteConnectionLink\(aq>, <class \(aqhorizon.tables.actions.NameFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b65bc110>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B IPSecSiteConnectionsTable.STATUS_CHOICES = ((\(aqActive\(aq, True), (\(aqDown\(aq, True), (\(aqError\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B IPSecSiteConnectionsTable.STATUS_DISPLAY_CHOICES = ((\(aqActive\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b637ee10>), (\(aqDown\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b637e790>), (\(aqError\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b637ec10>))
.UNINDENT
.INDENT 7.0
.TP
.B IPSecSiteConnectionsTable.base_actions = OrderedDict([(\(aqaddipsecsiteconnection\(aq, <AddIPSecSiteConnectionLink: addipsecsiteconnection>), (\(aqdeleteipsecsiteconnection\(aq, <DeleteIPSecSiteConnectionLink: deleteipsecsiteconnection>), (\(aqfilter\(aq, <NameFilterAction: filter>), (\(aqupdateipsecsiteconnection\(aq, <UpdateIPSecSiteConnectionLink: updateipsecsiteconnection>)])
.UNINDENT
.INDENT 7.0
.TP
.B IPSecSiteConnectionsTable.base_columns = OrderedDict([(\(aqid\(aq, <Column: id>), (\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqvpnservice_name\(aq, <Column: vpnservice_name>), (\(aqikepolicy_name\(aq, <Column: ikepolicy_name>), (\(aqipsecpolicy_name\(aq, <Column: ipsecpolicy_name>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.UpdateIKEPolicyLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_ikepolicy\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b4ea7c08>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea7c80>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdateikepolicy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9026ad0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(ikepolicy)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdateikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_ikepolicy\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9026ad0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.UpdateIPSecPolicyLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_ipsecpolicy\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b4ea7cf8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea7d70>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdateipsecpolicy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90268d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(ipsecpolicy)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdateipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_ipsecpolicy\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90268d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.UpdateIPSecSiteConnectionLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_ipsec_site_connection\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b4ea7de8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea7e60>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdateipsecsiteconnection\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b637e690>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(ipsecsiteconnection)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdateipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_ipsec_site_connection\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b637e690>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.UpdateVPNServiceLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.vpn.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_vpnservice\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b4ea7b18>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b4ea7b90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdate_vpnservice\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90260d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(vpnservice)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_vpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_vpnservice\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90260d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.tables.VPNServicesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqvpnservicestable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.UpdateVPNServiceLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteVPNServiceLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.vpn.tables.AddVPNServiceLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.tables.DeleteVPNServiceLink\(aq>, <class \(aqhorizon.tables.actions.NameFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7d0c890>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B VPNServicesTable.STATUS_CHOICES = ((\(aqActive\(aq, True), (\(aqDown\(aq, True), (\(aqError\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B VPNServicesTable.STATUS_DISPLAY_CHOICES = ((\(aqActive\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0cf90>), (\(aqDown\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0c810>), (\(aqError\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0ce10>), (\(aqCreated\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0c050>), (\(aqPending_Create\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0c2d0>), (\(aqPending_Update\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0cad0>), (\(aqPending_Delete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0c190>), (\(aqInactive\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b7d0c150>))
.UNINDENT
.INDENT 7.0
.TP
.B VPNServicesTable.base_actions = OrderedDict([(\(aqaddvpnservice\(aq, <AddVPNServiceLink: addvpnservice>), (\(aqdeletevpnservice\(aq, <DeleteVPNServiceLink: deletevpnservice>), (\(aqfilter\(aq, <NameFilterAction: filter>), (\(aqupdate_vpnservice\(aq, <UpdateVPNServiceLink: update_vpnservice>)])
.UNINDENT
.INDENT 7.0
.TP
.B VPNServicesTable.base_columns = OrderedDict([(\(aqid\(aq, <Column: id>), (\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqlocal_ips\(aq, <Column: local_ips>), (\(aqsubnet_name\(aq, <Column: subnet_name>), (\(aqrouter_name\(aq, <Column: router_name>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.vpn.tables.get_local_ips(vpn)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.vpn.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIKEPolicy(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.vpn.workflows.AddIKEPolicyStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b6349ed0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b6349b10>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6349590>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddikepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b6349690>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIKEPolicyAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6c0f490>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6c0f950>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82c9890>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82c9f10>), (\(aqike_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82c9150>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349390>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6349290>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349550>), (\(aqphase1_negotiation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349250>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6c0f490>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6c0f950>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82c9890>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82c9f10>), (\(aqike_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82c9150>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349390>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6349290>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349550>), (\(aqphase1_negotiation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349250>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b6349b50>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6349090>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b6349750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddikepolicyaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIKEPolicyStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddIKEPolicyAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqauth_algorithm\(aq, \(aqencryption_algorithm\(aq, \(aqike_version\(aq, \(aqlifetime_units\(aq, \(aqlifetime_value\(aq, \(aqpfs\(aq, \(aqphase1_negotiation_mode\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecPolicy(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.vpn.workflows.AddIPSecPolicyStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b8271e50>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b8271590>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8271950>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddipsecpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8271410>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecPolicyAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6349790>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b63495d0>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349150>), (\(aqencapsulation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8732110>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8732950>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5762250>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5762810>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5762790>), (\(aqtransform_protocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82711d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6349790>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b63495d0>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6349150>), (\(aqencapsulation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8732110>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8732950>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5762250>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5762810>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5762790>), (\(aqtransform_protocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b82711d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b8271050>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8271110>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b8271510>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddipsecpolicyaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecPolicyStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddIPSecPolicyAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqauth_algorithm\(aq, \(aqencapsulation_mode\(aq, \(aqencryption_algorithm\(aq, \(aqlifetime_units\(aq, \(aqlifetime_value\(aq, \(aqpfs\(aq, \(aqtransform_protocol\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnection(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnectionStep\(aq>, <class \(aqopenstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnectionOptionalStep\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b8498f10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b8498710>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8498210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddipsecsiteconnection\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b84984d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnectionAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b82719d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b62f31d0>), (\(aqvpnservice_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b62f3710>), (\(aqikepolicy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b62f3ed0>), (\(aqipsecpolicy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b62f35d0>), (\(aqpeer_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b62f3550>), (\(aqpeer_id\(aq, <horizon.forms.fields.IPField object at 0x7ff3b69efa50>), (\(aqpeer_cidrs\(aq, <horizon.forms.fields.MultiIPField object at 0x7ff3b5ba2dd0>), (\(aqpsk\(aq, <django.forms.fields.CharField object at 0x7ff3b5ba2ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b82719d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b62f31d0>), (\(aqvpnservice_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b62f3710>), (\(aqikepolicy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b62f3ed0>), (\(aqipsecpolicy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b62f35d0>), (\(aqpeer_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b62f3550>), (\(aqpeer_id\(aq, <horizon.forms.fields.IPField object at 0x7ff3b69efa50>), (\(aqpeer_cidrs\(aq, <horizon.forms.fields.MultiIPField object at 0x7ff3b5ba2dd0>), (\(aqpsk\(aq, <django.forms.fields.CharField object at 0x7ff3b5ba2ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b5ba2f50>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b5ba2910>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_ikepolicy_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_ipsecpolicy_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_vpnservice_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b5ba24d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddipsecsiteconnectionaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnectionOptionalAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqmtu\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5ba2250>), (\(aqdpd_action\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5ba2610>), (\(aqdpd_interval\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5ba26d0>), (\(aqdpd_timeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8498490>), (\(aqinitiator\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8498dd0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b84982d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqmtu\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5ba2250>), (\(aqdpd_action\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5ba2610>), (\(aqdpd_interval\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5ba26d0>), (\(aqdpd_timeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8498490>), (\(aqinitiator\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8498dd0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b84982d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b8498f50>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8498a10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_dpd_action_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b8498990>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddipsecsiteconnectionoptionalaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnectionOptionalStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddIPSecSiteConnectionOptionalAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqdpd_action\(aq, \(aqdpd_interval\(aq, \(aqdpd_timeout\(aq, \(aqinitiator\(aq, \(aqmtu\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddIPSecSiteConnectionStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddIPSecSiteConnectionAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqvpnservice_id\(aq, \(aqikepolicy_id\(aq, \(aqipsecpolicy_id\(aq, \(aqpeer_address\(aq, \(aqpeer_id\(aq, \(aqpeer_cidrs\(aq, \(aqpsk\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddVPNService(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.vpn.workflows.AddVPNServiceStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f990>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f6d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddvpnservice\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f7d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddVPNServiceAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b5c05950>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6c0fc50>), (\(aqrouter_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6c0ffd0>), (\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6c0fad0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6c0f890>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b5c05950>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6c0fc50>), (\(aqrouter_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6c0ffd0>), (\(aqsubnet_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6c0fad0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6c0f890>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f710>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f510>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_router_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_subnet_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b6c0f310>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddvpnserviceaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.workflows.AddVPNServiceStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddVPNServiceAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqsubnet_id\(aq, \(aqrouter_id\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.vpn.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.panel.VPN
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B allowed(context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6aebc50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvpn\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.vpn.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.forms.UpdateIKEPolicy(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8317dd0>), (\(aqikepolicy_id\(aq, <django.forms.fields.CharField object at 0x7ff3b611e650>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b611e3d0>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b611e390>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b611e9d0>), (\(aqike_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72b2110>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b655b510>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b655b990>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b83aa450>), (\(aqphase1_negotiation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbfbb810>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8317dd0>), (\(aqikepolicy_id\(aq, <django.forms.fields.CharField object at 0x7ff3b611e650>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b611e3d0>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b611e390>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b611e9d0>), (\(aqike_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b72b2110>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b655b510>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b655b990>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b83aa450>), (\(aqphase1_negotiation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbfbb810>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.forms.UpdateIPSecPolicy(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b5d5cc50>), (\(aqipsecpolicy_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5d5c710>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b5d5ca10>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5d5cf10>), (\(aqencapsulation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5d5c410>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b61444d0>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6144450>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6144c10>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6caeb50>), (\(aqtransform_protocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b618ab50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b5d5cc50>), (\(aqipsecpolicy_id\(aq, <django.forms.fields.CharField object at 0x7ff3b5d5c710>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b5d5ca10>), (\(aqauth_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5d5cf10>), (\(aqencapsulation_mode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5d5c410>), (\(aqencryption_algorithm\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b61444d0>), (\(aqlifetime_units\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6144450>), (\(aqlifetime_value\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6144c10>), (\(aqpfs\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6caeb50>), (\(aqtransform_protocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b618ab50>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.forms.UpdateIPSecSiteConnection(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b618a910>), (\(aqipsecsiteconnection_id\(aq, <django.forms.fields.CharField object at 0x7ff3b655b790>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b655b410>), (\(aqpeer_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3bbf0a990>), (\(aqpeer_id\(aq, <horizon.forms.fields.IPField object at 0x7ff3bbf0a2d0>), (\(aqpeer_cidrs\(aq, <horizon.forms.fields.MultiIPField object at 0x7ff3b64ef110>), (\(aqpsk\(aq, <django.forms.fields.CharField object at 0x7ff3b64efcd0>), (\(aqmtu\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6251bd0>), (\(aqdpd_action\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5b2b990>), (\(aqdpd_interval\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5b2b910>), (\(aqdpd_timeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5b2be90>), (\(aqinitiator\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5b2b410>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba2e4fd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b618a910>), (\(aqipsecsiteconnection_id\(aq, <django.forms.fields.CharField object at 0x7ff3b655b790>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b655b410>), (\(aqpeer_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3bbf0a990>), (\(aqpeer_id\(aq, <horizon.forms.fields.IPField object at 0x7ff3bbf0a2d0>), (\(aqpeer_cidrs\(aq, <horizon.forms.fields.MultiIPField object at 0x7ff3b64ef110>), (\(aqpsk\(aq, <django.forms.fields.CharField object at 0x7ff3b64efcd0>), (\(aqmtu\(aq, <django.forms.fields.IntegerField object at 0x7ff3b6251bd0>), (\(aqdpd_action\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5b2b990>), (\(aqdpd_interval\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5b2b910>), (\(aqdpd_timeout\(aq, <django.forms.fields.IntegerField object at 0x7ff3b5b2be90>), (\(aqinitiator\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b5b2b410>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba2e4fd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.vpn.forms.UpdateVPNService(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bac73ed0>), (\(aqvpnservice_id\(aq, <django.forms.fields.CharField object at 0x7ff3b6aa97d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57a90>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b617fa50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bac73ed0>), (\(aqvpnservice_id\(aq, <django.forms.fields.CharField object at 0x7ff3b6aa97d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b7b57a90>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b617fa50>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:vpn:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8ee1190>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBVolumeAndSnapshotTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.test\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.test.VolumeAndSnapshotsTests(methodName=\(aqrunTest\(aq)
Bases: \fBopenstack_dashboard.test.helpers.TestCase\fP
.INDENT 7.0
.TP
.B test_index_backup_not_supported()
.UNINDENT
.INDENT 7.0
.TP
.B test_index_backup_supported()
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.tabs.BackupsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP, \fBopenstack_dashboard.dashboards.project.volumes.tabs.VolumeTableMixIn\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_volume_backups_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba33f890>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqbackups_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.volumes.backups.tables.BackupsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.tabs.SnapshotTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_volume_snapshots_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd7e8f90>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqsnapshots_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.VolumeSnapshotsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.tabs.VolumeAndSnapshotTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqvolumes_and_snapshots\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.volumes.tabs.VolumeTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.tabs.SnapshotTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.tabs.BackupsTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.tabs.VolumeTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP, \fBopenstack_dashboard.dashboards.project.volumes.tabs.VolumeTableMixIn\fP
.INDENT 7.0
.TP
.B get_volumes_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbc47910>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvolumes_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.tabs.VolumeTableMixIn
Bases: \fBobject\fP
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.utils\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.utils.availability_zone_list(request)
Utility method to retrieve a list of availability zones.
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.panel.Volumes
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b76db8d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.volume\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvolumes\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.backups.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.views.BackupDetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d54ed0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBBackupDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/backups/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.views.CreateBackupView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateBackupForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9d54c90>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d54910>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b9d54c10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:create_backup\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9d54450>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/backups/create_backup.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.views.RestoreBackupView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBRestoreBackupForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9d547d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6a347d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6a34610>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:backups:restore\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6a34f10>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/backups/restore_backup.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.backups\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.backups.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tabs.BackupDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqbackup_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.volumes.backups.tabs.BackupOverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tabs.BackupOverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b675be90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/backups/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.backups.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.backups.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tables.BackupVolumeNameColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_link_url(backup)
.UNINDENT
.INDENT 7.0
.TP
.B get_raw_data(backup)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tables.BackupsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqvolume_backups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.backups.tables.RestoreBackup\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.backups.tables.DeleteBackup\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = (\(aqstatus\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.backups.tables.DeleteBackup\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95317d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B BackupsTable.STATUS_CHOICES = ((\(aqavailable\(aq, True), (\(aqcreating\(aq, None), (\(aqrestoring\(aq, None), (\(aqerror\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B BackupsTable.STATUS_DISPLAY_CHOICES = ((\(aqavailable\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba308d90>), (\(aqerror\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba308110>), (\(aqcreating\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba308690>), (\(aqrestoring\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba308d50>), (\(aqdeleting\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba308310>), (\(aqerror_restoring\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba308550>))
.UNINDENT
.INDENT 7.0
.TP
.B BackupsTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteBackup: delete>), (\(aqrestore\(aq, <RestoreBackup: restore>)])
.UNINDENT
.INDENT 7.0
.TP
.B BackupsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>), (\(aqvolume_name\(aq, <BackupVolumeNameColumn: volume_name>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tables.DeleteBackup(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B action_past = <django.utils.functional.__proxy__ object at 0x7ff3ba308410>
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.backups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqdata_type_singular\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba308dd0>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqbackup:delete\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b8db20c8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqdata_type_plural\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba308e90>, \(aqaction_past\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba308410>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8db2050>}
.UNINDENT
.INDENT 7.0
.TP
.B data_type_plural = <django.utils.functional.__proxy__ object at 0x7ff3ba308e90>
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular = <django.utils.functional.__proxy__ object at 0x7ff3ba308dd0>
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqbackup:delete\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tables.RestoreBackup(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.backups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqbackup:restore\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8db21b8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8db2140>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqrestore\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba308350>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrestore\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqbackup:restore\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba308350>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, backup_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.backups.tables.get_size(backup)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.backups.forms\fP Module
.sp
Views for managing backups.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.forms.CreateBackupForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8fdc310>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8655e50>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b86555d0>), (\(aqvolume_id\(aq, <django.forms.fields.CharField object at 0x7ff3b8655ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8fdc310>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8655e50>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b86555d0>), (\(aqvolume_id\(aq, <django.forms.fields.CharField object at 0x7ff3b8655ed0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.backups.forms.RestoreBackupForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqvolume_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8655e10>), (\(aqbackup_id\(aq, <django.forms.fields.CharField object at 0x7ff3b8655f50>), (\(aqbackup_name\(aq, <django.forms.fields.CharField object at 0x7ff3b8655f10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqvolume_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8655e10>), (\(aqbackup_id\(aq, <django.forms.fields.CharField object at 0x7ff3b8655f50>), (\(aqbackup_name\(aq, <django.forms.fields.CharField object at 0x7ff3b8655f10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.volumes.views\fP Module
.sp
Views for managing volumes.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.AcceptTransferView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAcceptTransferForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9c50cd0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqaccept_volume_transfer_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9c50c50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b9c50310>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b9c50110>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9c50bd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/accept_transfer.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.CreateSnapshotView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateSnapshotForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bbc98e50>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbc988d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:create_snapshot\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbc98790>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/create_snapshot.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.CreateTransferView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateTransferForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bd30eb50>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_volume_transfer_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9c50450>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b9c50150>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:create_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bd30ea10>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/create_transfer.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bbc98150>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbc98210>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bbc98410>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3bbc98e10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbc98b90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbc98a10>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBVolumeDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.EditAttachmentsView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP, \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAttachForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqattach_volume_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_form(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90ab250>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqattach_volume_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab5d0>
.UNINDENT
.INDENT 7.0
.TP
.B post(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:attach\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b90abfd0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBAttachmentsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/attach.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.EncryptionDetailView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_encryption_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_volume_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab690>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/encryption_detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.ExtendView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBExtendForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bbc98f10>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbc98b10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bbc98ad0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:extend\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbc98f90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/extend.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.RetypeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBRetypeForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90ab7d0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqretype_volume_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab610>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b90ab1d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:retype\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b90abc90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/retype.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.ShowTransferView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_label = <django.utils.functional.__proxy__ object at 0x7ff3b9c50dd0>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBShowTransferForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9c50d90>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqshow_volume_transfer_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9c506d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:show_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9c50710>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/show_transfer.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9c503d0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqupdate_volume_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab190>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9c50b50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/update.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.views.UploadToImageView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUploadToImageForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bbc98390>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd30eb90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bbc98d90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:volumes:upload_to_image\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bd30e110>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/upload_to_image.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.volumes\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.volumes.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbc989d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/volumes/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tabs.VolumeDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqvolume_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.volumes.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.AcceptTransfer(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:accept_transfer\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: True, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqexchange\(aq, \(aqname\(aq: \(aqaccept_transfer\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:accept_transfer\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqsingle\(aq: <function single at 0x7ff3b97c0320>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2250>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqexchange\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaccept_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:accept_transfer\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, object_id=None)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:accept_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2250>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.AttachedInstanceColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.sp
Customized column class that does complex processing on the attachments
for a volume instance.
.INDENT 7.0
.TP
.B get_raw_data(attachment)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.AttachmentColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.sp
Customized column class.
.sp
So it that does complex processing on the attachments
for a volume instance.
.INDENT 7.0
.TP
.B get_raw_data(volume)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.AttachmentsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqattachments\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DetachVolume\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DetachVolume\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b984d990>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AttachmentsTable.base_actions = OrderedDict([(\(aqdetach\(aq, <DetachVolume: detach>)])
.UNINDENT
.INDENT 7.0
.TP
.B AttachmentsTable.base_columns = OrderedDict([(\(aqinstance\(aq, <AttachedInstanceColumn: instance>), (\(aqdevice\(aq, <Column: device>)])
.UNINDENT
.INDENT 7.0
.TP
.B AttachmentsTable.get_object_by_id(obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B AttachmentsTable.get_object_display(attachment)
.UNINDENT
.INDENT 7.0
.TP
.B AttachmentsTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.CreateBackup(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqbackup:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b900ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqbackups\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:create_backup\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2090>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqbackups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqbackup:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:create_backup\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2090>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.CreateSnapshot(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:create_snapshot\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9250488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqsnapshots\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:create_snapshot\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab26d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsnapshots\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:create_snapshot\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:create_snapshot\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab26d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.CreateTransfer(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:create_transfer\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9250aa0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqcreate_transfer\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:create_transfer\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2690>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:create_transfer\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:create_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2690>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.CreateVolume(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: True, \(aqallowed\(aq: <function allowed at 0x7ff3b92f6ed8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3b92f6410>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqsingle\(aq: <function single at 0x7ff3b92f6de8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-create\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbb3c7d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-create\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, object_id=None)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbb3c7d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteTransfer(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, volume)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:delete_transfer\(aq),), \(aqsingle\(aq: <function single at 0x7ff3b97c07d0>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b97c0758>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2590>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aqname\(aq: \(aqdelete_transfer\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2710>, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bbab2590>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete_transfer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:delete_transfer\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, volume_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2710>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteVolume(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:delete\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b92f6cf8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8f0a328>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8f0a910>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b92f6b90>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:delete\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.DetachVolume(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:detach_volume\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b8c229b0>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd531250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqdetach\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b90f2d00>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b933ca98>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-detach\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b8c227d0>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-detach\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bd531250>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdetach\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:detach_volume\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.EditAttachments(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b91ce578>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqattachments\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:attach\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2bd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqattachments\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:attach\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2bd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.EditVolume(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:update\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97c0848>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2750>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:update\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2750>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.ExtendVolume(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:extend\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b92f6d70>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqextend\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:extend\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-extend\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba3dea90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-extend\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqextend\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:extend\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:extend\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba3dea90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.LaunchVolume(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b92cdcf8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b92cdd70>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch_volume\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8f2efd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch_volume\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:instances:launch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8f2efd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.RetypeVolume(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:retype\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97c09b0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqretype\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:retype\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2790>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqretype\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:retype\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:retype\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2790>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, volume_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.UploadToImage(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:upload_to_image\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97c0398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqupload_to_image\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:upload_to_image\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbab2310>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupload_to_image\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:upload_to_image\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:upload_to_image\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbab2310>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.VolumePolicyTargetMixin
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aqproject_id\(aq, \(aqos\-vol\-tenant\-attr:tenant_id\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b90776e0>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, volumes, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTableBase\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqvolumes\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.EditVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.ExtendVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.LaunchVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.EditAttachments\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.CreateSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.CreateBackup\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.RetypeVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.UploadToImage\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.CreateTransfer\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteTransfer\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteVolume\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.CreateVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.AcceptTransfer\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9a68290>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B VolumesTable.base_actions = OrderedDict([(\(aqaccept_transfer\(aq, <AcceptTransfer: accept_transfer>), (\(aqattachments\(aq, <EditAttachments: attachments>), (\(aqbackups\(aq, <CreateBackup: backups>), (\(aqcreate\(aq, <CreateVolume: create>), (\(aqcreate_transfer\(aq, <CreateTransfer: create_transfer>), (\(aqdelete\(aq, <DeleteVolume: delete>), (\(aqdelete_transfer\(aq, <DeleteTransfer: delete_transfer>), (\(aqedit\(aq, <EditVolume: edit>), (\(aqextend\(aq, <ExtendVolume: extend>), (\(aqfilter\(aq, <VolumesFilterAction: filter>), (\(aqlaunch_volume\(aq, <LaunchVolume: launch_volume>), (\(aqretype\(aq, <RetypeVolume: retype>), (\(aqsnapshots\(aq, <CreateSnapshot: snapshots>), (\(aqupload_to_image\(aq, <UploadToImage: upload_to_image>)])
.UNINDENT
.INDENT 7.0
.TP
.B VolumesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>), (\(aqvolume_type\(aq, <Column: volume_type>), (\(aqattachments\(aq, <AttachmentColumn: attachments>), (\(aqavailability_zone\(aq, <Column: availability_zone>), (\(aqbootable\(aq, <Column: bootable>), (\(aqencryption\(aq, <Column: encryption>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTableBase(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B STATUS_CHOICES = ((\(aqin\-use\(aq, True), (\(aqavailable\(aq, True), (\(aqcreating\(aq, None), (\(aqerror\(aq, False), (\(aqerror_extending\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B STATUS_DISPLAY_CHOICES = ((\(aqavailable\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbab2990>), (\(aqin\-use\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbab2d90>), (\(aqerror\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbab2c90>), (\(aqcreating\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbab2b10>), (\(aqerror_extending\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbab2810>), (\(aqextending\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbab2e10>), (\(aqattaching\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b94b04d0>), (\(aqdetaching\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b94b0590>), (\(aqdeleting\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b94b0bd0>), (\(aqerror_deleting\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b94b0450>), (\(aqbacking\-up\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b94b0410>), (\(aqrestoring\-backup\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b94b01d0>), (\(aqerror_restoring\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc42dcd0>))
.UNINDENT
.INDENT 7.0
.TP
.B base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.volumes.tables.get_attachment_name(request, attachment)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.volumes.tables.get_encrypted_value(volume)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.volumes.tables.get_size(volume)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.volumes.tables.get_volume_type(volume)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.volumes.forms\fP Module
.sp
Views for managing volumes.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.AcceptTransferForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqtransfer_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d090>), (\(aqauth_key\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d290>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqtransfer_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d090>), (\(aqauth_key\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d290>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.AttachForm(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba2d8050>), (\(aqdevice\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d990>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba2d8050>), (\(aqdevice\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d990>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.CreateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd0d9690>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3ba2a8110>), (\(aqvolume_source_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101a10>), (\(aqsnapshot_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101dd0>), (\(aqimage_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc1019d0>), (\(aqvolume_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101ed0>), (\(aqtype\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101190>), (\(aqsize\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba2d8510>), (\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba2d8850>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd0d9690>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3ba2a8110>), (\(aqvolume_source_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101a10>), (\(aqsnapshot_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101dd0>), (\(aqimage_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc1019d0>), (\(aqvolume_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101ed0>), (\(aqtype\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc101190>), (\(aqsize\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba2d8510>), (\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba2d8850>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_image(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_snapshot(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_volume(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_volumes(request)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B prepare_source_fields_default(request)
.UNINDENT
.INDENT 7.0
.TP
.B prepare_source_fields_if_image_specified(request)
.UNINDENT
.INDENT 7.0
.TP
.B prepare_source_fields_if_snapshot_specified(request)
.UNINDENT
.INDENT 7.0
.TP
.B prepare_source_fields_if_volume_specified(request)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.CreateSnapshotForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d190>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6df50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d190>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6df50>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.CreateTransferForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d250>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9c6d250>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.ExtendForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba226f10>), (\(aqorig_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba2260d0>), (\(aqnew_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba226d90>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba226f10>), (\(aqorig_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba2260d0>), (\(aqnew_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba226d90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.RetypeForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B MIGRATION_POLICY_CHOICES = [(\(aqnever\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba226110>), (\(aqon\-demand\(aq, <django.utils.functional.__proxy__ object at 0x7ff3ba226590>)]
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba226710>), (\(aqvolume_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba226310>), (\(aqmigration_policy\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba226e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba226710>), (\(aqvolume_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba226310>), (\(aqmigration_policy\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba226e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.ShowTransferForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c110>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c150>), (\(aqauth_key\(aq, <django.forms.fields.CharField object at 0x7ff3bc26cad0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c110>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c150>), (\(aqauth_key\(aq, <django.forms.fields.CharField object at 0x7ff3bc26cad0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.UpdateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c510>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c390>), (\(aqbootable\(aq, <django.forms.fields.BooleanField object at 0x7ff3bc168c10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c510>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc26c390>), (\(aqbootable\(aq, <django.forms.fields.BooleanField object at 0x7ff3bc168c10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.volumes.forms.UploadToImageForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc168a50>), (\(aqimage_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc168090>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb7acad0>), (\(aqforce\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba226dd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc168a50>), (\(aqimage_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc168090>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb7acad0>), (\(aqforce\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba226dd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.volumes.forms.availability_zones(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.volumes.volumes.forms.cinder_az_supported(request)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.snapshots.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc17f390>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBSnapshotDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/snapshots/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_snapshot_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bc17f9d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc17f550>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bc17f190>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:volumes:snapshots:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc17f590>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/snapshots/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.snapshots\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.snapshots.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc32a5d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/volumes/snapshots/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tabs.SnapshotDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqsnapshot_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.snapshots.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.volumes.snapshots.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.CreateVolumeFromSnapshot(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b918a410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b918a488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqcreate_from_snapshot\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:volumes:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a8e90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate_from_snapshot\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:volumes:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95a8e90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.DeleteVolumeSnapshot(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aqpolicy_target_attrs\(aq: ((\(aqproject_id\(aq, \(aqos\-extended\-snapshot\-attributes:project_id\(aq),), \(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:delete_snapshot\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b91cc980>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b91cc328>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b918a320>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:delete_snapshot\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aqproject_id\(aq, \(aqos\-extended\-snapshot\-attributes:project_id\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.EditVolumeSnapshot(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, snapshot=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aqpolicy_target_attrs\(aq: ((\(aqproject_id\(aq, \(aqos\-extended\-snapshot\-attributes:project_id\(aq),), \(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume:update_snapshot\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b918a398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:volumes:snapshots:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a8450>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume:update_snapshot\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aqproject_id\(aq, \(aqos\-extended\-snapshot\-attributes:project_id\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:volumes:snapshots:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95a8450>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.LaunchSnapshot(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.LaunchVolume\fP
.INDENT 7.0
.TP
.B allowed(request, snapshot=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b918a140>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b918a1b8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch_snapshot\(aq, \(aqurl\(aq: \(aqhorizon:project:instances:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8f2efd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch_snapshot\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.SnapshotVolumeNameColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_link_url(snapshot)
.UNINDENT
.INDENT 7.0
.TP
.B get_raw_data(snapshot)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, snapshot_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.VolumeSnapshotsFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b918a668>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, snapshots, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.tables.VolumeSnapshotsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTableBase\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqvolume_snapshots\(aq
.UNINDENT
.INDENT 7.0
.TP
.B permissions = [\(aqopenstack.services.volume\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.CreateVolumeFromSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.LaunchSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.EditVolumeSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.DeleteVolumeSnapshot\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = (\(aqstatus\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.VolumeSnapshotsFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.DeleteVolumeSnapshot\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbb83b50>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B VolumeSnapshotsTable.base_actions = OrderedDict([(\(aqcreate_from_snapshot\(aq, <CreateVolumeFromSnapshot: create_from_snapshot>), (\(aqdelete\(aq, <DeleteVolumeSnapshot: delete>), (\(aqedit\(aq, <EditVolumeSnapshot: edit>), (\(aqfilter\(aq, <VolumeSnapshotsFilterAction: filter>), (\(aqlaunch_snapshot\(aq, <LaunchSnapshot: launch_snapshot>)])
.UNINDENT
.INDENT 7.0
.TP
.B VolumeSnapshotsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>), (\(aqvolume_name\(aq, <SnapshotVolumeNameColumn: volume_name>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.volumes.snapshots.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.volumes.snapshots.forms.UpdateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bac39e90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc17fb90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bac39e90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc17fb90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.ngimages.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.ngimages.views.IndexView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B template_name = \(aqproject/ngimages/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.ngimages\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.ngimages.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.ngimages.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.ngimages.panel.NGImages
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b819ea90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.image\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqngimages\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.views\fP Module
.sp
Views for managing Neutron Networks.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.views.CreateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B ajax_template_name = \(aqproject/networks/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateNetwork\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.views.DetailView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_ports_data()
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_subnets_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb828250>
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetsTable\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.ports.tables.PortsTable\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb828f90>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBNetworksTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqnetwork\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateNetwork\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_network_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bb828fd0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb828790>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bb8280d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:networks:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bb828d50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.networks.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.networks.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.CheckNetworkEditable
Bases: \fBobject\fP
.sp
Mixin class to determine the specified network is editable.
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.CreateNetwork(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_network\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b92f6050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:networks:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b97455d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_network\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:networks:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b97455d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.CreateSubnet(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBopenstack_dashboard.dashboards.project.networks.tables.CheckNetworkEditable\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aqpolicy_target_attrs\(aq: ((\(aqnetwork:project_id\(aq, \(aqtenant_id\(aq),), \(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_subnet\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b92f60c8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqsubnet\(aq, \(aqurl\(aq: \(aqhorizon:project:networks:addsubnet\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9745f50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsubnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_subnet\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B policy_target_attrs = ((\(aqnetwork:project_id\(aq, \(aqtenant_id\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:networks:addsubnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9745f50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.DeleteNetwork(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBopenstack_dashboard.dashboards.project.networks.tables.CheckNetworkEditable\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_network\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b90f2a28>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9306670>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b92e8f50>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, network_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_network\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.EditNetwork(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBopenstack_dashboard.dashboards.project.networks.tables.CheckNetworkEditable\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_network\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:project:networks:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b97451d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_network\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:networks:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b97451d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.NetworksFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b92f61b8>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, networks, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.tables.NetworksTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqnetworks\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.networks.tables.EditNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.tables.CreateSubnet\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.tables.DeleteNetwork\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.networks.tables.CreateNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.tables.DeleteNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.tables.NetworksFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc1b7fd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B NetworksTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateNetwork: create>), (\(aqdelete\(aq, <DeleteNetwork: delete>), (\(aqfilter\(aq, <NetworksFilterAction: filter>), (\(aqsubnet\(aq, <CreateSubnet: subnet>), (\(aqupdate\(aq, <EditNetwork: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B NetworksTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqsubnets\(aq, <Column: subnets>), (\(aqshared\(aq, <Column: shared>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.networks.tables.get_subnets(network)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateNetwork(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.networks.workflows.CreateNetworkInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetDetail\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3ba1009d0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3ba100c10>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B get_failure_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba100690>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_network\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3ba100250>
.UNINDENT
.INDENT 7.0
.TP
.B wizard = True
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateNetworkInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateNetworkInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqnet_name\(aq, \(aqadmin_state\(aq, \(aqnet_profile_id\(aq, \(aqwith_subnet\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateNetworkInfoAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3bbb06050>), (\(aqnet_profile_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba167f10>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bac78ed0>), (\(aqwith_subnet\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9eb4f90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3bbb06050>), (\(aqnet_profile_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba167f10>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bac78ed0>), (\(aqwith_subnet\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9eb4f90>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_network_profile_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4f10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba2e43d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b95fe490>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcreatenetworkinfoaction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B widget = <django.forms.widgets.HiddenInput object at 0x7ff3ba167850>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateSubnetDetail(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateSubnetDetailAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqenable_dhcp\(aq, \(aqipv6_modes\(aq, \(aqallocation_pools\(aq, \(aqdns_nameservers\(aq, \(aqhost_routes\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateSubnetDetailAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqenable_dhcp\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9575c10>), (\(aqipv6_modes\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575fd0>), (\(aqallocation_pools\(aq, <django.forms.fields.CharField object at 0x7ff3b9575050>), (\(aqdns_nameservers\(aq, <django.forms.fields.CharField object at 0x7ff3ba100e50>), (\(aqhost_routes\(aq, <django.forms.fields.CharField object at 0x7ff3ba100510>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqenable_dhcp\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9575c10>), (\(aqipv6_modes\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575fd0>), (\(aqallocation_pools\(aq, <django.forms.fields.CharField object at 0x7ff3b9575050>), (\(aqdns_nameservers\(aq, <django.forms.fields.CharField object at 0x7ff3ba100e50>), (\(aqhost_routes\(aq, <django.forms.fields.CharField object at 0x7ff3ba100510>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba1002d0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba100bd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_ipv6_modes_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba100350>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcreatesubnetdetailaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateSubnetInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateSubnetInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqsubnet_name\(aq, \(aqcidr\(aq, \(aqip_version\(aq, \(aqgateway_ip\(aq, \(aqno_gateway\(aq, \(aqsubnetpool\(aq, \(aqprefixlen\(aq, \(aqaddress_source\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.workflows.CreateSubnetInfoAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqsubnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3b95fe090>), (\(aqaddress_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe7d0>), (\(aqsubnetpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95feb10>), (\(aqprefixlen\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe310>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b95754d0>), (\(aqip_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575e50>), (\(aqgateway_ip\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9575950>), (\(aqno_gateway\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95757d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqsubnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3b95fe090>), (\(aqaddress_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe7d0>), (\(aqsubnetpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95feb10>), (\(aqprefixlen\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe310>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b95754d0>), (\(aqip_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575e50>), (\(aqgateway_ip\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9575950>), (\(aqno_gateway\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95757d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_subnetpool_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9575a10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B hide_subnetpool_choices()
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B msg = <django.utils.functional.__proxy__ object at 0x7ff3b95756d0>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9575490>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9575a90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcreatesubnetinfoaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.panel.Networks
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8655310>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnetworks\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.forms.UpdateNetwork(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e8d0>), (\(aqtenant_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e110>), (\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e150>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb97e3d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e8d0>), (\(aqtenant_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e110>), (\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb97e150>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb97e3d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:networks:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.ports.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9020790>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPortDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/ports/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdatePort\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_port_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9020550>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90204d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b9020610>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:networks:editport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/ports/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.ports\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.networks.ports.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9020110>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/ports/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.tabs.PortDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqport_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.networks.ports.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.ports.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.networks.ports.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.tables.PortsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqports\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.networks.ports.tables.UpdatePort\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90756d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_actions = OrderedDict([(\(aqupdate\(aq, <UpdatePort: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqfixed_ips\(aq, <Column: fixed_ips>), (\(aqattached\(aq, <Column: attached>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>), (\(aqmac_state\(aq, <Column: mac_state>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.get_object_display(port)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.tables.UpdatePort(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.ports.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_port\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b91cef50>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:project:networks:editport\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90c2cd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(port)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_port\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:networks:editport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90c2cd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.networks.ports.tables.get_attached(port)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.networks.ports.tables.get_fixed_ips(port)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.ports.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.ports.forms.UpdatePort(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba2a8a90>), (\(aqport_id\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cc50>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cfd0>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb3c990>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba2a8a90>), (\(aqport_id\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cc50>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cfd0>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb3c990>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets.views\fP Module
.sp
Views for managing Neutron Subnets.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.views.CreateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateSubnet\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bab1b850>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBSubnetDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/subnets/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.views.UpdateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateSubnet\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba8b96d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/subnets/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tabs.SubnetDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqsubnet_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.networks.subnets.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tables.CheckNetworkEditable
Bases: \fBobject\fP
.sp
Mixin class to determine the specified network is editable.
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tables.CreateSubnet(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin\fP, \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.CheckNetworkEditable\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_subnet\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8f390c8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8f39050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:networks:addsubnet\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6d10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_subnet\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:networks:addsubnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6d10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tables.DeleteSubnet(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin\fP, \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.CheckNetworkEditable\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_subnet\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9024ef8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8f38408>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8f39140>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_subnet\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP
.INDENT 7.0
.TP
.B get_policy_target(request, datum=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tables.SubnetsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsubnets\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables.UpdateSubnet\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables.DeleteSubnet\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables.CreateSubnet\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables.DeleteSubnet\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8f34ad0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateSubnet: create>), (\(aqdelete\(aq, <DeleteSubnet: delete>), (\(aqupdate\(aq, <UpdateSubnet: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqcidr\(aq, <Column: cidr>), (\(aqip_version\(aq, <Column: ip_version>), (\(aqgateway_ip\(aq, <Column: gateway_ip>)])
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.failure_url = <django.utils.functional.__proxy__ object at 0x7ff3b8f34e10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.tables.UpdateSubnet(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin\fP, \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.CheckNetworkEditable\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.networks.subnets.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_subnet\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8f39488>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:project:networks:editsubnet\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8fa6a10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(subnet)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_subnet\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:networks:editsubnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8fa6a10>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets.utils\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.networks.subnets.utils.get_ipv6_modes_attrs_from_menu(ipv6_modes)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.networks.subnets.utils.get_ipv6_modes_menu_from_attrs(ipv6_ra_mode, ipv6_address_mode)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.networks.subnets.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnet(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateNetwork\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnetInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetDetail\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3ba100fd0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3ba100b90>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B get_failure_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba1004d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_subnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3ba100850>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnetInfo(workflow)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetInfo\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateSubnetInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqnetwork_id\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnetInfoAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetInfoAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqsubnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3b95fe090>), (\(aqaddress_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe7d0>), (\(aqsubnetpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95feb10>), (\(aqprefixlen\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe310>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b95754d0>), (\(aqip_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575e50>), (\(aqgateway_ip\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9575950>), (\(aqno_gateway\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95757d0>), (\(aqwith_subnet\(aq, <django.forms.fields.BooleanField object at 0x7ff3b971bdd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqsubnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3b95fe090>), (\(aqaddress_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe7d0>), (\(aqsubnetpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95feb10>), (\(aqprefixlen\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fe310>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b95754d0>), (\(aqip_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575e50>), (\(aqgateway_ip\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9575950>), (\(aqno_gateway\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95757d0>), (\(aqwith_subnet\(aq, <django.forms.fields.BooleanField object at 0x7ff3b971bdd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba100110>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B msg = <django.utils.functional.__proxy__ object at 0x7ff3ba100c50>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba1003d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba100590>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcreatesubnetinfoaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnet(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateNetwork\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnetInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnetDetail\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b92deb10>
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b92de6d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b92de790>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_subnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b92decd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:networks:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnetDetail(workflow)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetDetail\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateSubnetDetailAction\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnetDetailAction(request, context, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.workflows.CreateSubnetDetailAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqenable_dhcp\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9575c10>), (\(aqipv6_modes\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575fd0>), (\(aqallocation_pools\(aq, <django.forms.fields.CharField object at 0x7ff3b9575050>), (\(aqdns_nameservers\(aq, <django.forms.fields.CharField object at 0x7ff3ba100e50>), (\(aqhost_routes\(aq, <django.forms.fields.CharField object at 0x7ff3ba100510>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqenable_dhcp\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9575c10>), (\(aqipv6_modes\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9575fd0>), (\(aqallocation_pools\(aq, <django.forms.fields.CharField object at 0x7ff3b9575050>), (\(aqdns_nameservers\(aq, <django.forms.fields.CharField object at 0x7ff3ba100e50>), (\(aqhost_routes\(aq, <django.forms.fields.CharField object at 0x7ff3ba100510>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9bc0c50>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9bc0950>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b92deb90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqupdatesubnetdetailaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnetInfo(workflow)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnetInfo\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateSubnetInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqnetwork_id\(aq, \(aqsubnet_id\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnetInfoAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnetInfoAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqsubnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3b95fe090>), (\(aqaddress_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba100790>), (\(aqsubnetpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba100ad0>), (\(aqprefixlen\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9bc0410>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9bc0910>), (\(aqip_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9bc0090>), (\(aqgateway_ip\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9575950>), (\(aqno_gateway\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95757d0>), (\(aqwith_subnet\(aq, <django.forms.fields.BooleanField object at 0x7ff3b971bdd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqsubnet_name\(aq, <django.forms.fields.CharField object at 0x7ff3b95fe090>), (\(aqaddress_source\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba100790>), (\(aqsubnetpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba100ad0>), (\(aqprefixlen\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9bc0410>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9bc0910>), (\(aqip_version\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9bc0090>), (\(aqgateway_ip\(aq, <horizon.forms.fields.IPField object at 0x7ff3b9575950>), (\(aqno_gateway\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95757d0>), (\(aqwith_subnet\(aq, <django.forms.fields.BooleanField object at 0x7ff3b971bdd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9bc04d0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9bc08d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9bc0990>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqupdatesubnetinfoaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.AddFirewallView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_workflow()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04790>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/addfirewall.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddFirewall\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.AddPolicyView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04710>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/addpolicy.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddPolicy\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.AddRouterToFirewallView
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.views.RouterCommonView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAddRouterToFirewall\fP
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e05590>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e05650>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:addrouter\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/add_router_to_firewall.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.AddRuleView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04690>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/addrule.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAddRule\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.FireWallDetailTabs
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.FirewallDetailsView
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.views.FireWallDetailTabs\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e049d0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBFirewallDetailsTabs\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04650>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBFirewallTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/details_tabs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.InsertRuleToPolicyView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBInsertRuleToPolicy\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_policy_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e050d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e051d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6e05150>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:insertrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6e05190>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/insert_rule_to_policy.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.PolicyDetailsView
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.views.FireWallDetailTabs\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04910>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPolicyDetailsTabs\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.RemoveRouterFromFirewallView
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.views.RouterCommonView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBRemoveRouterFromFirewall\fP
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e05710>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e05790>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:removerouter\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/remove_router_from_firewall.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.RemoveRuleFromPolicyView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBRemoveRuleFromPolicy\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_policy_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e05210>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e05390>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6e052d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:removerule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6e05350>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/remove_rule_from_policy.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.RouterCommonView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqfirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_firewall_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6e05410>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6e05510>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.RuleDetailsView
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.views.FireWallDetailTabs\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04850>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBRuleDetailsTabs\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.UpdateFirewallView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqfirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateFirewall\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_firewall_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e04e50>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e05050>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6e04f50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:updatefirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6e04fd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/updatefirewall.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.UpdatePolicyView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdatePolicy\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_policy_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e04c10>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04dd0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6e04d10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:updatepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6e04d90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/updatepolicy.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.views.UpdateRuleView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_rule_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b6e04a90>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b6e04b90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b6e04ad0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:firewalls:updaterule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b6e04b50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/updaterule.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.firewalls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.FirewallDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B failure_url = <django.utils.functional.__proxy__ object at 0x7ff3b72cdcd0>
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b72cdd50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqfirewalldetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/_firewall_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.FirewallDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqfirewalltabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tabs.FirewallDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.FirewallTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqfwtabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tabs.FirewallsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tabs.PoliciesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tabs.RulesTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.FirewallsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_firewallstable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7a383d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqfirewalls\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.FirewallsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.PoliciesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_policiestable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7a38810>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqpolicies\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.PoliciesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.PolicyDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B failure_url = <django.utils.functional.__proxy__ object at 0x7ff3b7684610>
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b769f990>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqpolicydetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/_policy_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.PolicyDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqpolicytabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tabs.PolicyDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.RuleDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B failure_url = <django.utils.functional.__proxy__ object at 0x7ff3b7a38190>
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7a38310>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqruledetails\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/_rule_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.RuleDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqruletabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tabs.RuleDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tabs.RulesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_rulestable_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b84dc950>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqrules\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.RulesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.AddFirewallLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_firewall\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddfirewall\(aq, \(aqurl\(aq: \(aqhorizon:project:firewalls:addfirewall\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8ccd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddfirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_firewall\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:firewalls:addfirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8ccd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.AddPolicyLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_firewall_policy\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddpolicy\(aq, \(aqurl\(aq: \(aqhorizon:project:firewalls:addpolicy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-addpolicy\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8cc50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-addpolicy\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_firewall_policy\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:firewalls:addpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8cc50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.AddRouterToFirewallLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, firewall)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqget_firewall\(aq), (\(aqnetwork\(aq, \(aqadd_router\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b761f488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqaddrouter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8ca50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(firewall)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddrouter\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqget_firewall\(aq), (\(aqnetwork\(aq, \(aqadd_router\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8ca50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.AddRuleLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_firewall_rule\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqaddrule\(aq, \(aqurl\(aq: \(aqhorizon:project:firewalls:addrule\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b96517d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqaddrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_firewall_rule\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:firewalls:addrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b96517d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.DeleteFirewallLink(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_firewall\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeletefirewall\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8618750>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b77e0ef8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b7fbdf50>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletefirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_firewall\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.DeletePolicyLink(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_firewall_policy\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeletepolicy\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b86188a0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7a50a98>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b7fbdd70>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeletepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_firewall_policy\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.DeleteRuleLink(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_firewall_rule\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b7fbdb18>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdeleterule\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7abbd00>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7abbd38>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b7fbdb90>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdeleterule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_firewall_rule\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.FirewallsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B ADMIN_STATE_DISPLAY_CHOICES = ((\(aqUP\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7c50>), (\(aqDOWN\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7690>))
.UNINDENT
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqfirewallstable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.UpdateFirewallLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.DeleteFirewallLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.AddRouterToFirewallLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.RemoveRouterFromFirewallLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.AddFirewallLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.DeleteFirewallLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b882f210>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B FirewallsTable.STATUS_DISPLAY_CHOICES = ((\(aqActive\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7ed0>), (\(aqDown\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7c10>), (\(aqError\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7750>), (\(aqCreated\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7590>), (\(aqPending_Create\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7f10>), (\(aqPending_Update\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7a10>), (\(aqPending_Delete\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff70d0>), (\(aqInactive\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8ff7b50>))
.UNINDENT
.INDENT 7.0
.TP
.B FirewallsTable.base_actions = OrderedDict([(\(aqaddfirewall\(aq, <AddFirewallLink: addfirewall>), (\(aqaddrouter\(aq, <AddRouterToFirewallLink: addrouter>), (\(aqdeletefirewall\(aq, <DeleteFirewallLink: deletefirewall>), (\(aqremoverouter\(aq, <RemoveRouterFromFirewallLink: removerouter>), (\(aqupdatefirewall\(aq, <UpdateFirewallLink: updatefirewall>)])
.UNINDENT
.INDENT 7.0
.TP
.B FirewallsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqfirewall_policy_id\(aq, <Column: firewall_policy_id>), (\(aqrouter_ids\(aq, <Column: router_ids>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.InsertRuleToPolicyLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqget_firewall_policy\(aq), (\(aqnetwork\(aq, \(aqinsert_rule\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f2a8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqinsertrule\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8cbd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(policy)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqinsertrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqget_firewall_policy\(aq), (\(aqnetwork\(aq, \(aqinsert_rule\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8cbd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.PoliciesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqpoliciestable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.UpdatePolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.InsertRuleToPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.RemoveRuleFromPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.DeletePolicyLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.AddPolicyLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.DeletePolicyLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b82a7590>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PoliciesTable.base_actions = OrderedDict([(\(aqaddpolicy\(aq, <AddPolicyLink: addpolicy>), (\(aqdeletepolicy\(aq, <DeletePolicyLink: deletepolicy>), (\(aqinsertrule\(aq, <InsertRuleToPolicyLink: insertrule>), (\(aqremoverule\(aq, <RemoveRuleFromPolicyLink: removerule>), (\(aqupdatepolicy\(aq, <UpdatePolicyLink: updatepolicy>)])
.UNINDENT
.INDENT 7.0
.TP
.B PoliciesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqfirewall_rules\(aq, <Column: firewall_rules>), (\(aqshared\(aq, <Column: shared>), (\(aqaudited\(aq, <Column: audited>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.RemoveRouterFromFirewallLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, firewall)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqget_firewall\(aq), (\(aqnetwork\(aq, \(aqremove_router\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f500>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b761f578>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqremoverouter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8cd10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(firewall)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqremoverouter\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqget_firewall\(aq), (\(aqnetwork\(aq, \(aqremove_router\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8cd10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.RemoveRuleFromPolicyLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, policy)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqget_firewall_policy\(aq), (\(aqnetwork\(aq, \(aqremove_rule\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f320>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b761f398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqremoverule\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-danger\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8cd50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-danger\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(policy)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqremoverule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqget_firewall_policy\(aq), (\(aqnetwork\(aq, \(aqremove_rule\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8cd50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.RulesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B ACTION_DISPLAY_CHOICES = ((\(aqAllow\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8b8c610>), (\(aqDeny\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b8b8cc10>))
.UNINDENT
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqrulestable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.UpdateRuleLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.DeleteRuleLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.AddRuleLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.tables.DeleteRuleLink\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b82a77d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RulesTable.base_actions = OrderedDict([(\(aqaddrule\(aq, <AddRuleLink: addrule>), (\(aqdeleterule\(aq, <DeleteRuleLink: deleterule>), (\(aqupdaterule\(aq, <UpdateRuleLink: updaterule>)])
.UNINDENT
.INDENT 7.0
.TP
.B RulesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqprotocol\(aq, <Column: protocol>), (\(aqsource_ip_address\(aq, <Column: source_ip_address>), (\(aqsource_port\(aq, <Column: source_port>), (\(aqdestination_ip_address\(aq, <Column: destination_ip_address>), (\(aqdestination_port\(aq, <Column: destination_port>), (\(aqaction\(aq, <Column: action>), (\(aqshared\(aq, <Column: shared>), (\(aqenabled\(aq, <Column: enabled>), (\(aqfirewall_policy_id\(aq, <Column: firewall_policy_id>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.UpdateFirewallLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, firewall)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_firewall\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f1b8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b761f230>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdatefirewall\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8c210>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(firewall)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdatefirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_firewall\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8c210>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.UpdatePolicyLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_firewall_policy\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f140>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdatepolicy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8c410>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(policy)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdatepolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_firewall_policy\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8c410>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.tables.UpdateRuleLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.firewalls.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_firewall_rule\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b761f0c8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqupdaterule\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8b8c350>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-update\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(rule)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdaterule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_firewall_rule\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8b8c350>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.firewalls.tables.get_policy_link(datum)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.firewalls.tables.get_policy_name(datum)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.firewalls.tables.get_routers_name(firewall)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.firewalls.tables.get_rules_name(datum)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddFirewall(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.workflows.AddFirewallStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b6e045d0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b6e04550>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6e04510>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddfirewall\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b6e04590>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddFirewallAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6dedb90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6deddd0>), (\(aqfirewall_policy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6dedf50>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6e04150>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6dedb90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6deddd0>), (\(aqfirewall_policy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6dedf50>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6e04150>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b6e042d0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6e04290>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b6e044d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddfirewallaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddFirewallStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddFirewallAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqfirewall_policy_id\(aq, \(aqdescription\(aq, \(aqadmin_state_up\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddPolicy(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.workflows.AddPolicyStep\(aq>, <class \(aqopenstack_dashboard.dashboards.project.firewalls.workflows.SelectRulesStep\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b6dedad0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b6deda50>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6deda10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddpolicy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b6deda90>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddPolicyAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6e2bad0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6e2be10>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e0e050>), (\(aqaudited\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e0e3d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6e2bad0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6e2be10>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e0e050>), (\(aqaudited\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e0e3d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b6ded710>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6ded6d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b6ded990>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddpolicyaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddPolicyStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddPolicyAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqshared\(aq, \(aqaudited\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddRule(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.firewalls.workflows.AddRuleStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b6e44a10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b7a44e90>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7a44950>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaddrule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b7a443d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddRuleAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6e71ed0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6e710d0>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6e3cd50>), (\(aqaction\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6e3ce50>), (\(aqsource_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b6e3c950>), (\(aqdestination_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b6e3cb50>), (\(aqsource_port\(aq, <django.forms.fields.CharField object at 0x7ff3b6e3c9d0>), (\(aqdestination_port\(aq, <django.forms.fields.CharField object at 0x7ff3b6e3c4d0>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e3c0d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e3c150>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b6e71ed0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b6e710d0>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6e3cd50>), (\(aqaction\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b6e3ce50>), (\(aqsource_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b6e3c950>), (\(aqdestination_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b6e3cb50>), (\(aqsource_port\(aq, <django.forms.fields.CharField object at 0x7ff3b6e3c9d0>), (\(aqdestination_port\(aq, <django.forms.fields.CharField object at 0x7ff3b6e3c4d0>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e3c0d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b6e3c150>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b6e5b610>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6e3c110>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b6e231d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqaddruleaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.AddRuleStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddRuleAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqdescription\(aq, \(aqprotocol\(aq, \(aqaction\(aq, \(aqsource_ip_address\(aq, \(aqsource_port\(aq, \(aqdestination_ip_address\(aq, \(aqdestination_port\(aq, \(aqenabled\(aq, \(aqshared\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.SelectRoutersAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqrouter\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b7310fd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqrouter\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b7310fd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b72d1a90>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7310d10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_router_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b6e2ba10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectroutersaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.SelectRoutersStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectRoutersAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqrouter_ids\(aq, \(aqall_routers_selected\(aq, \(aqSelect No Routers\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/_update_routers.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.SelectRulesAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqrule\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b6e44050>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqrule\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b6e44050>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b6e44890>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6e44190>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_rule_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b7310b90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectrulesaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.workflows.SelectRulesStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectRulesAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqfirewall_rules\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/firewalls/_update_rules.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.panel.Firewall
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B allowed(context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b908f590>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqfirewalls\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.firewalls.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.AddRouterToFirewall(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.forms.RouterInsertionFormBase\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqrouter_ids\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b713ea10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqrouter_ids\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b713ea10>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_msg = <django.utils.functional.__proxy__ object at 0x7ff3b713ea90>
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_new_router_ids(context)
.UNINDENT
.INDENT 7.0
.TP
.B get_router_choices(request, kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B init_failure_msg = <django.utils.functional.__proxy__ object at 0x7ff3b713ead0>
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B success_msg = <django.utils.functional.__proxy__ object at 0x7ff3b713ea50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.InsertRuleToPolicy(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqfirewall_rule_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e410>), (\(aqinsert_before\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e4d0>), (\(aqinsert_after\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e590>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqfirewall_rule_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e410>), (\(aqinsert_before\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e4d0>), (\(aqinsert_after\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e590>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.RemoveRouterFromFirewall(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.firewalls.forms.RouterInsertionFormBase\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqrouter_ids\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b713ed90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqrouter_ids\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3b713ed90>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_msg = <django.utils.functional.__proxy__ object at 0x7ff3b713ee10>
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_new_router_ids(context)
.UNINDENT
.INDENT 7.0
.TP
.B get_router_choices(request, kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B init_failure_msg = <django.utils.functional.__proxy__ object at 0x7ff3b713ee50>
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B success_msg = <django.utils.functional.__proxy__ object at 0x7ff3b713edd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.RemoveRuleFromPolicy(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqfirewall_rule_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e790>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqfirewall_rule_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e790>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.RouterInsertionFormBase(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B get_new_router_ids(context)
Return a new list of router IDs associated with the firewall.
.UNINDENT
.INDENT 7.0
.TP
.B get_router_choices(request, kwargs)
Return a list of selectable routers.
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.UpdateFirewall(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b713add0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b713aed0>), (\(aqfirewall_policy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713afd0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e190>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b713add0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b713aed0>), (\(aqfirewall_policy_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713afd0>), (\(aqadmin_state_up\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713e190>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.UpdatePolicy(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b713aa50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b713ab50>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713ac50>), (\(aqaudited\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713ad10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b713aa50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b713ab50>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713ac50>), (\(aqaudited\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713ad10>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.firewalls.forms.UpdateRule(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7112ed0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b7112fd0>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713a250>), (\(aqaction\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713a3d0>), (\(aqsource_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b713a490>), (\(aqdestination_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b713a590>), (\(aqsource_port\(aq, <django.forms.fields.CharField object at 0x7ff3b713a690>), (\(aqdestination_port\(aq, <django.forms.fields.CharField object at 0x7ff3b713a7d0>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713a8d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713a990>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b7112ed0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b7112fd0>), (\(aqprotocol\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713a250>), (\(aqaction\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b713a3d0>), (\(aqsource_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b713a490>), (\(aqdestination_ip_address\(aq, <horizon.forms.fields.IPField object at 0x7ff3b713a590>), (\(aqsource_port\(aq, <django.forms.fields.CharField object at 0x7ff3b713a690>), (\(aqdestination_port\(aq, <django.forms.fields.CharField object at 0x7ff3b713a7d0>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713a8d0>), (\(aqenabled\(aq, <django.forms.fields.BooleanField object at 0x7ff3b713a990>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:project:firewalls:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.containers.views\fP Module
.sp
Views for managing Swift containers.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.ContainerDetailView(**kwargs)
Bases: \fBhorizon.forms.views.ModalFormMixin\fP, \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8256bd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/container_detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.ContainerView(*args, **kwargs)
Bases: \fBhorizon.browsers.views.ResourceBrowserView\fP
.INDENT 7.0
.TP
.B browser_class
alias of \fBContainerBrowser\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_containers_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_objects_data()
Returns a list of objects within the current folder.
.UNINDENT
.INDENT 7.0
.TP
.B get_subfolders_data()
Returns a list of subfolders within the current folder.
.UNINDENT
.INDENT 7.0
.TP
.B is_placeholder(item)
.UNINDENT
.INDENT 7.0
.TP
.B is_subdir(item)
.UNINDENT
.INDENT 7.0
.TP
.B objects
Returns a list of objects given the subfolder\(aqs path.
.sp
The path is from the kwargs of the request.
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.CopyView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCopyObject\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_copy_name(object_name)
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82568d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/copy.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.CreatePseudoFolderView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreatePseudoFolder\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba251490>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/create_pseudo_folder.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateContainer\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b7fe6150>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.ObjectDetailView(**kwargs)
Bases: \fBhorizon.forms.views.ModalFormMixin\fP, \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8256890>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/object_detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.UpdateObjectView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateObject\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b806cb90>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/update.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.views.UploadView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUploadObject\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b89ac510>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/containers/upload.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.views.object_download(request, container_name, object_path)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.containers\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.containers.browsers\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.browsers.ContainerBrowser(request, tables_dict=None, attrs=None, **kwargs)
Bases: \fBhorizon.browsers.base.ResourceBrowser\fP
.INDENT 7.0
.TP
.B breadcrumb_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B content_kwarg_name = \(aqsubfolder_path\(aq
.UNINDENT
.INDENT 7.0
.TP
.B content_table_class
alias of \fBObjectsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B has_breadcrumb = True
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqswift\(aq
.UNINDENT
.INDENT 7.0
.TP
.B navigable_item_name = <django.utils.functional.__proxy__ object at 0x7ff3b75944d0>
.UNINDENT
.INDENT 7.0
.TP
.B navigation_kwarg_name = \(aqcontainer_name\(aq
.UNINDENT
.INDENT 7.0
.TP
.B navigation_table_class
alias of \fBContainersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b758de10>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.containers.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.containers.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ContainerAjaxUpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, container_name)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ContainersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B METADATA_LOADED_CHOICES = ((False, None), (True, True))
.UNINDENT
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B browser_table = \(aqnavigation\(aq
.UNINDENT
.INDENT 7.0
.TP
.B footer = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcontainers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.containers.tables.ViewContainer\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.MakePublicContainer\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.MakePrivateContainer\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.DeleteContainer\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBContainerAjaxUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqmetadata_loaded\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.containers.tables.CreateContainer\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b751b5d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ContainersTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateContainer: create>), (\(aqdelete\(aq, <DeleteContainer: delete>), (\(aqmake_private\(aq, <MakePrivateContainer: make_private>), (\(aqmake_public\(aq, <MakePublicContainer: make_public>), (\(aqview\(aq, <ViewContainer: view>)])
.UNINDENT
.INDENT 7.0
.TP
.B ContainersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqmetadata\(aq, <Column: metadata>), (\(aqmetadata_loaded\(aq, <Column: metadata_loaded>)])
.UNINDENT
.INDENT 7.0
.TP
.B ContainersTable.get_absolute_url()
.UNINDENT
.INDENT 7.0
.TP
.B ContainersTable.get_full_url()
Returns the encoded absolute URL path with its query string.
.sp
This is used for the POST action attribute on the form element
wrapping the table. We use this method to persist the
pagination marker.
.UNINDENT
.INDENT 7.0
.TP
.B ContainersTable.get_object_id(container)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.CopyObject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed_data_types = (\(aqobjects\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqallowed_data_types\(aq: (\(aqobjects\(aq,), \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74cecf8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcircle\-arrow\-right\(aq, \(aqname\(aq: \(aqcopy\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:object_copy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7620410>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(obj)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcircle\-arrow\-right\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcopy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:object_copy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7620410>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.CreateContainer(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b751bd50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b751bd50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.CreatePseudoFolder(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3b74ce2a8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74ce1b8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b74ce230>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate_pseudo_folder\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:create_pseudo_folder\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b751bf10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate_pseudo_folder\(aq
.UNINDENT
.INDENT 7.0
.TP
.B update(request, obj)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:create_pseudo_folder\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b751bf10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.DeleteContainer(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b74ce0c8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7793600>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7865c90>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqsuccess_url\(aq: \(aqhorizon:project:containers:index\(aq, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b74ce050>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request=None)
Returns the URL to redirect to after a successful action.
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.DeleteMultipleObjects(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.containers.tables.DeleteObject\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqallowed_data_types\(aq: (\(aqobjects\(aq, \(aqsubfolders\(aq), \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b74cec08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete_multiple_objects\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7865be8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7793fa0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b74ceb90>}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete_multiple_objects\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.DeleteObject(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types = (\(aqobjects\(aq, \(aqsubfolders\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqallowed_data_types\(aq: (\(aqobjects\(aq, \(aqsubfolders\(aq), \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b74cec08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete_object\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7865be8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7793fa0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b74ceb90>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete_object\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.DownloadObject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, object)
.UNINDENT
.INDENT 7.0
.TP
.B allowed_data_types = (\(aqobjects\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqallowed_data_types\(aq: (\(aqobjects\(aq,), \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74ced70>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b74cede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqdownload\(aq, \(aqname\(aq: \(aqdownload\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:object_download\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b766b3d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(obj)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:object_download\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b766b3d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ListObjects(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74ce140>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqlist\(aq, \(aqname\(aq: \(aqlist_objects\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b75b0790>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqlist\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlist_objects\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b75b0790>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.MakePrivateContainer(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, container)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqname\(aq: \(aqmake_private\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b758d9d0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b74dbe60>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b74dbde8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqicon\(aq: \(aqpencil\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmake_private\(aq
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b758d9d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.MakePublicContainer(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, container)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqname\(aq: \(aqmake_public\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b758d890>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b74dbd70>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b74dbcf8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqicon\(aq: \(aqpencil\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmake_public\(aq
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b758d890>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ObjectFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqfilter_objects_data\(aq: <function filter_objects_data at 0x7ff3b74cef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b74ea050>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqfilter_subfolders_data\(aq: <function filter_subfolders_data at 0x7ff3b74ceed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aq_filtered_data\(aq: <function _filtered_data at 0x7ff3b74cee60>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_objects_data(table, objects, filter_string)
.UNINDENT
.INDENT 7.0
.TP
.B filter_subfolders_data(table, objects, filter_string)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ObjectsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B browser_table = \(aqcontent\(aq
.UNINDENT
.INDENT 7.0
.TP
.B data_types = (\(aqsubfolders\(aq, \(aqobjects\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B footer = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqobjects\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.containers.tables.DownloadObject\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.UpdateObject\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.CopyObject\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.ViewObject\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.DeleteObject\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.containers.tables.ObjectFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.CreatePseudoFolder\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.UploadObject\(aq>, <class \(aqopenstack_dashboard.dashboards.project.containers.tables.DeleteMultipleObjects\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7594d10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ObjectsTable.base_actions = OrderedDict([(\(aqcopy\(aq, <CopyObject: copy>), (\(aqcreate_pseudo_folder\(aq, <CreatePseudoFolder: create_pseudo_folder>), (\(aqdelete_multiple_objects\(aq, <DeleteMultipleObjects: delete_multiple_objects>), (\(aqdelete_object\(aq, <DeleteObject: delete_object>), (\(aqdownload\(aq, <DownloadObject: download>), (\(aqfilter\(aq, <ObjectFilterAction: filter>), (\(aqupdate_object\(aq, <UpdateObject: update_object>), (\(aqupload\(aq, <UploadObject: upload>), (\(aqview\(aq, <ViewObject: view>)])
.UNINDENT
.INDENT 7.0
.TP
.B ObjectsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqsize\(aq, <Column: size>)])
.UNINDENT
.INDENT 7.0
.TP
.B ObjectsTable.get_absolute_url()
.UNINDENT
.INDENT 7.0
.TP
.B ObjectsTable.get_full_url()
Returns the encoded absolute URL path with its query string.
.sp
This is used for the POST action attribute on the form element
wrapping the table. We use this method to persist the
pagination marker.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.UpdateObject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed_data_types = (\(aqobjects\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqallowed_data_types\(aq: (\(aqobjects\(aq,), \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74cea28>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_object\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:object_update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7620350>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(obj)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_object\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:object_update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7620350>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.UploadObject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3b74ce410>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74ce320>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b74ce398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqupload\(aq, \(aqname\(aq: \(aqupload\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:object_upload\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b751b110>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqupload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B update(request, obj)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:object_upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b751b110>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ViewContainer(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74dbc80>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqview\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:container_detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-view\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b758d610>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-view\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:container_detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b758d610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.tables.ViewObject(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed_data_types = (\(aqobjects\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.containers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqallowed_data_types\(aq: (\(aqobjects\(aq,), \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b74ce9b0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqview\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:object_detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-view\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b76203d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-view\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(obj)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:object_detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b76203d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.get_container_link(container)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.get_link_subfolder(subfolder)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.get_metadata(container)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.get_metadata_loaded(container)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.get_size(obj)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.get_size_used(container)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.tables.sanitize_name(name)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.containers.utils\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.containers.utils.wrap_delimiter(name)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.containers.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.panel.Containers
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7508790>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.object\-store\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcontainers\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.containers.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.forms.CopyObject(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnew_container_name\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b74bcfd0>), (\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b746c0d0>), (\(aqnew_object_name\(aq, <django.forms.fields.CharField object at 0x7ff3b746c1d0>), (\(aqorig_container_name\(aq, <django.forms.fields.CharField object at 0x7ff3b746c310>), (\(aqorig_object_name\(aq, <django.forms.fields.CharField object at 0x7ff3b746c390>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnew_container_name\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b74bcfd0>), (\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b746c0d0>), (\(aqnew_object_name\(aq, <django.forms.fields.CharField object at 0x7ff3b746c1d0>), (\(aqorig_container_name\(aq, <django.forms.fields.CharField object at 0x7ff3b746c310>), (\(aqorig_object_name\(aq, <django.forms.fields.CharField object at 0x7ff3b746c390>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.forms.CreateContainer(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B ACCESS_CHOICES = ((\(aqprivate\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b74bc2d0>), (\(aqpublic\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b74bc310>))
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqparent\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc350>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc450>), (\(aqaccess\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b74bc550>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqparent\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc350>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc450>), (\(aqaccess\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b74bc550>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.forms.CreatePseudoFolder(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b74bcc10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bcd10>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b74bce10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b74bcc10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bcd10>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b74bce10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.forms.UpdateObject(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.containers.forms.UploadObject\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc690>), (\(aqobject_file\(aq, <django.forms.fields.FileField object at 0x7ff3b74bc790>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc8d0>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b74bca10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc690>), (\(aqobject_file\(aq, <django.forms.fields.FileField object at 0x7ff3b74bc790>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc8d0>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b74bca10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.containers.forms.UploadObject(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc690>), (\(aqobject_file\(aq, <django.forms.fields.FileField object at 0x7ff3b74bc790>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc8d0>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b74bca10>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpath\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc690>), (\(aqobject_file\(aq, <django.forms.fields.FileField object at 0x7ff3b74bc790>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b74bc8d0>), (\(aqcontainer_name\(aq, <django.forms.fields.CharField object at 0x7ff3b74bca10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.views\fP Module
.sp
Views for Instances and Volumes.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b75e4850>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBAccessAndSecurityTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.tabs.APIAccessTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_endpoints_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7650d90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqapi_access_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables.EndpointsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.tabs.AccessAndSecurityTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqaccess_security_tabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.tabs.SecurityGroupsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.tabs.KeypairsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.tabs.FloatingIPsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.tabs.APIAccessTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.tabs.FloatingIPsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_floating_ips_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7650d10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqfloating_ips_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.FloatingIPsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.tabs.KeypairsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_keypairs_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7650c90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqkeypairs_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables.KeypairsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.tabs.SecurityGroupsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_security_groups_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b7650e10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqsecurity_groups_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.SecurityGroupsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.panel.AccessAndSecurity
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b805f690>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaccess_and_security\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups.views\fP Module
.sp
Views for managing instances.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.views.AddRuleView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAddRule\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_security_group_rule_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_form_kwargs()
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b84dc3d0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_security_group_rule_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b84dc410>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b84dc850>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:access_and_security:security_groups:add_rule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/security_groups/add_rule.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:security_groups:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateGroup\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_security_group_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b84dc590>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_security_group_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b84a7050>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b84dce50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b84a73d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b84a7f50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/security_groups/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.views.DetailView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b7cfff10>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBRulesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/security_groups/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateGroup\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqupdate_security_group_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b84dccd0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqupdate_security_group_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b84dcdd0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b84dcc90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:access_and_security:security_groups:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b84dc310>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/security_groups/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.CreateGroup(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, security_group=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b85f60c8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:security_groups:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7953390>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:security_groups:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7953390>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.CreateRule(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, security_group_rule=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b85f6500>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b85f6488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqadd_rule\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:security_groups:add_rule\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7953050>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url()
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqadd_rule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:security_groups:add_rule\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7953050>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.DeleteGroup(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, security_group=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b7d04140>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b77340f8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b77342f0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b7d042a8>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.DeleteRule(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, security_group_rule=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3b85f6758>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b85f6668>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7c81d00>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7c81ec0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b85f66e0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url(request)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.EditGroup(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, security_group=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b85f6140>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:security_groups:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7953610>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:security_groups:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7953610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.ManageRules(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, security_group=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b85f61b8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqmanage_rules\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:security_groups:detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7953910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmanage_rules\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:security_groups:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7953910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.POLICY_CHECK(policy, request, target)
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.RulesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqrules\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.DeleteRule\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.CreateRule\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.DeleteRule\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7980910>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RulesTable.base_actions = OrderedDict([(\(aqadd_rule\(aq, <CreateRule: add_rule>), (\(aqdelete\(aq, <DeleteRule: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B RulesTable.base_columns = OrderedDict([(\(aqdirection\(aq, <Column: direction>), (\(aqethertype\(aq, <Column: ethertype>), (\(aqprotocol\(aq, <Column: protocol>), (\(aqport_range\(aq, <Column: port_range>), (\(aqremote_ip_prefix\(aq, <Column: remote_ip_prefix>), (\(aqremote_security_group\(aq, <Column: remote_security_group>)])
.UNINDENT
.INDENT 7.0
.TP
.B RulesTable.get_object_display(rule)
.UNINDENT
.INDENT 7.0
.TP
.B RulesTable.sanitize_id(obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.SecurityGroupsFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b85f6230>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, security_groups, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.SecurityGroupsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqsecurity_groups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.ManageRules\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.EditGroup\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.DeleteGroup\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.CreateGroup\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.DeleteGroup\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.security_groups.tables.SecurityGroupsFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7953510>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B SecurityGroupsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateGroup: create>), (\(aqdelete\(aq, <DeleteGroup: delete>), (\(aqedit\(aq, <EditGroup: edit>), (\(aqfilter\(aq, <SecurityGroupsFilterAction: filter>), (\(aqmanage_rules\(aq, <ManageRules: manage_rules>)])
.UNINDENT
.INDENT 7.0
.TP
.B SecurityGroupsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>)])
.UNINDENT
.INDENT 7.0
.TP
.B SecurityGroupsTable.sanitize_id(obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.check_rule_template(port, ip_proto)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.filter_direction(direction)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.filter_protocol(protocol)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.get_port_range(rule)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.get_remote_ip_prefix(rule)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.security_groups.tables.get_remote_security_group(rule)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.forms.AddRule(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b8043450>), (\(aqrule_menu\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b80439d0>), (\(aqdirection\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b81f5b10>), (\(aqip_protocol\(aq, <django.forms.fields.IntegerField object at 0x7ff3b81f5d50>), (\(aqport_or_range\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8f91810>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8f91290>), (\(aqfrom_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8f91d50>), (\(aqto_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8f91d10>), (\(aqicmp_type\(aq, <django.forms.fields.IntegerField object at 0x7ff3b85d09d0>), (\(aqicmp_code\(aq, <django.forms.fields.IntegerField object at 0x7ff3b85d0f90>), (\(aqremote\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b85d0c10>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b85d0650>), (\(aqsecurity_group\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8604710>), (\(aqethertype\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8604190>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b8043450>), (\(aqrule_menu\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b80439d0>), (\(aqdirection\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b81f5b10>), (\(aqip_protocol\(aq, <django.forms.fields.IntegerField object at 0x7ff3b81f5d50>), (\(aqport_or_range\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8f91810>), (\(aqport\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8f91290>), (\(aqfrom_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8f91d50>), (\(aqto_port\(aq, <django.forms.fields.IntegerField object at 0x7ff3b8f91d10>), (\(aqicmp_type\(aq, <django.forms.fields.IntegerField object at 0x7ff3b85d09d0>), (\(aqicmp_code\(aq, <django.forms.fields.IntegerField object at 0x7ff3b85d0f90>), (\(aqremote\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b85d0c10>), (\(aqcidr\(aq, <horizon.forms.fields.IPField object at 0x7ff3b85d0650>), (\(aqsecurity_group\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8604710>), (\(aqethertype\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8604190>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.forms.CreateGroup(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups.forms.GroupBase\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8043850>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8043b50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8043850>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8043b50>)])
.UNINDENT
.INDENT 7.0
.TP
.B error_message = <django.utils.functional.__proxy__ object at 0x7ff3b8043950>
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8043610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.forms.GroupBase(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.sp
Base class to handle creation and update of security groups.
.sp
Children classes must define two attributes:
.INDENT 7.0
.TP
.B success_message
A success message containing the placeholder %s,
which will be replaced by the group name.
.UNINDENT
.INDENT 7.0
.TP
.B error_message
An error message containing the placeholder %s,
which will be replaced by the error message.
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8043850>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8043b50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8043850>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8043b50>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.security_groups.forms.UpdateGroup(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.access_and_security.security_groups.forms.GroupBase\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8043850>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8043b50>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b8043290>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b8043850>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b8043b50>), (\(aqid\(aq, <django.forms.fields.CharField object at 0x7ff3b8043290>)])
.UNINDENT
.INDENT 7.0
.TP
.B error_message = <django.utils.functional.__proxy__ object at 0x7ff3b8043e50>
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b8043650>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.keypairs.views\fP Module
.sp
Views for managing keypairs.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b82fa250>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateKeypair\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_keypair_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b82faf50>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82fa590>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b82facd0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b82fad90>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:access_and_security:keypairs:download\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/keypairs/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.views.DetailView(**kwargs)
Bases: \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
Gets the context data for keypair.
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82fa610>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/keypairs/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.views.DownloadView(**kwargs)
Bases: \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(keypair_name=None)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82fa710>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/keypairs/download.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.views.GenerateView(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B get(*args, **kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.views.ImportView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBImportKeypair\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqimport_keypair_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_object_id(keypair)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b82fa310>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b82fa510>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b82fa210>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b82fa090>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b82fafd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/keypairs/import.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.keypairs\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.keypairs.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.tables.CreateKeyPair(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, keypair=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:keypairs:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b7a66398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:keypairs:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b7710350>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:keypairs:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:keypairs:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b7710350>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.tables.DeleteKeyPairs(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:keypairs:delete\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b7a6ba28>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b7a6ba60>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b7a66320>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:keypairs:delete\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.tables.ImportKeyPair(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:keypairs:create\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqupload\(aq, \(aqname\(aq: \(aqimport\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:keypairs:import\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b77102d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqupload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqimport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:keypairs:create\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:keypairs:import\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b77102d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.tables.KeypairsFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b7a66410>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, keypairs, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.tables.KeypairsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqkeypairs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables.DeleteKeyPairs\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables.CreateKeyPair\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables.ImportKeyPair\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables.DeleteKeyPairs\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.keypairs.tables.KeypairsFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b77105d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B KeypairsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateKeyPair: create>), (\(aqdelete\(aq, <DeleteKeyPairs: delete>), (\(aqfilter\(aq, <KeypairsFilterAction: filter>), (\(aqimport\(aq, <ImportKeyPair: import>)])
.UNINDENT
.INDENT 7.0
.TP
.B KeypairsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqfingerprint\(aq, <Column: fingerprint>)])
.UNINDENT
.INDENT 7.0
.TP
.B KeypairsTable.detail_link = \(aqhorizon:project:access_and_security:keypairs:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B KeypairsTable.get_object_id(keypair)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.keypairs.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.forms.CreateKeypair(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3b7d426d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3b7d426d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.keypairs.forms.ImportKeypair(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3b7d42810>), (\(aqpublic_key\(aq, <django.forms.fields.CharField object at 0x7ff3b7d42990>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3b7d42810>), (\(aqpublic_key\(aq, <django.forms.fields.CharField object at 0x7ff3b7d42990>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.floating_ips.views\fP Module
.sp
Views for managing floating IPs.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.views.AllocateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBFloatingIpAllocate\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqassociate_floating_ip_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object_display(obj)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b82c93d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b82c92d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b82c95d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b82c9690>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/floating_ips/allocate.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.views.AssociateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBIPAssociationWorkflow\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.floating_ips\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.floating_ips.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.AllocateIP(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, fip=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b78d9488>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqlink\(aq, \(aqname\(aq: \(aqallocate\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:floating_ips:allocate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqsingle\(aq: <function single at 0x7ff3b78d9410>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b919f8d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqallocate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B single(data_table, request, *args)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:floating_ips:allocate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b919f8d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.AssociateIP(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, fip)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b78d97d0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b78d9758>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqlink\(aq, \(aqname\(aq: \(aqassociate\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:floating_ips:associate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3babdc850>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:floating_ips:associate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3babdc850>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.DisassociateIP(single_func=None, multiple_func=None, handle_func=None, attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.Action\fP
.INDENT 7.0
.TP
.B allowed(request, fip)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables\(aq, \(aqname\(aq: \(aqdisassociate\(aq, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3babdc610>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqsingle\(aq: <function single at 0x7ff3b78d98c0>, \(aqclasses\(aq: (\(aqbtn\-disassociate\(aq, \(aqbtn\-danger\(aq), \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b78d9848>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqicon\(aq: \(aqunlink\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__doc__\(aq: \(aqRepresents an action which can be taken on this table\e\(aqs data.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: verbose_name_plural\en\en        Used like \(ga\(gaverbose_name\(ga\(ga in cases where \(ga\(gahandles_multiple\(ga\(ga is\en        \(ga\(gaTrue\(ga\(ga. Defaults to \(ga\(gaverbose_name\(ga\(ga with the letter "s" appended.\en\en    .. attribute:: method\en\en        The HTTP method for this action. Defaults to \(ga\(gaPOST\(ga\(ga. Other methods\en        may or may not succeed currently.\en\en    .. attribute:: requires_input\en\en        Boolean value indicating whether or not this action can be taken\en        without any additional input (e.g. an object id). Defaults to \(ga\(gaTrue\(ga\(ga.\en\en    .. attribute:: preempt\en\en        Boolean value indicating whether this action should be evaluated in\en        the period after the table is instantiated but before the data has\en        been loaded.\en\en        This can allow actions which don\e\(aqt need access to the full table data\en        to bypass any API calls and processing which would otherwise be\en        required to load the table.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Default to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en\en    .. attribute:: policy_rules\en\en        list of scope and rule tuples to do policy checks on, the\en        composition of which is (scope, rule)\en\en            scope: service type managing the policy for action\en            rule: string representing the action to be checked\en\en            for a policy that requires a single rule check:\en                policy_rules should look like\en                    "(("compute", "compute:create_instance"),)"\en            for a policy that requires multiple rule checks:\en                rules should look like\en                    "(("identity", "identity:list_users"),\en                      ("identity", "identity:list_roles"))"\en\en    At least one of the following methods must be defined:\en\en    .. method:: single(self, data_table, request, object_id)\en\en        Handler for a single\-object action.\en\en    .. method:: multiple(self, data_table, request, object_ids)\en\en        Handler for multi\-object actions.\en\en    .. method:: handle(self, data_table, request, object_ids)\en\en        If a single function can work for both single\-object and\en        multi\-object cases then simply providing a \(ga\(gahandle\(ga\(ga function\en        will internally route both \(ga\(gasingle\(ga\(ga and \(ga\(gamultiple\(ga\(ga requests\en        to \(ga\(gahandle\(ga\(ga with the calls from \(ga\(gasingle\(ga\(ga being transformed\en        into a list containing only the single object id.\en    \(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec08>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-disassociate\(aq, \(aqbtn\-danger\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqunlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdisassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B single(table, request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3babdc610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.FloatingIPsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqfloating_ips\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.AssociateIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.DisassociateIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.ReleaseIPs\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.AllocateIP\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.ReleaseIPs\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3babdc0d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B FloatingIPsTable.STATUS_CHOICES = ((\(aqactive\(aq, True), (\(aqdown\(aq, True), (\(aqerror\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B FloatingIPsTable.base_actions = OrderedDict([(\(aqallocate\(aq, <AllocateIP: allocate>), (\(aqassociate\(aq, <AssociateIP: associate>), (\(aqdisassociate\(aq, <DisassociateIP: disassociate>), (\(aqrelease\(aq, <ReleaseIPs: release>)])
.UNINDENT
.INDENT 7.0
.TP
.B FloatingIPsTable.base_columns = OrderedDict([(\(aqip\(aq, <Column: ip>), (\(aqfixed_ip\(aq, <Column: fixed_ip>), (\(aqpool\(aq, <Column: pool>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.INDENT 7.0
.TP
.B FloatingIPsTable.get_object_display(datum)
.UNINDENT
.INDENT 7.0
.TP
.B FloatingIPsTable.sanitize_id(obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.POLICY_CHECK(p, r)
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.ReleaseIPs(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, fip=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b78d9668>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b919f0d0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqunlink\(aq, \(aqname\(aq: \(aqrelease\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b800b398>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b81c1a98>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b78d96e0>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b919f0d0>
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqunlink\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrelease\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.get_instance_info(fip)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.floating_ips.tables.get_instance_link(datum)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.floating_ips.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.workflows.AssociateIP(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAssociateIPAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqip_id\(aq, \(aqinstance_id\(aq, \(aqip_address\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.workflows.AssociateIPAction(*args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqip_id\(aq, <horizon.forms.fields.DynamicTypedChoiceField object at 0x7ff3b9a49150>), (\(aqinstance_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9cbf5d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqip_id\(aq, <horizon.forms.fields.DynamicTypedChoiceField object at 0x7ff3b9a49150>), (\(aqinstance_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9cbf5d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9cbf590>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9cbf410>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_instance_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_ip_id_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9cbf6d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqassociateipaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.workflows.IPAssociationWorkflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.floating_ips.workflows.AssociateIP\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b9cbfe90>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b9cbfad0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9cbf3d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqip_association\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b9cbff10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:access_and_security:index\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.floating_ips.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.floating_ips.forms.FloatingIpAllocate(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b84a7a90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqpool\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b84a7a90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.api_access.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.api_access.views.CredentialsView(**kwargs)
Bases: \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b8f2eb90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/access_and_security/api_access/credentials.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.api_access.views.download_ec2_bundle(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.api_access.views.download_rc_file(request)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.api_access\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.api_access.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.access_and_security.api_access.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.api_access.tables.DownloadEC2(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:certificates\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqverbose_name_plural\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba70f5d0>, \(aqallowed\(aq: <function allowed at 0x7ff3b79bae60>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqdownload\(aq, \(aqname\(aq: \(aqdownload_ec2\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:api_access:ec2\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b81bbd10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdownload_ec2\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:certificates\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:api_access:ec2\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b81bbd10>
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name_plural = <django.utils.functional.__proxy__ object at 0x7ff3ba70f5d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.api_access.tables.DownloadOpenRC(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqverbose_name_plural\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba70f110>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqdownload\(aq, \(aqname\(aq: \(aqdownload_openrc\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:api_access:openrc\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba70f750>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdownload_openrc\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:api_access:openrc\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba70f750>
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name_plural = <django.utils.functional.__proxy__ object at 0x7ff3ba70f110>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.api_access.tables.EndpointsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqendpoints\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables.DownloadOpenRC\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables.DownloadEC2\(aq>, <class \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables.ViewCredentials\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9301050>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B EndpointsTable.base_actions = OrderedDict([(\(aqdownload_ec2\(aq, <DownloadEC2: download_ec2>), (\(aqdownload_openrc\(aq, <DownloadOpenRC: download_openrc>), (\(aqview_credentials\(aq, <ViewCredentials: view_credentials>)])
.UNINDENT
.INDENT 7.0
.TP
.B EndpointsTable.base_columns = OrderedDict([(\(aqapi_name\(aq, <Column: api_name>), (\(aqapi_endpoint\(aq, <Column: api_endpoint>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.access_and_security.api_access.tables.ViewCredentials(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.project.access_and_security.api_access.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqview_credentials\(aq, \(aqurl\(aq: \(aqhorizon:project:access_and_security:api_access:view_credentials\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba70f2d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqview_credentials\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:access_and_security:api_access:view_credentials\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba70f2d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.project.access_and_security.api_access.tables.pretty_service_names(name)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.overview.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.overview.views.ProjectOverview(*args, **kwargs)
Bases: \fBopenstack_dashboard.usage.views.UsageView\fP
.INDENT 7.0
.TP
.B csv_response_class
alias of \fBProjectUsageCsvRenderer\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBProjectUsageTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/overview/usage.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B usage_class
alias of \fBProjectUsage\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.overview.views.ProjectUsageCsvRenderer(request, template, context, content_type, **kwargs)
Bases: \fBhorizon.utils.csvbase.BaseCsvResponse\fP
.INDENT 7.0
.TP
.B columns = [<django.utils.functional.__proxy__ object at 0x7ff3b82a7bd0>, <django.utils.functional.__proxy__ object at 0x7ff3b8092410>, <django.utils.functional.__proxy__ object at 0x7ff3b8092490>, <django.utils.functional.__proxy__ object at 0x7ff3b8092510>, <django.utils.functional.__proxy__ object at 0x7ff3b8092550>, <django.utils.functional.__proxy__ object at 0x7ff3b8092590>, <django.utils.functional.__proxy__ object at 0x7ff3b80925d0>]
.UNINDENT
.INDENT 7.0
.TP
.B get_row_data()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.overview.views.WarningView(**kwargs)
Bases: \fBhorizon.views.HorizonTemplateView\fP
.INDENT 7.0
.TP
.B template_name = \(aqproject/_warning.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.project.overview\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.overview.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.project.overview.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.project.overview.panel.Overview
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b586bc90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.models\fP Module
.sp
Stub file to work around django bug: \fI\%https://code.djangoproject.com/ticket/7198\fP
.SS The \fBopenstack_dashboard.dashboards.settings\fP Module
.SS The \fBopenstack_dashboard.dashboards.settings.dashboard\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.dashboard.Settings(*args, **kwargs)
Bases: \fBhorizon.base.Dashboard\fP
.INDENT 7.0
.TP
.B default_panel = \(aquser\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8002c90>
.UNINDENT
.INDENT 7.0
.TP
.B nav(context)
.UNINDENT
.INDENT 7.0
.TP
.B panels = (\(aquser\(aq, \(aqpassword\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqsettings\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.password.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.password.views.PasswordView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBPasswordForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqchange_password_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b577fcd0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqchange_password_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b577fb10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b577f990>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b577f210>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqsettings/password/change.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.password\fP Module
.SS The \fBopenstack_dashboard.dashboards.settings.password.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.settings.password.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.password.panel.PasswordPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b6aeb250>
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:change_password\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqpassword\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.password.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.password.forms.PasswordForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqcurrent_password\(aq, <django.forms.fields.CharField object at 0x7ff3b577f8d0>), (\(aqnew_password\(aq, <django.forms.fields.RegexField object at 0x7ff3b577fc10>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b577f150>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
Check to make sure password fields match.
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqcurrent_password\(aq, <django.forms.fields.CharField object at 0x7ff3b577f8d0>), (\(aqnew_password\(aq, <django.forms.fields.RegexField object at 0x7ff3b577fc10>), (\(aqconfirm_password\(aq, <django.forms.fields.CharField object at 0x7ff3b577f150>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B no_autocomplete = True
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.user.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.user.views.UserSettingsView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUserSettingsForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aquser_settings_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_valid(form)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b89ac410>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aquser_settings_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b89ac490>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b89ac250>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b89ace90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqsettings/user/settings.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.user\fP Module
.SS The \fBopenstack_dashboard.dashboards.settings.user.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.settings.user.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.user.panel.UserPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b80023d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aquser\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.settings.user.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.settings.user.forms.UserSettingsForm(*args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqlanguage\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b89ac310>), (\(aqtimezone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b89ac750>), (\(aqpagesize\(aq, <django.forms.fields.IntegerField object at 0x7ff3b89ac8d0>), (\(aqinstance_log_length\(aq, <django.forms.fields.IntegerField object at 0x7ff3b89ac2d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqlanguage\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b89ac310>), (\(aqtimezone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b89ac750>), (\(aqpagesize\(aq, <django.forms.fields.IntegerField object at 0x7ff3b89ac8d0>), (\(aqinstance_log_length\(aq, <django.forms.fields.IntegerField object at 0x7ff3b89ac2d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.models\fP Module
.sp
Stub file to work around django bug: \fI\%https://code.djangoproject.com/ticket/7198\fP
.SS The \fBopenstack_dashboard.dashboards.admin\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.dashboard\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.dashboard.Admin(*args, **kwargs)
Bases: \fBhorizon.base.Dashboard\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bac395d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.roles.admin\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqadmin\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metering.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.views.CreateUsageReport
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUsageReportForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9cf3d90>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9cf3590>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metering/daily.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.views.CsvReportView(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B get(request, **response_kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9cf3850>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBCeilometerOverviewTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metering/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.views.ReportCsvRenderer(request, template, context, content_type, **kwargs)
Bases: \fBhorizon.utils.csvbase.BaseCsvResponse\fP
.INDENT 7.0
.TP
.B columns = [<django.utils.functional.__proxy__ object at 0x7ff3b9cf3490>, <django.utils.functional.__proxy__ object at 0x7ff3b9cf3c50>, <django.utils.functional.__proxy__ object at 0x7ff3b9cf34d0>, <django.utils.functional.__proxy__ object at 0x7ff3b9cf31d0>, <django.utils.functional.__proxy__ object at 0x7ff3b9cf3c10>, <django.utils.functional.__proxy__ object at 0x7ff3b9cf3090>, <django.utils.functional.__proxy__ object at 0x7ff3b9cf3dd0>]
.UNINDENT
.INDENT 7.0
.TP
.B get_row_data()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.views.SamplesView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.metering.views.load_report_data(request)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metering\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.metering.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tabs.CeilometerOverviewTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqceilometer_overview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.metering.tabs.UsageReportTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.metering.tabs.GlobalStatsTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tabs.GlobalStatsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b927aad0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqstats\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.metering.tables.UsageTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metering/stats.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tabs.UsageReportTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_report_table_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbcc0e90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqusage_report\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.metering.tables.ReportTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metering.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.metering.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tables.CreateCSVUsageReport(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.metering.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqdownload\(aq, \(aqname\(aq: \(aqcsv\(aq, \(aqurl\(aq: \(aqhorizon:admin:metering:csvreport\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-create\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba5aad50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-create\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcsv\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:metering:csvreport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5aad50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tables.ModifyUsageReportParameters(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.metering.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqedit\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:metering:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba5aa710>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:metering:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5aa710>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tables.ReportTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqreport_table\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.metering.tables.ModifyUsageReportParameters\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.metering.tables.CreateCSVUsageReport\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9dc0d10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ReportTable.base_actions = OrderedDict([(\(aqcreate\(aq, <ModifyUsageReportParameters: create>), (\(aqcsv\(aq, <CreateCSVUsageReport: csv>)])
.UNINDENT
.INDENT 7.0
.TP
.B ReportTable.base_columns = OrderedDict([(\(aqproject\(aq, <Column: project>), (\(aqservice\(aq, <Column: service>), (\(aqmeter\(aq, <Column: meter>), (\(aqdescription\(aq, <Column: description>), (\(aqtime\(aq, <Column: time>), (\(aqvalue\(aq, <Column: value>), (\(aqunit\(aq, <Column: unit>)])
.UNINDENT
.INDENT 7.0
.TP
.B ReportTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.tables.UsageTable(request, *args, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqdaily\(aq
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B UsageTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B UsageTable.base_columns = OrderedDict([(\(aqservice\(aq, <Column: service>), (\(aqmeter\(aq, <Column: meter>), (\(aqdescription\(aq, <Column: description>), (\(aqtime\(aq, <Column: time>), (\(aqvalue\(aq, <Column: value>)])
.UNINDENT
.INDENT 7.0
.TP
.B UsageTable.get_object_id(datum)
.UNINDENT
.INDENT 7.0
.TP
.B UsageTable.name
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.metering.tables.show_date(datum)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metering.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.panel.Metering
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b927ecd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.metering\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqidentity\(aq, \(aqidentity:list_projects\(aq), (\(aqtelemetry\(aq, \(aqtelemetry:compute_statistics\(aq), (\(aqtelemetry\(aq, \(aqtelemetry:get_meter\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmetering\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metering.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metering.forms.UsageReportForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B PERIOD_CHOICES = ((\(aq1\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9801c90>), (\(aq7\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b98019d0>), (\(aq23\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9801cd0>), (\(aq15\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9801d10>), (\(aq30\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9801910>), (\(aq365\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9801ed0>), (\(aqother\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9801b10>))
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqperiod\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9801890>), (\(aqdate_from\(aq, <django.forms.fields.DateField object at 0x7ff3b9801590>), (\(aqdate_to\(aq, <django.forms.fields.DateField object at 0x7ff3b9801050>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean_date_from()
.UNINDENT
.INDENT 7.0
.TP
.B clean_date_to()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqperiod\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9801890>), (\(aqdate_from\(aq, <django.forms.fields.DateField object at 0x7ff3b9801590>), (\(aqdate_to\(aq, <django.forms.fields.DateField object at 0x7ff3b9801050>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.info.constants\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.info.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b968f510>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBSystemInfoTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/info/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.info\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.info.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tabs.CinderServicesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_cinder_services_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9e96290>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.volume\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcinder_services\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.CinderServicesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tabs.HeatServiceTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_heat_services_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba92e610>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqheat_services\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.HeatServiceTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tabs.NetworkAgentsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_network_agents_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba70fad0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnetwork_agents\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.NetworkAgentsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tabs.NovaServicesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_nova_services_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba3deed0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnova_services\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.NovaServicesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tabs.ServicesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_services_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba30bb50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqservices\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.ServicesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tabs.SystemInfoTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqsystem_info\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.info.tabs.ServicesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.info.tabs.NovaServicesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.info.tabs.CinderServicesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.info.tabs.NetworkAgentsTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.info.tabs.HeatServiceTab\(aq>)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.info.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.info.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.CinderServicesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcinder_services\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.SubServiceFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9e96290>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B CinderServicesTable.base_actions = OrderedDict([(\(aqfilter\(aq, <SubServiceFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B CinderServicesTable.base_columns = OrderedDict([(\(aqbinary\(aq, <Column: binary>), (\(aqhost\(aq, <Column: host>), (\(aqzone\(aq, <Column: zone>), (\(aqstatus\(aq, <Column: status>), (\(aqstate\(aq, <Column: state>), (\(aqupdated_at\(aq, <Column: updated_at>)])
.UNINDENT
.INDENT 7.0
.TP
.B CinderServicesTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.HeatServiceFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.info.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqfilter_field\(aq: \(aqtype\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9af3398>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, services, filter_string)
.UNINDENT
.INDENT 7.0
.TP
.B filter_field = \(aqtype\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.HeatServiceTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqheat_services\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.HeatServiceFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba92e610>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B HeatServiceTable.base_actions = OrderedDict([(\(aqfilter\(aq, <HeatServiceFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B HeatServiceTable.base_columns = OrderedDict([(\(aqhostname\(aq, <Column: hostname>), (\(aqbinary\(aq, <Column: binary>), (\(aqengine_id\(aq, <Column: engine_id>), (\(aqhost\(aq, <Column: host>), (\(aqtopic\(aq, <Column: topic>), (\(aqupdated_at\(aq, <Column: updated_at>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.INDENT 7.0
.TP
.B HeatServiceTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.NetworkAgentsFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.info.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9af3de8>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, agents, filter_string)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.NetworkAgentsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqnetwork_agents\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.NetworkAgentsFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba70fad0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B NetworkAgentsTable.base_actions = OrderedDict([(\(aqfilter\(aq, <NetworkAgentsFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B NetworkAgentsTable.base_columns = OrderedDict([(\(aqagent_type\(aq, <Column: agent_type>), (\(aqbinary\(aq, <Column: binary>), (\(aqhost\(aq, <Column: host>), (\(aqstatus\(aq, <Column: status>), (\(aqstate\(aq, <Column: state>), (\(aqheartbeat_timestamp\(aq, <Column: heartbeat_timestamp>)])
.UNINDENT
.INDENT 7.0
.TP
.B NetworkAgentsTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.NovaServicesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqnova_services\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.SubServiceFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba3deed0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B NovaServicesTable.base_actions = OrderedDict([(\(aqfilter\(aq, <SubServiceFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B NovaServicesTable.base_columns = OrderedDict([(\(aqbinary\(aq, <Column: binary>), (\(aqhost\(aq, <Column: host>), (\(aqzone\(aq, <Column: zone>), (\(aqstatus\(aq, <Column: status>), (\(aqstate\(aq, <Column: state>), (\(aqupdated_at\(aq, <Column: updated_at>)])
.UNINDENT
.INDENT 7.0
.TP
.B NovaServicesTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.ServiceFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.info.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqfilter_field\(aq: \(aqtype\(aq, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9986398>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, services, filter_string)
.UNINDENT
.INDENT 7.0
.TP
.B filter_field = \(aqtype\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.ServicesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqservices\(aq
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.info.tables.ServiceFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba30bb50>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ServicesTable.base_actions = OrderedDict([(\(aqfilter\(aq, <ServiceFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B ServicesTable.base_columns = OrderedDict([(\(aqid\(aq, <Column: id>), (\(aqname\(aq, <Column: name>), (\(aqservice_type\(aq, <Column: service_type>), (\(aqhost\(aq, <Column: host>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.tables.SubServiceFilterAction(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.admin.info.tables.ServiceFilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.info.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqfilter_field\(aq: \(aqbinary\(aq, \(aqfilter\(aq: <function filter at 0x7ff3b9986398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B filter_field = \(aqbinary\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.info.tables.get_agent_status(agent)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.info.tables.get_available(zone)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.info.tables.get_network_agent_state(agent)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.info.tables.get_network_agent_status(agent)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.info.tables.get_status(service)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.info.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.info.panel.Info
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba70f210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqinfo\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.views.AdminDetailView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9c8d890>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBAdminHypervisorInstancesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/hypervisors/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.views.AdminIndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9c8d390>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBHypervisorHostTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/hypervisors/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.tabs.HypervisorHostTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqhypervisor_info\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.hypervisors.tabs.HypervisorTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tabs.ComputeHostTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.tabs.HypervisorTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_hypervisors_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9801150>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqhypervisor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.hypervisors.tables.AdminHypervisorsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.tables.AdminHypervisorInstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqhypervisor_instances\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9a3f450>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AdminHypervisorInstancesTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B AdminHypervisorInstancesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqinstance_id\(aq, <Column: instance_id>)])
.UNINDENT
.INDENT 7.0
.TP
.B AdminHypervisorInstancesTable.get_object_id(server)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.tables.AdminHypervisorsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqhypervisors\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9be4910>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AdminHypervisorsTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B AdminHypervisorsTable.base_columns = OrderedDict([(\(aqhostname\(aq, <Column: hostname>), (\(aqhypervisor_type\(aq, <Column: hypervisor_type>), (\(aqvcpus_used\(aq, <Column: vcpus_used>), (\(aqvcpus\(aq, <Column: vcpus>), (\(aqmemory_used\(aq, <Column: memory_used>), (\(aqmemory\(aq, <Column: memory>), (\(aqlocal_used\(aq, <Column: local_used>), (\(aqlocal\(aq, <Column: local>), (\(aqrunning_vms\(aq, <Column: running_vms>)])
.UNINDENT
.INDENT 7.0
.TP
.B AdminHypervisorsTable.get_object_id(hypervisor)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.panel.Hypervisors
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9ce4c10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.roles.admin\(aq, \(aqopenstack.services.compute\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqhypervisors\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.compute.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.views.DisableServiceView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqcompute_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBDisableServiceForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbb3c510>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbb3cb10>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/hypervisors/compute/disable_service.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.views.EvacuateHostView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqcompute_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBEvacuateHostForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_active_compute_hosts_names(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbb3c790>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbb3c810>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/hypervisors/compute/evacuate_host.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.views.MigrateHostView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqcompute_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBMigrateHostForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbb3c650>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bbb3cbd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/hypervisors/compute/migrate_host.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.compute\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.compute.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tabs.ComputeHostTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_compute_host_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9bc0210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcompute_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables.ComputeHostTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.compute.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.compute.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tables.ComputeHostFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9a1f848>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, services, filter_string)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tables.ComputeHostTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcompute_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables.EvacuateHost\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables.DisableService\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables.EnableService\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables.MigrateMaintenanceHost\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables.ComputeHostFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9c28bd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ComputeHostTable.STATUS_CHOICES = ((\(aqenabled\(aq, True), (\(aqdisabled\(aq, False), (\(aqup\(aq, True), (\(aqdown\(aq, False))
.UNINDENT
.INDENT 7.0
.TP
.B ComputeHostTable.STATUS_DISPLAY_CHOICES = ((\(aqenabled\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9c28350>), (\(aqdisabled\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9cbfb10>), (\(aqup\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9c28050>), (\(aqdown\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9c288d0>))
.UNINDENT
.INDENT 7.0
.TP
.B ComputeHostTable.base_actions = OrderedDict([(\(aqdisable\(aq, <DisableService: disable>), (\(aqenable\(aq, <EnableService: enable>), (\(aqevacuate\(aq, <EvacuateHost: evacuate>), (\(aqfilter\(aq, <ComputeHostFilterAction: filter>), (\(aqmigrate_maintenance\(aq, <MigrateMaintenanceHost: migrate_maintenance>)])
.UNINDENT
.INDENT 7.0
.TP
.B ComputeHostTable.base_columns = OrderedDict([(\(aqhost\(aq, <Column: host>), (\(aqzone\(aq, <Column: zone>), (\(aqstatus\(aq, <Column: status>), (\(aqstate\(aq, <Column: state>), (\(aqupdated_at\(aq, <Column: updated_at>)])
.UNINDENT
.INDENT 7.0
.TP
.B ComputeHostTable.get_object_display(obj)
.UNINDENT
.INDENT 7.0
.TP
.B ComputeHostTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tables.DisableService(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, service)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:services\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9a1f578>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqdisable\(aq, \(aqurl\(aq: \(aqhorizon:admin:hypervisors:compute:disable_service\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-confirm\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9c28490>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-confirm\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdisable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:services\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:hypervisors:compute:disable_service\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9c28490>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tables.EnableService(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, service)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:services\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b9a1f230>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqenable\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9a786a8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9a78718>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b9a1fa28>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqenable\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:services\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tables.EvacuateHost(**kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:evacuate\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9a1faa0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3b9a1fcf8>, \(aqname\(aq: \(aqevacuate\(aq, \(aqurl\(aq: \(aqhorizon:admin:hypervisors:compute:evacuate_host\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9c283d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqevacuate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:evacuate\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:hypervisors:compute:evacuate_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9c283d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.tables.MigrateMaintenanceHost(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, service)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.hypervisors.compute.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:migrate\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9a1f8c0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqmigrate_maintenance\(aq, \(aqurl\(aq: \(aqhorizon:admin:hypervisors:compute:migrate_host\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9a78be8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9a78c20>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq, \(aqbtn\-danger\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9c28110>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq, \(aqbtn\-danger\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmigrate_maintenance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:migrate\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:hypervisors:compute:migrate_host\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9c28110>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.hypervisors.compute.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.forms.DisableServiceForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3bd201990>), (\(aqreason\(aq, <django.forms.fields.CharField object at 0x7ff3bd201ad0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3bd201990>), (\(aqreason\(aq, <django.forms.fields.CharField object at 0x7ff3bd201ad0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.forms.EvacuateHostForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3bd201750>), (\(aqtarget_host\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd2012d0>), (\(aqon_shared_storage\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba30ba90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3bd201750>), (\(aqtarget_host\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd2012d0>), (\(aqon_shared_storage\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba30ba90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_host_choices(request, initial)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.hypervisors.compute.forms.MigrateHostForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3bd201d10>), (\(aqmigrate_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd201550>), (\(aqdisk_over_commit\(aq, <django.forms.fields.BooleanField object at 0x7ff3bce8f550>), (\(aqblock_migration\(aq, <django.forms.fields.BooleanField object at 0x7ff3bce8f210>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3bd201d10>), (\(aqmigrate_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd201550>), (\(aqdisk_over_commit\(aq, <django.forms.fields.BooleanField object at 0x7ff3bce8f550>), (\(aqblock_migration\(aq, <django.forms.fields.BooleanField object at 0x7ff3bce8f210>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.constants\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.views.CreateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9b62290>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/aggregates/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateAggregateWorkflow\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableView\fP
.INDENT 7.0
.TP
.B get_availability_zones_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_host_aggregates_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9b620d0>
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.HostAggregatesTable\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.AvailabilityZonesTable\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/aggregates/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.views.ManageHostsView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d2ce50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9d2c390>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/aggregates/manage_hosts.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBManageAggregateHostsWorkflow\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.views.UpdateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateAggregateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d2c910>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9b62210>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/aggregates/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.AggregateFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9b78500>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, aggregates, filter_string)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.AvailabilityZoneFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9b78578>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, availability_zones, filter_string)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.AvailabilityZonesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqavailability_zones\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.AvailabilityZoneFilterAction\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9b79dd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AvailabilityZonesTable.base_actions = OrderedDict([(\(aqfilter\(aq, <AvailabilityZoneFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B AvailabilityZonesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqhosts\(aq, <Column: hosts>), (\(aqavailable\(aq, <Column: available>)])
.UNINDENT
.INDENT 7.0
.TP
.B AvailabilityZonesTable.get_object_id(zone)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.CreateAggregateAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:aggregates:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9b629d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:aggregates:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9b629d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.DeleteAggregateAction(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9dc8360>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9dc8d00>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b9b78398>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.HostAggregatesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqhost_aggregates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.UpdateAggregateAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.ManageHostsAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.UpdateMetadataAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.DeleteAggregateAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.AggregateFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.CreateAggregateAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.tables.DeleteAggregateAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9b79390>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B HostAggregatesTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateAggregateAction: create>), (\(aqdelete\(aq, <DeleteAggregateAction: delete>), (\(aqfilter\(aq, <AggregateFilterAction: filter>), (\(aqmanage\(aq, <ManageHostsAction: manage>), (\(aqupdate\(aq, <UpdateAggregateAction: update>), (\(aqupdate\-metadata\(aq, <UpdateMetadataAction: update\-metadata>)])
.UNINDENT
.INDENT 7.0
.TP
.B HostAggregatesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqavailability_zone\(aq, <Column: availability_zone>), (\(aqhosts\(aq, <Column: hosts>), (\(aqmetadata\(aq, <Column: metadata>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.ManageHostsAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqmanage\(aq, \(aqurl\(aq: \(aqhorizon:admin:aggregates:manage_hosts\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9b62a50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmanage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:aggregates:manage_hosts\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9b62a50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.UpdateAggregateAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:admin:aggregates:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9d54d90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:aggregates:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9d54d90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.tables.UpdateMetadataAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B attrs = {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.aggregates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b9b78488>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3b9b78410>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\-metadata\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9b62ad0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\-metadata\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9b62ad0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.aggregates.tables.get_aggregate_hosts(aggregate)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.aggregates.tables.get_available(zone)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.aggregates.tables.get_metadata(aggregate)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.aggregates.tables.get_zone_hosts(zone)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.aggregates.tables.safe_unordered_list(value)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.AddHostsToAggregateAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9d124d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d12e90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqadd_host_to_aggregate\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.AddHostsToAggregateStep(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddHostsToAggregateAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d12210>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhosts_aggregate\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d121d0>
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d12250>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d12690>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d12650>
.UNINDENT
.INDENT 7.0
.TP
.B show_roles = False
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.CreateAggregateWorkflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.admin.aggregates.workflows.SetAggregateInfoStep\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.aggregates.workflows.AddHostsToAggregateStep\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d12710>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b9d12cd0>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9d12610>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_aggregate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d120d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:aggregates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.ManageAggregateHostsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9d12910>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d12150>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqmanageaggregatehostsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.ManageAggregateHostsStep(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBManageAggregateHostsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d12b10>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhosts_aggregate\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqid\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d12a90>
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9d12d10>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d12d90>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d12590>
.UNINDENT
.INDENT 7.0
.TP
.B show_roles = False
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.ManageAggregateHostsWorkflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.admin.aggregates.workflows.ManageAggregateHostsStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d2c350>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b9d2c3d0>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9d12810>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmanage_hosts_aggregate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d2c550>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:aggregates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.SetAggregateInfoAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9b62590>), (\(aqavailability_zone\(aq, <django.forms.fields.CharField object at 0x7ff3b9b62190>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9b62590>), (\(aqavailability_zone\(aq, <django.forms.fields.CharField object at 0x7ff3b9b62190>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9d12290>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9d123d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9d12550>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqset_aggregate_info\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.workflows.SetAggregateInfoStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetAggregateInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqavailability_zone\(aq, \(aqname\(aq)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.panel.Aggregates
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B allowed(context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9cbfb50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqaggregates\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.aggregates.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.aggregates.forms.UpdateAggregateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9d54cd0>), (\(aqavailability_zone\(aq, <django.forms.fields.CharField object at 0x7ff3b9be4790>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9d54cd0>), (\(aqavailability_zone\(aq, <django.forms.fields.CharField object at 0x7ff3b9be4790>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.instances.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.views.AdminIndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_filters(filters)
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd928290>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBAdminInstancesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/instances/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.views.AdminUpdateView
Bases: \fBopenstack_dashboard.dashboards.project.instances.views.UpdateView\fP
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bd928e10>
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBAdminUpdateInstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.views.DetailView
Bases: \fBopenstack_dashboard.dashboards.project.instances.views.DetailView\fP
.INDENT 7.0
.TP
.B image_url = \(aqhorizon:admin:images:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:admin:instances:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B volume_url = \(aqhorizon:admin:volumes:volumes:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.views.LiveMigrateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqinstance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBLiveMigrateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_hosts(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba4f40d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2e4350>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/instances/live_migrate.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.instances.views.console(args, **kvargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.instances.views.rdp(args, **kvargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.instances.views.spice(args, **kvargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.instances.views.vnc(args, **kvargs)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.instances\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.instances.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.instances.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.AdminConsoleLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.ConsoleLink\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:consoles\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8b90>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8b18>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqconsole\(aq, \(aqurl\(aq: \(aqhorizon:admin:instances:detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-console\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4f10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:instances:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.AdminEditInstance(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.EditInstance\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute:update\(aq),), \(aq_get_link_url\(aq: <function _get_link_url at 0x7ff3b97a88c0>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8848>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8938>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:admin:instances:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe40d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:instances:update\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.AdminInstanceFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.instances.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter_admin_instances\(aq, \(aqfilter_choices\(aq: ((\(aqproject\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd71ced0>, True), (\(aqhost\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20550>, True), (\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20350>, True), (\(aqip\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20390>, True), (\(aqip6\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a203d0>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20610>, True), (\(aqimage\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20590>, True), (\(aqflavor\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20a50>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqproject\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd71ced0>, True), (\(aqhost\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20550>, True), (\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20350>, True), (\(aqip\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20390>, True), (\(aqip6\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a203d0>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20610>, True), (\(aqimage\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20590>, True), (\(aqflavor\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9a20a50>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqfilter_admin_instances\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.AdminInstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqinstances\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.ConfirmResize\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.RevertResize\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.instances.tables.AdminEditInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.instances.tables.AdminConsoleLink\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.instances.tables.AdminLogLink\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.CreateSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.TogglePause\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ToggleSuspend\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.ToggleShelve\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.instances.tables.MigrateInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.instances.tables.LiveMigrateInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.SoftRebootInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.RebootInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.project.instances.tables.TerminateInstance\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBAdminUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq, \(aqtask\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.instances.tables.TerminateInstance\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.instances.tables.AdminInstanceFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba01d210>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AdminInstancesTable.STATUS_CHOICES = ((\(aqactive\(aq, True), (\(aqshutoff\(aq, True), (\(aqsuspended\(aq, True), (\(aqpaused\(aq, True), (\(aqerror\(aq, False), (\(aqrescue\(aq, True), (\(aqshelved\(aq, True), (\(aqshelved_offloaded\(aq, True))
.UNINDENT
.INDENT 7.0
.TP
.B AdminInstancesTable.TASK_STATUS_CHOICES = ((None, True), (\(aqnone\(aq, True))
.UNINDENT
.INDENT 7.0
.TP
.B AdminInstancesTable.base_actions = OrderedDict([(\(aqconfirm\(aq, <ConfirmResize: confirm>), (\(aqconsole\(aq, <AdminConsoleLink: console>), (\(aqedit\(aq, <AdminEditInstance: edit>), (\(aqfilter_admin_instances\(aq, <AdminInstanceFilterAction: filter_admin_instances>), (\(aqlive_migrate\(aq, <LiveMigrateInstance: live_migrate>), (\(aqlog\(aq, <AdminLogLink: log>), (\(aqmigrate\(aq, <MigrateInstance: migrate>), (\(aqpause\(aq, <TogglePause: pause>), (\(aqreboot\(aq, <RebootInstance: reboot>), (\(aqrevert\(aq, <RevertResize: revert>), (\(aqshelve\(aq, <ToggleShelve: shelve>), (\(aqsnapshot\(aq, <CreateSnapshot: snapshot>), (\(aqsoft_reboot\(aq, <SoftRebootInstance: soft_reboot>), (\(aqsuspend\(aq, <ToggleSuspend: suspend>), (\(aqterminate\(aq, <TerminateInstance: terminate>)])
.UNINDENT
.INDENT 7.0
.TP
.B AdminInstancesTable.base_columns = OrderedDict([(\(aqtenant\(aq, <Column: tenant>), (\(aqhost\(aq, <Column: host>), (\(aqname\(aq, <Column: name>), (\(aqimage_name\(aq, <Column: image_name>), (\(aqip\(aq, <Column: ip>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>), (\(aqtask\(aq, <Column: task>), (\(aqstate\(aq, <Column: state>), (\(aqcreated\(aq, <Column: created>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.AdminLogLink(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.LogLink\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:console_output\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b97a8c80>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b97a8c08>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlog\(aq, \(aqurl\(aq: \(aqhorizon:admin:instances:detail\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-log\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9fe4790>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:instances:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.AdminUpdateRow(table, datum=None)
Bases: \fBopenstack_dashboard.dashboards.project.instances.tables.UpdateRow\fP
.INDENT 7.0
.TP
.B get_data(request, instance_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.LiveMigrateInstance(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.instances.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:migrateLive\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9654410>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlive_migrate\(aq, \(aqurl\(aq: \(aqhorizon:admin:instances:live_migrate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq, \(aqbtn\-danger\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd71c050>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq, \(aqbtn\-danger\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlive_migrate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:migrateLive\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:instances:live_migrate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd71c050>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.tables.MigrateInstance(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.instances.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:migrate\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b98d2cf8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd33f710>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqmigrate\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9658da8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9658e88>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-migrate\(aq, \(aqbtn\-danger\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3b9654050>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-migrate\(aq, \(aqbtn\-danger\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bd33f710>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmigrate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqcompute\(aq, \(aqcompute_extension:admin_actions:migrate\(aq),)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.instances.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.panel.Instances
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc1b7590>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.roles.admin\(aq, \(aqopenstack.services.compute\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqinstances\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.instances.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.instances.forms.LiveMigrateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3b95fed50>), (\(aqhost\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fee10>), (\(aqdisk_over_commit\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95feed0>), (\(aqblock_migration\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95fef90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3b95fed50>), (\(aqhost\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b95fee10>), (\(aqdisk_over_commit\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95feed0>), (\(aqblock_migration\(aq, <django.forms.fields.BooleanField object at 0x7ff3b95fef90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_host_choices(request, initial)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.views\fP Module
.sp
Views for managing Neutron Routers.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.views.DetailView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.views.DetailView\fP
.INDENT 7.0
.TP
.B failure_url = <django.utils.functional.__proxy__ object at 0x7ff3bc42d990>
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBRouterDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/routers/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.views.IndexView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.views.IndexView\fP, \fBopenstack_dashboard.dashboards.admin.networks.views.IndexView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBRoutersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/routers/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.views.UpdateView
Bases: \fBopenstack_dashboard.dashboards.project.routers.views.UpdateView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:routers:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc42da90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.routers.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tabs.ExtraRoutesTab(tab_group, request)
Bases: \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tabs.ExtraRoutesTab\fP
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.routers.extensions.extraroutes.tables.AdminRouterRoutesTable\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tabs.InterfacesTab(tab_group, request)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tabs.InterfacesTab\fP
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.routers.ports.tables.PortsTable\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tabs.OverviewTab(tab_group, request=None)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tabs.OverviewTab\fP
.INDENT 7.0
.TP
.B template_name = \(aqproject/routers/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tabs.RouterDetailTabs(request, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tabs.RouterDetailTabs\fP
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.routers.tabs.OverviewTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.routers.tabs.InterfacesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.routers.tabs.ExtraRoutesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs.RulesGridTab\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.extensions.routerrules.tabs.RouterRulesTab\(aq>)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.routers.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tables.DeleteRouter(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tables.DeleteRouter\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.routers.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_router\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b8d11578>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8d9cbe8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d9cc90>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqredirect_url\(aq: \(aqhorizon:admin:routers:index\(aq, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8d11500>}
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:admin:routers:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tables.EditRouter(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tables.EditRouter\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.routers.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_router\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:admin:routers:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b95a8850>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:routers:update\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tables.RoutersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.tables.RoutersTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B Columns = (\(aqtenant\(aq, \(aqname\(aq, \(aqstatus\(aq, \(aqdistributed\(aq, \(aqext_net\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqRouters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.routers.tables.EditRouter\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.routers.tables.DeleteRouter\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.routers.tables.DeleteRouter\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.tables.RoutersFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b94b2bd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteRouter: delete>), (\(aqfilter\(aq, <RoutersFilterAction: filter>), (\(aqupdate\(aq, <EditRouter: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B RoutersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqstatus\(aq, <Column: status>), (\(aqdistributed\(aq, <Column: distributed>), (\(aqha\(aq, <Column: ha>), (\(aqext_net\(aq, <Column: ext_net>), (\(aqadmin_state\(aq, <Column: admin_state>), (\(aqtenant\(aq, <Column: tenant>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, router_id)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.panel.Routers
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B static can_register()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b90fbc10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqrouters\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.forms.UpdateForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.forms.UpdateForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43710>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f434d0>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43a90>), (\(aqmode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43cd0>), (\(aqha\(aq, <django.forms.fields.BooleanField object at 0x7ff3b984d450>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43710>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f434d0>), (\(aqrouter_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9f43a90>), (\(aqmode\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9f43cd0>), (\(aqha\(aq, <django.forms.fields.BooleanField object at 0x7ff3b984d450>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = <django.utils.functional.__proxy__ object at 0x7ff3b984dc50>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.ports.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.ports.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPortDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/ports/detail.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.ports\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.routers.ports.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.ports.tabs.OverviewTab(tab_group, request=None)
Bases: \fBopenstack_dashboard.dashboards.project.routers.ports.tabs.OverviewTab\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:admin:routers:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/ports/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.ports.tabs.PortDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqport_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.routers.ports.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.ports.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.routers.ports.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.ports.tables.PortsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.ports.tables.PortsTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqinterfaces\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.RemoveInterface\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.AddInterface\(aq>, <class \(aqopenstack_dashboard.dashboards.project.routers.ports.tables.RemoveInterface\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc489350>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <AddInterface: create>), (\(aqdelete\(aq, <RemoveInterface: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqfixed_ips\(aq, <Column: fixed_ips>), (\(aqstatus\(aq, <Column: status>), (\(aqdevice_owner\(aq, <Column: device_owner>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.routers.extensions\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.routers.extensions.extraroutes\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.routers.extensions.extraroutes.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.routers.extensions.extraroutes.tables.AdminRouterRoutesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.routers.extensions.extraroutes.tables.ExtraRoutesTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqextra_routes\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b95d0a90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AdminRouterRoutesTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B AdminRouterRoutesTable.base_columns = OrderedDict([(\(aqdestination\(aq, <Column: destination>), (\(aqnexthop\(aq, <Column: nexthop>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.flavors.constants\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.flavors.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.views.CreateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba798310>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/flavors/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateFlavor\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc3acf50>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBFlavorsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/flavors/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.views.UpdateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba798850>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/flavors/update.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateFlavor\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.flavors\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.flavors.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.flavors.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.CreateFlavor(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.flavors.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:flavors:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9f18b90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:flavors:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9f18b90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.DeleteFlavor(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.flavors.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9cffc58>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9cffc90>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3ba122230>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.FlavorFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.flavors.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3ba122488>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, flavors, filter_string)
Really naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.FlavorsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqflavors\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.UpdateFlavor\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.ModifyAccess\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.UpdateMetadata\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.DeleteFlavor\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.FlavorFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.CreateFlavor\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.tables.DeleteFlavor\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcf7d590>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B FlavorsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateFlavor: create>), (\(aqdelete\(aq, <DeleteFlavor: delete>), (\(aqfilter\(aq, <FlavorFilterAction: filter>), (\(aqprojects\(aq, <ModifyAccess: projects>), (\(aqupdate\(aq, <UpdateFlavor: update>), (\(aqupdate_metadata\(aq, <UpdateMetadata: update_metadata>)])
.UNINDENT
.INDENT 7.0
.TP
.B FlavorsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqvcpus\(aq, <Column: vcpus>), (\(aqram\(aq, <Column: ram>), (\(aqdisk\(aq, <Column: disk>), (\(aqephemeral\(aq, <Column: ephemeral>), (\(aqswap\(aq, <Column: swap>), (\(aqflavor_id\(aq, <Column: flavor_id>), (\(aqpublic\(aq, <Column: public>), (\(aqextra_specs\(aq, <UpdateMetadataColumn: extra_specs>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.ModifyAccess(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.flavors.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba122410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqprojects\(aq, \(aqurl\(aq: \(aqhorizon:admin:flavors:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9f18e50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(flavor)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqprojects\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:flavors:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9f18e50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.UpdateFlavor(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.flavors.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:admin:flavors:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9f18850>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:flavors:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9f18850>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.UpdateMetadata(**kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B attrs = {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.flavors.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba122320>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3ba1222a8>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_metadata\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9f18a50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_metadata\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9f18a50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.tables.UpdateMetadataColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.flavors.tables.get_disk_size(flavor)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.flavors.tables.get_ephemeral_size(flavor)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.flavors.tables.get_extra_specs(flavor)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.flavors.tables.get_size(flavor)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.flavors.tables.get_swap_size(flavor)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.flavors.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.CreateFlavor(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.admin.flavors.workflows.CreateFlavorInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorAccess\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9950>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b9ef92d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9ef95d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_flavor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9f10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:flavors:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.CreateFlavorInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBCreateFlavorInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqflavor_id\(aq, \(aqname\(aq, \(aqvcpus\(aq, \(aqmemory_mb\(aq, \(aqdisk_gb\(aq, \(aqeph_gb\(aq, \(aqswap_mb\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.CreateFlavorInfoAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3ba798390>), (\(aqflavor_id\(aq, <django.forms.fields.RegexField object at 0x7ff3bab88950>), (\(aqvcpus\(aq, <django.forms.fields.IntegerField object at 0x7ff3bab886d0>), (\(aqmemory_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b91d0>), (\(aqdisk_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b9d50>), (\(aqeph_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5310>), (\(aqswap_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5110>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3ba798390>), (\(aqflavor_id\(aq, <django.forms.fields.RegexField object at 0x7ff3bab88950>), (\(aqvcpus\(aq, <django.forms.fields.IntegerField object at 0x7ff3bab886d0>), (\(aqmemory_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b91d0>), (\(aqdisk_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b9d50>), (\(aqeph_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5310>), (\(aqswap_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5110>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba4f5e10>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba4f5650>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9450>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqcreateflavorinfoaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavor(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorInfo\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorAccess\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3b9e96fd0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9190>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_flavor\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3b9e96090>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:flavors:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorAccess(workflow)
Bases: \fBhorizon.workflows.base.UpdateMembersStep\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateFlavorAccessAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B available_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9550>
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqflavor_access\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqflavor_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9fd0>
.UNINDENT
.INDENT 7.0
.TP
.B members_list_title = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9ad0>
.UNINDENT
.INDENT 7.0
.TP
.B no_available_text = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9710>
.UNINDENT
.INDENT 7.0
.TP
.B no_members_text = <django.utils.functional.__proxy__ object at 0x7ff3b9ef98d0>
.UNINDENT
.INDENT 7.0
.TP
.B show_roles = False
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorAccessAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.MembershipAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9c50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9790>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_flavor_access\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorInfo(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateFlavorInfoAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqvcpus\(aq, \(aqmemory_mb\(aq, \(aqdisk_gb\(aq, \(aqeph_gb\(aq, \(aqswap_mb\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B depends_on = (\(aqflavor_id\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.workflows.UpdateFlavorInfoAction(request, context, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.admin.flavors.workflows.CreateFlavorInfoAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3ba798390>), (\(aqflavor_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9ef90d0>), (\(aqvcpus\(aq, <django.forms.fields.IntegerField object at 0x7ff3bab886d0>), (\(aqmemory_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b91d0>), (\(aqdisk_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b9d50>), (\(aqeph_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5310>), (\(aqswap_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5110>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.RegexField object at 0x7ff3ba798390>), (\(aqflavor_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9ef90d0>), (\(aqvcpus\(aq, <django.forms.fields.IntegerField object at 0x7ff3bab886d0>), (\(aqmemory_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b91d0>), (\(aqdisk_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8b9d50>), (\(aqeph_gb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5310>), (\(aqswap_mb\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba4f5110>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9610>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9ef9a50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3b9ef91d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_info\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.flavors.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.flavors.panel.Flavors
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9e96190>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.compute\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqflavors\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.images.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.views.CreateView
Bases: \fBopenstack_dashboard.dashboards.project.images.images.views.CreateView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAdminCreateImageForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2d84d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8090>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8a50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/images/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.views.DetailView
Bases: \fBopenstack_dashboard.dashboards.project.images.images.views.DetailView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_filters()
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8410>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBAdminImagesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/images/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.views.UpdateView
Bases: \fBopenstack_dashboard.dashboards.project.images.images.views.UpdateView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAdminUpdateImageForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8450>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:images:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba2d8810>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/images/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.images\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.images.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.images.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.AdminCreateImage(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.tables.CreateImage\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqadd_image\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:images:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc42abd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:images:create\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.AdminDeleteImage(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.tables.DeleteImage\fP
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.images.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqdelete_image\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3b9b702a8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bccdf790>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9cff5c8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9b55e18>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b9a9cf50>}
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.AdminEditImage(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.tables.EditImage\fP
.INDENT 7.0
.TP
.B allowed(request, image=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqmodify_image\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b9b70320>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:admin:images:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc42aa10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:images:update\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.AdminImageFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.images.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9c8dbd0>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e650>, True), (\(aqdisk_format\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e510>, True), (\(aqsize_min\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e990>, True), (\(aqsize_max\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e4d0>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3b9c8dbd0>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e650>, True), (\(aqdisk_format\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e510>, True), (\(aqsize_min\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e990>, True), (\(aqsize_max\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb85e4d0>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.AdminImagesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.tables.ImagesTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B columns = (\(aqtenant\(aq, \(aqname\(aq, \(aqimage_type\(aq, \(aqstatus\(aq, \(aqpublic\(aq, \(aqprotected\(aq, \(aqdisk_format\(aq, \(aqsize\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqimages\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.images.tables.AdminEditImage\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.images.tables.UpdateMetadata\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.images.tables.AdminDeleteImage\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.images.tables.AdminCreateImage\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.images.tables.AdminDeleteImage\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.images.tables.AdminImageFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb85e750>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AdminImagesTable.base_actions = OrderedDict([(\(aqcreate\(aq, <AdminCreateImage: create>), (\(aqdelete\(aq, <AdminDeleteImage: delete>), (\(aqedit\(aq, <AdminEditImage: edit>), (\(aqfilter\(aq, <AdminImageFilterAction: filter>), (\(aqupdate_metadata\(aq, <UpdateMetadata: update_metadata>)])
.UNINDENT
.INDENT 7.0
.TP
.B AdminImagesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqimage_type\(aq, <Column: image_type>), (\(aqstatus\(aq, <Column: status>), (\(aqpublic\(aq, <Column: public>), (\(aqprotected\(aq, <Column: protected>), (\(aqdisk_format\(aq, <Column: disk_format>), (\(aqsize\(aq, <Column: size>), (\(aqtenant\(aq, <Column: tenant>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.UpdateMetadata(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = False
.UNINDENT
.INDENT 7.0
.TP
.B attrs = {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.images.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b9b70410>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqng\-controller\(aq: \(aqMetadataModalHelperController as modal\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3b9b70398>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_metadata\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bccdfc90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_metadata\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bccdfc90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, image_id)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.images.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.panel.Images
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9c8dc90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.image\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqimages\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.images.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.forms.AdminCreateImageForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.forms.CreateImageForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5610>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5250>), (\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bdc0d310>), (\(aqimage_url\(aq, <django.forms.fields.URLField object at 0x7ff3bcbd0cd0>), (\(aqimage_file\(aq, <django.forms.fields.FileField object at 0x7ff3bb96a4d0>), (\(aqkernel\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a1d0>), (\(aqramdisk\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a850>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a190>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bb96a690>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae150>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae9d0>), (\(aqis_copying\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb50>), (\(aqis_public\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aedd0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5610>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd7d5250>), (\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bdc0d310>), (\(aqimage_url\(aq, <django.forms.fields.URLField object at 0x7ff3bcbd0cd0>), (\(aqimage_file\(aq, <django.forms.fields.FileField object at 0x7ff3bb96a4d0>), (\(aqkernel\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a1d0>), (\(aqramdisk\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a850>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb96a190>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bb96a690>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae150>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7ae9d0>), (\(aqis_copying\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb50>), (\(aqis_public\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aedd0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba7aeb10>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.images.forms.AdminUpdateImageForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.images.images.forms.UpdateImageForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba7ae410>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc930d90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc930990>), (\(aqkernel\(aq, <django.forms.fields.CharField object at 0x7ff3bc930110>), (\(aqramdisk\(aq, <django.forms.fields.CharField object at 0x7ff3bc930f90>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bc930810>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bba84250>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84050>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84fd0>), (\(aqpublic\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba847d0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba84210>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba7ae410>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc930d90>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc930990>), (\(aqkernel\(aq, <django.forms.fields.CharField object at 0x7ff3bc930110>), (\(aqramdisk\(aq, <django.forms.fields.CharField object at 0x7ff3bc930f90>), (\(aqarchitecture\(aq, <django.forms.fields.CharField object at 0x7ff3bc930810>), (\(aqdisk_format\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bba84250>), (\(aqminimum_disk\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84050>), (\(aqminimum_ram\(aq, <django.forms.fields.IntegerField object at 0x7ff3bba84fd0>), (\(aqpublic\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba847d0>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3bba84210>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.defaults.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba5a4e50>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBDefaultsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/defaults/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.views.UpdateDefaultQuotasView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateDefaultQuotas\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.defaults\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.defaults.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.tabs.DefaultQuotasTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_quotas_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb88a6d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqquotas\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.defaults.tables.QuotasTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.tabs.DefaultsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqdefaults\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.defaults.tabs.DefaultQuotasTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.defaults.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.defaults.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.tables.QuotaFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.defaults.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b9b42848>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, tenants, filter_string)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.tables.QuotasTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B multi_select = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqquotas\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.defaults.tables.QuotaFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.defaults.tables.UpdateDefaultQuotas\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd33f990>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B QuotasTable.base_actions = OrderedDict([(\(aqfilter\(aq, <QuotaFilterAction: filter>), (\(aqupdate_defaults\(aq, <UpdateDefaultQuotas: update_defaults>)])
.UNINDENT
.INDENT 7.0
.TP
.B QuotasTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqlimit\(aq, <Column: limit>)])
.UNINDENT
.INDENT 7.0
.TP
.B QuotasTable.get_object_id(obj)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.tables.UpdateDefaultQuotas(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.defaults.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_defaults\(aq, \(aqurl\(aq: \(aqhorizon:admin:defaults:update_defaults\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd33fd50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_defaults\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:defaults:update_defaults\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd33fd50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.defaults.tables.get_quota_name(quota)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.defaults.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.workflows.UpdateDefaultQuotas(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.dashboards.admin.defaults.workflows.UpdateDefaultQuotasStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3ba825810>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3ba8a8510>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba8a8c90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_default_quotas\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3ba825a10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:defaults:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.workflows.UpdateDefaultQuotasAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8a99d0>), (\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734c90>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734110>), (\(aqkey_pairs\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734490>), (\(aqinjected_file_path_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734150>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7343d0>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7342d0>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734050>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734a50>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734250>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3bac16910>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3bac16610>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8a8ad0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinjected_file_content_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8a99d0>), (\(aqmetadata_items\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734c90>), (\(aqram\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734190>), (\(aqfloating_ips\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734110>), (\(aqkey_pairs\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734490>), (\(aqinjected_file_path_bytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734150>), (\(aqinstances\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7343d0>), (\(aqsecurity_group_rules\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba7342d0>), (\(aqinjected_files\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734050>), (\(aqcores\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734a50>), (\(aqsecurity_groups\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba734250>), (\(aqgigabytes\(aq, <django.forms.fields.IntegerField object at 0x7ff3bac16910>), (\(aqsnapshots\(aq, <django.forms.fields.IntegerField object at 0x7ff3bac16610>), (\(aqvolumes\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba8a8ad0>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba8a8e90>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B ifcb_label = <django.utils.functional.__proxy__ object at 0x7ff3ba8a9150>
.UNINDENT
.INDENT 7.0
.TP
.B ifpb_label = <django.utils.functional.__proxy__ object at 0x7ff3ba8a9250>
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba8a8290>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba8a8150>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqupdate_default_quotas\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.workflows.UpdateDefaultQuotasStep(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBUpdateDefaultQuotasAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqmetadata_items\(aq, \(aqcores\(aq, \(aqinstances\(aq, \(aqinjected_files\(aq, \(aqinjected_file_content_bytes\(aq, \(aqram\(aq, \(aqfloating_ips\(aq, \(aqfixed_ips\(aq, \(aqsecurity_groups\(aq, \(aqsecurity_group_rules\(aq, \(aqvolumes\(aq, \(aqsnapshots\(aq, \(aqgigabytes\(aq, \(aqnetwork\(aq, \(aqsubnet\(aq, \(aqport\(aq, \(aqrouter\(aq, \(aqfloatingip\(aq, \(aqsecurity_group\(aq, \(aqsecurity_group_rule\(aq, \(aqkey_pairs\(aq, \(aqinjected_file_path_bytes\(aq)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.defaults.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.defaults.panel.Defaults
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd90b050>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdefaults\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.constants\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.views.AdminIndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B has_prev_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9be4a50>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBAdminNamespacesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metadata_defs/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqnamespace\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateNamespaceForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9be4390>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9be4550>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metadata_defs/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.views.DetailView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9be4f50>
.UNINDENT
.INDENT 7.0
.TP
.B redirect_url = \(aqhorizon:admin:metadata_defs:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBNamespaceDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metadata_defs/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.views.ManageResourceTypes
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBManageResourceTypesForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b9be49d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metadata_defs/resource_types.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tabs.ContentsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b94b22d0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcontents\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metadata_defs/_detail_contents.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tabs.NamespaceDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqnamespace_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tabs.OverviewTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tabs.ContentsTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd1d4dd0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/metadata_defs/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.AdminMetadataFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.AdminNamespacesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqnamespaces\(aq
.UNINDENT
.INDENT 7.0
.TP
.B pagination_param = \(aqnamespace_marker\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables.ManageResourceTypeAssociations\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables.DeleteNamespace\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables.AdminMetadataFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables.ImportNamespace\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables.DeleteNamespace\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb8c9590>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B AdminNamespacesTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteNamespace: delete>), (\(aqfilter\(aq, <AdminMetadataFilterAction: filter>), (\(aqimport\(aq, <ImportNamespace: import>), (\(aqmanage_resource_types\(aq, <ManageResourceTypeAssociations: manage_resource_types>)])
.UNINDENT
.INDENT 7.0
.TP
.B AdminNamespacesTable.base_columns = OrderedDict([(\(aqdisplay_name\(aq, <Column: display_name>), (\(aqdescription\(aq, <Column: description>), (\(aqresource_type_names\(aq, <Column: resource_type_names>), (\(aqpublic\(aq, <Column: public>), (\(aqprotected\(aq, <Column: protected>)])
.UNINDENT
.INDENT 7.0
.TP
.B AdminNamespacesTable.get_object_display(datum)
.UNINDENT
.INDENT 7.0
.TP
.B AdminNamespacesTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.DeleteNamespace(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, namespace=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqdelete_metadef_namespace\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b94d6de8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9621c58>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b96b9de0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b94d6e60>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqdelete_metadef_namespace\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.ImportNamespace(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqadd_metadef_namespace\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqimport\(aq, \(aqurl\(aq: \(aqhorizon:admin:metadata_defs:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9d4acd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqimport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqadd_metadef_namespace\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:metadata_defs:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9d4acd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.ManageResourceTypeAssociations(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, namespace=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.metadata_defs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqimage\(aq, \(aqlist_metadef_resource_types\(aq), (\(aqimage\(aq, \(aqadd_metadef_resource_type_association\(aq)), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b94d6ed8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqmanage_resource_types\(aq, \(aqurl\(aq: \(aqhorizon:admin:metadata_defs:resource_types\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9d4a910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmanage_resource_types\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqlist_metadef_resource_types\(aq), (\(aqimage\(aq, \(aqadd_metadef_resource_type_association\(aq))
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:metadata_defs:resource_types\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9d4a910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.UpdateCell
Bases: \fBhorizon.tables.actions.UpdateAction\fP
.INDENT 7.0
.TP
.B policy_rules = ((\(aqimage\(aq, \(aqmodify_metadef_namespace\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B update_cell(request, datum, namespace_name, cell_name, new_cell_value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, namespace_name)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.panel.MetadataDefinitions
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B static can_register()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b95d0190>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.roles.admin\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqmetadata_defs\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.metadata_defs.forms\fP Module
.sp
Forms for managing metadata.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.forms.CreateNamespaceForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb83e10>), (\(aqmetadef_file\(aq, <django.forms.fields.FileField object at 0x7ff3bd9bcc10>), (\(aqdirect_input\(aq, <django.forms.fields.CharField object at 0x7ff3bd9bcfd0>), (\(aqpublic\(aq, <django.forms.fields.BooleanField object at 0x7ff3bd9bc410>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3bd9bc150>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqsource_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb83e10>), (\(aqmetadef_file\(aq, <django.forms.fields.FileField object at 0x7ff3bd9bcc10>), (\(aqdirect_input\(aq, <django.forms.fields.CharField object at 0x7ff3bd9bcfd0>), (\(aqpublic\(aq, <django.forms.fields.BooleanField object at 0x7ff3bd9bc410>), (\(aqprotected\(aq, <django.forms.fields.BooleanField object at 0x7ff3bd9bc150>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.metadata_defs.forms.ManageResourceTypesForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B get_names(items)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.views\fP Module
.sp
Admin views for managing volumes and snapshots.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9651750>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBVolumesGroupTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.tabs.SnapshotTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_volume_snapshots_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba32ead0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqsnapshots_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.snapshots.tables.VolumeSnapshotsTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.tabs.VolumeTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP, \fBopenstack_dashboard.dashboards.project.volumes.tabs.VolumeTableMixIn\fP
.INDENT 7.0
.TP
.B get_volumes_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba32ecd0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvolumes_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables.VolumesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volumes/volumes_tables.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.tabs.VolumeTypesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP, \fBopenstack_dashboard.dashboards.project.volumes.tabs.VolumeTableMixIn\fP
.INDENT 7.0
.TP
.B get_qos_specs_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_volume_types_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba32e390>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvolume_types_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.VolumeTypesTable\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.QosSpecsTable\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/volume_types_tables.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.tabs.VolumesGroupTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqvolumes_group_tabs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.tabs.VolumeTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.tabs.VolumeTypesTab\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.tabs.SnapshotTab\(aq>)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.panel.Volumes
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b8bbbb90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.volume\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqvolumes\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.views\fP Module
.sp
Admin views for managing volumes.
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.CreateQosSpecView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateQosSpec\fP
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba64f990>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_volume_type_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba64fa90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba64ff50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64fbd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64f3d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/create_qos_spec.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.CreateVolumeTypeEncryptionView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateVolumeTypeEncryption\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_volume_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_name(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba64f310>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_volume_type_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba64fd50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba64ff10>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:create_type_encryption\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64f510>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/create_volume_type_encryption.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.CreateVolumeTypeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateVolumeType\fP
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba64fed0>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqcreate_volume_type_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba64fe90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba64f7d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64f610>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64fb90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/create_volume_type.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.EditQosSpecConsumerView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBEditQosSpecConsumer\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba64fe50>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqedit_qos_spec_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba64fb50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba64f190>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:edit_qos_spec_consumer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64f4d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/edit_qos_spec_consumer.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.EditVolumeTypeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64f1d0>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBEditVolumeType\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba64ffd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64f890>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/update_volume_type.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.ManageQosSpecAssociationView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B find_current_qos_spec_association(vol_type_id)
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBManageQosSpecAssociation\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_qos_specs(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba64fc90>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqassociate_qos_spec_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba64f150>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba64f050>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:manage_qos_spec_association\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba64fb10>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/associate_qos_spec.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.views.VolumeTypeEncryptionDetailView(**kwargs)
Bases: \fBdjango.views.generic.base.TemplateView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba64fdd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/volume_encryption_type_detail.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.CreateQosSpec(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:create_qos_spec\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcc4fed0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:create_qos_spec\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcc4fed0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.CreateVolumeType(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:create_type\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bacf3e50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:create_type\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bacf3e50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.CreateVolumeTypeEncryption(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume_type)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:volume_type_encryption\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8d39500>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate_encryption\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:create_type_encryption\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bacf3710>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate_encryption\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:volume_type_encryption\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:create_type_encryption\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bacf3710>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteQosSpecs(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9024e18>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8d4d0f8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8dc5050>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, qos_spec_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteVolumeType(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9024ec0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8b94d00>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8d39488>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteVolumeTypeEncryption(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, volume_type=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:volume_type_encryption\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3b8d396e0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete_encryption\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8b94c20>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8b94d70>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8d39668>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, volume_type_id)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdelete_encryption\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:volume_type_encryption\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.EditConsumer(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit_consumer\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:edit_qos_spec_consumer\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcc4f8d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit_consumer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:edit_qos_spec_consumer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcc4f8d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.EditVolumeType(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:update_type\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bacf3110>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:update_type\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bacf3110>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.ManageQosSpec(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqqos_spec\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:qos_specs:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcc4fbd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqqos_spec\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:qos_specs:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcc4fbd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.ManageQosSpecAssociation(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqassociate\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:manage_qos_spec_association\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bacf3190>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqassociate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:manage_qos_spec_association\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bacf3190>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.QosSpecsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqqos_specs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.ManageQosSpec\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.EditConsumer\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteQosSpecs\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.CreateQosSpec\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteQosSpecs\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcc4f5d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B QosSpecsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateQosSpec: create>), (\(aqdelete\(aq, <DeleteQosSpecs: delete>), (\(aqedit_consumer\(aq, <EditConsumer: edit_consumer>), (\(aqqos_spec\(aq, <ManageQosSpec: qos_spec>)])
.UNINDENT
.INDENT 7.0
.TP
.B QosSpecsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqconsumer\(aq, <Column: consumer>), (\(aqspecs\(aq, <Column: specs>)])
.UNINDENT
.INDENT 7.0
.TP
.B QosSpecsTable.get_object_display(qos_specs)
.UNINDENT
.INDENT 7.0
.TP
.B QosSpecsTable.get_object_id(qos_specs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.UpdateCell
Bases: \fBhorizon.tables.actions.UpdateAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume_type, cell)
.UNINDENT
.INDENT 7.0
.TP
.B update_cell(request, data, volume_type_id, cell_name, new_cell_value)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, volume_type_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.ViewVolumeTypeExtras(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqextras\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:extras:index\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bacf3a10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqextras\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:types_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:extras:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bacf3a10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.VolumeTypesFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b8d39848>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, volume_types, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.tables.VolumeTypesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqvolume_types\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.CreateVolumeTypeEncryption\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.ViewVolumeTypeExtras\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.ManageQosSpecAssociation\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.EditVolumeType\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteVolumeTypeEncryption\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteVolumeType\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.VolumeTypesFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.CreateVolumeType\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.tables.DeleteVolumeType\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbf34bd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B VolumeTypesTable.base_actions = OrderedDict([(\(aqassociate\(aq, <ManageQosSpecAssociation: associate>), (\(aqcreate\(aq, <CreateVolumeType: create>), (\(aqcreate_encryption\(aq, <CreateVolumeTypeEncryption: create_encryption>), (\(aqdelete\(aq, <DeleteVolumeType: delete>), (\(aqdelete_encryption\(aq, <DeleteVolumeTypeEncryption: delete_encryption>), (\(aqedit\(aq, <EditVolumeType: edit>), (\(aqextras\(aq, <ViewVolumeTypeExtras: extras>), (\(aqfilter\(aq, <VolumeTypesFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B VolumeTypesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqassoc_qos_spec\(aq, <Column: assoc_qos_spec>), (\(aqencryption\(aq, <Column: encryption>)])
.UNINDENT
.INDENT 7.0
.TP
.B VolumeTypesTable.get_object_display(vol_type)
.UNINDENT
.INDENT 7.0
.TP
.B VolumeTypesTable.get_object_id(vol_type)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.volumes.volume_types.tables.get_volume_type_encryption(volume_type)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.volumes.volume_types.tables.render_spec_keys(qos_spec)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.forms.CreateQosSpec(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc5cb890>), (\(aqconsumer\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc5cb3d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc5cb890>), (\(aqconsumer\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc5cb3d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.forms.CreateVolumeType(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc5cbb10>), (\(aqvol_type_description\(aq, <django.forms.fields.CharField object at 0x7ff3bc5cb710>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean_name()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc5cbb10>), (\(aqvol_type_description\(aq, <django.forms.fields.CharField object at 0x7ff3bc5cb710>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.forms.CreateVolumeTypeEncryption(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4b90>), (\(aqprovider\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4b10>), (\(aqcontrol_location\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9da4a50>), (\(aqcipher\(aq, <django.forms.fields.CharField object at 0x7ff3b9da45d0>), (\(aqkey_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9da4a90>), (\(aqvolume_type_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4390>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4b90>), (\(aqprovider\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4b10>), (\(aqcontrol_location\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9da4a50>), (\(aqcipher\(aq, <django.forms.fields.CharField object at 0x7ff3b9da45d0>), (\(aqkey_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9da4a90>), (\(aqvolume_type_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4390>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.forms.EditQosSpecConsumer(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqconsumer_choice\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9da4090>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean_consumer_choice()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqconsumer_choice\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9da4090>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.forms.EditVolumeType(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4350>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3ba64f690>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean_name()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9da4350>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3ba64f690>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.forms.ManageQosSpecAssociation(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqqos_spec_choice\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9da4f90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqqos_spec_choice\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9da4f90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_qos_spec_choices()
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.CreateKeyValuePairView
Bases: \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.QosSpecMixin\fP, \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateKeyValuePair\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqextra_spec_create_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba82b590>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqqos_spec_create_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba82b710>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba82b2d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:qos_specs:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/qos_specs/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:qos_specs:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.EditKeyValuePairView
Bases: \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.QosSpecMixin\fP, \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBEditKeyValuePair\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqqos_spec_edit_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3ba82b090>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqqos_spec_edit_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba82b290>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3ba82bb90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:qos_specs:edit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/qos_specs/edit.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:qos_specs:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.IndexView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.QosSpecMixin\fP, \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba82b610>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBSpecsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/qos_specs/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.views.QosSpecMixin
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B get_context_data(*args, **kwargs)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecCreateKeyValuePair(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8eb2de8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:qos_specs:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90f4510>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(qos_spec=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:qos_specs:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90f4510>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecDeleteKeyValuePair(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqdata_type_singular\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90f4610>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqdata_type_plural\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90f4490>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8eb2e60>}
.UNINDENT
.INDENT 7.0
.TP
.B data_type_plural = <django.utils.functional.__proxy__ object at 0x7ff3b90f4490>
.UNINDENT
.INDENT 7.0
.TP
.B data_type_singular = <django.utils.functional.__proxy__ object at 0x7ff3b90f4610>
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_ids)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecEditKeyValuePair(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8eb2ed8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:qos_specs:edit\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90f42d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(qos_spec)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:qos_specs:edit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90f42d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqspecs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecEditKeyValuePair\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecDeleteKeyValuePair\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecCreateKeyValuePair\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.tables.SpecDeleteKeyValuePair\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b90f4dd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B SpecsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <SpecCreateKeyValuePair: create>), (\(aqdelete\(aq, <SpecDeleteKeyValuePair: delete>), (\(aqedit\(aq, <SpecEditKeyValuePair: edit>)])
.UNINDENT
.INDENT 7.0
.TP
.B SpecsTable.base_columns = OrderedDict([(\(aqkey\(aq, <Column: key>), (\(aqvalue\(aq, <Column: value>)])
.UNINDENT
.INDENT 7.0
.TP
.B SpecsTable.get_object_display(datum)
.UNINDENT
.INDENT 7.0
.TP
.B SpecsTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.forms.CreateKeyValuePair(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqkey\(aq, <django.forms.fields.CharField object at 0x7ff3b968fb10>), (\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3b90f44d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqkey\(aq, <django.forms.fields.CharField object at 0x7ff3b968fb10>), (\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3b90f44d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.qos_specs.forms.EditKeyValuePair(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3b90f4710>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3b90f4710>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.CreateView
Bases: \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.ExtraSpecMixin\fP, \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b968f650>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateExtraSpec\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqextra_spec_create_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b9a49f50>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqextra_spec_create_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b968f550>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:extras:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:volumes:volume_types:extras:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/extras/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.EditView
Bases: \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.ExtraSpecMixin\fP, \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b968f590>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBEditExtraSpec\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqextra_spec_edit_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b968fc90>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqextra_spec_edit_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b968f210>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volume_types:extras:edit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:volumes:volume_types:extras:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/extras/edit.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.ExtraSpecMixin
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.IndexView(*args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.views.ExtraSpecMixin\fP, \fBhorizon.forms.views.ModalFormMixin\fP, \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBExtraSpecsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volume_types/extras/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecCreate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8eb2320>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:extras:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9a49610>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(extra_spec=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:extras:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9a49610>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecDelete(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b8ede9f0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8edeec0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8eb22a8>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_ids)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecEdit(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8eb2398>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volume_types:extras:edit\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-edit\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9a49d90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-edit\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(extra_spec)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volume_types:extras:edit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9a49d90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqextras\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecEdit\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecDelete\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecCreate\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.tables.ExtraSpecDelete\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9a49590>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ExtraSpecsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <ExtraSpecCreate: create>), (\(aqdelete\(aq, <ExtraSpecDelete: delete>), (\(aqedit\(aq, <ExtraSpecEdit: edit>)])
.UNINDENT
.INDENT 7.0
.TP
.B ExtraSpecsTable.base_columns = OrderedDict([(\(aqkey\(aq, <Column: key>), (\(aqvalue\(aq, <Column: value>)])
.UNINDENT
.INDENT 7.0
.TP
.B ExtraSpecsTable.get_object_display(datum)
.UNINDENT
.INDENT 7.0
.TP
.B ExtraSpecsTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volume_types.extras.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.forms.CreateExtraSpec(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqkey\(aq, <django.forms.fields.CharField object at 0x7ff3bac16590>), (\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3bc2c3c90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqkey\(aq, <django.forms.fields.CharField object at 0x7ff3bac16590>), (\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3bc2c3c90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volume_types.extras.forms.EditExtraSpec(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3b9a49990>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqvalue\(aq, <django.forms.fields.CharField object at 0x7ff3b9a49990>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volumes.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.views.DetailView
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.views.DetailView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volumes/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.views.ManageVolumeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b90abf90>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBManageVolume\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqmanage_volume_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90ab4d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab050>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b90abcd0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = <django.utils.functional.__proxy__ object at 0x7ff3b90abed0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b90ab2d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volumes/manage_volume.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.views.MigrateVolumeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b90abdd0>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBMigrateVolume\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqmigrate_volume_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_hosts(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90abf50>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90abad0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b90abe90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volumes:migrate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b90ab910>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volumes/migrate_volume.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.views.UnmanageVolumeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B cancel_url = <django.utils.functional.__proxy__ object at 0x7ff3b90ab210>
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUnmanageVolume\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqunmanage_volume_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90ab450>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab750>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b90abb50>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volumes:unmanage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b90ab950>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volumes/unmanage_volume.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.views.UpdateStatusView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateStatus\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90abd90>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqupdate_volume_status_modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b90ab3d0>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b90ab290>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:volumes:update_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3b90ab390>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/volumes/update_status.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volumes\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volumes.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volumes.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.tables.ManageVolumeAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:volume_manage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: True, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqmanage\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volumes:manage\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcde4450>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmanage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:volume_manage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volumes:manage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcde4450>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.tables.MigrateVolume(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:volume_admin_actions:migrate_volume\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8dc5398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqmigrate\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volumes:migrate\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcde4110>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-migrate\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqmigrate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:volume_admin_actions:migrate_volume\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volumes:migrate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcde4110>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.tables.UnmanageVolumeAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, volume=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:volume_unmanage\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3b8dc5320>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqunmanage\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volumes:unmanage\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcde4d10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqunmanage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:volume_unmanage\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volumes:unmanage\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcde4d10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.tables.UpdateVolumeStatusAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqvolume_extension:volume_admin_actions:reset_status\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_status\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:volumes:update_status\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc3c42d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqvolume_extension:volume_admin_actions:reset_status\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:volumes:update_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc3c42d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.tables.VolumesFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3b8dc52a8>, \(aqname\(aq: \(aqfilter\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter(table, volumes, filter_string)
Naive case\-insensitive search.
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.tables.VolumesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B columns = (\(aqtenant\(aq, \(aqhost\(aq, \(aqname\(aq, \(aqsize\(aq, \(aqstatus\(aq, \(aqvolume_type\(aq, \(aqattachments\(aq, \(aqbootable\(aq, \(aqencryption\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqvolumes\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables.UpdateVolumeStatusAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables.UnmanageVolumeAction\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables.MigrateVolume\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables.ManageVolumeAction\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.volumes.tables.DeleteVolume\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.volumes.tables.VolumesFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba7de210>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B VolumesTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteVolume: delete>), (\(aqfilter\(aq, <VolumesFilterAction: filter>), (\(aqmanage\(aq, <ManageVolumeAction: manage>), (\(aqmigrate\(aq, <MigrateVolume: migrate>), (\(aqunmanage\(aq, <UnmanageVolumeAction: unmanage>), (\(aqupdate_status\(aq, <UpdateVolumeStatusAction: update_status>)])
.UNINDENT
.INDENT 7.0
.TP
.B VolumesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>), (\(aqvolume_type\(aq, <Column: volume_type>), (\(aqattachments\(aq, <AttachmentColumn: attachments>), (\(aqavailability_zone\(aq, <Column: availability_zone>), (\(aqbootable\(aq, <Column: bootable>), (\(aqencryption\(aq, <Column: encryption>), (\(aqhost\(aq, <Column: host>), (\(aqtenant\(aq, <Column: tenant>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.volumes.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.forms.ManageVolume(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqidentifier\(aq, <django.forms.fields.CharField object at 0x7ff3b9694350>), (\(aqid_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9694490>), (\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3b9694650>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b96943d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b9b80f90>), (\(aqmetadata\(aq, <django.forms.fields.CharField object at 0x7ff3b9b80b50>), (\(aqvolume_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9b80bd0>), (\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9b80a50>), (\(aqbootable\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9b80850>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqidentifier\(aq, <django.forms.fields.CharField object at 0x7ff3b9694350>), (\(aqid_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9694490>), (\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3b9694650>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b96943d0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3b9b80f90>), (\(aqmetadata\(aq, <django.forms.fields.CharField object at 0x7ff3b9b80b50>), (\(aqvolume_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9b80bd0>), (\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9b80a50>), (\(aqbootable\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9b80850>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.forms.MigrateVolume(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba2353d0>), (\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3ba235cd0>), (\(aqhost\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba235fd0>), (\(aqforce_host_copy\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba235850>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba2353d0>), (\(aqcurrent_host\(aq, <django.forms.fields.CharField object at 0x7ff3ba235cd0>), (\(aqhost\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba235fd0>), (\(aqforce_host_copy\(aq, <django.forms.fields.BooleanField object at 0x7ff3ba235850>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_host_choices(request, initial)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.forms.UnmanageVolume(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba235a50>), (\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3ba235e10>), (\(aqvolume_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba235390>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3ba235a50>), (\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3ba235e10>), (\(aqvolume_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba235390>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.volumes.forms.UpdateStatus(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqstatus\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd3f0e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqstatus\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd3f0e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.snapshots.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.views.DetailView
Bases: \fBopenstack_dashboard.dashboards.project.volumes.snapshots.views.DetailView\fP
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBSnapshotDetailsTabs\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.views.UpdateStatusView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateStatus\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bc17fd50>
.UNINDENT
.INDENT 7.0
.TP
.B modal_id = \(aqupdate_volume_snapshot_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc17f950>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bc17f450>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:volumes:snapshots:update_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc17f090>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/snapshots/update_status.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.snapshots\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.snapshots.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.tabs.OverviewTab(tab_group, request=None)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.snapshots.tabs.OverviewTab\fP
.INDENT 7.0
.TP
.B get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc32ae50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/volumes/snapshots/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.tabs.SnapshotDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqsnapshot_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.volumes.snapshots.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.snapshots.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.snapshots.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, snapshot_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.tables.UpdateVolumeSnapshotStatus(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.volumes.snapshots.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqvolume\(aq, \(aqsnapshot_extension:snapshot_actions:update_snapshot_status\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate_status\(aq, \(aqurl\(aq: \(aqhorizon:admin:volumes:snapshots:update_status\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b91a7910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqvolume\(aq, \(aqsnapshot_extension:snapshot_actions:update_snapshot_status\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:volumes:snapshots:update_status\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b91a7910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.tables.VolumeSnapshotsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.volumes.volumes.tables.VolumesTableBase\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B columns = (\(aqtenant\(aq, \(aqhost\(aq, \(aqname\(aq, \(aqdescription\(aq, \(aqsize\(aq, \(aqstatus\(aq, \(aqvolume_name\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqvolume_snapshots\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.DeleteVolumeSnapshot\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.volumes.snapshots.tables.UpdateVolumeSnapshotStatus\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = (\(aqstatus\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.VolumeSnapshotsFilterAction\(aq>, <class \(aqopenstack_dashboard.dashboards.project.volumes.snapshots.tables.DeleteVolumeSnapshot\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba33fc90>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B VolumeSnapshotsTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteVolumeSnapshot: delete>), (\(aqfilter\(aq, <VolumeSnapshotsFilterAction: filter>), (\(aqupdate_status\(aq, <UpdateVolumeSnapshotStatus: update_status>)])
.UNINDENT
.INDENT 7.0
.TP
.B VolumeSnapshotsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdescription\(aq, <Column: description>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>), (\(aqvolume_name\(aq, <SnapshotVolumeNameColumn: volume_name>), (\(aqhost\(aq, <Column: host>), (\(aqtenant\(aq, <Column: tenant>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.volumes.snapshots.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.volumes.snapshots.forms.UpdateStatus(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqstatus\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8b65610>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqstatus\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b8b65610>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.volumes.snapshots.forms.populate_status_choices(initial, status_choices)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreateNetwork\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb828d10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bb828a90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.views.DetailView(*args, **kwargs)
Bases: \fBhorizon.tables.views.MultiTableView\fP
.INDENT 7.0
.TP
.B get_agents_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_ports_data()
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_subnets_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8286d0>
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables.SubnetsTable\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables.PortsTable\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.agents.tables.DHCPAgentsTable\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/networks/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc9cd190>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBNetworksTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.views.UpdateView
Bases: \fBopenstack_dashboard.dashboards.project.networks.views.UpdateView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdateNetwork\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:networks:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bb828850>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.tables.CreateNetwork(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_network\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bb736b10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_network\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb736b10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.tables.DeleteNetwork(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_network\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9526f68>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b90f28d8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b92e8848>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_network\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.tables.EditNetwork(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_network\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:update\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b974efd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_network\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:update\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b974efd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.tables.NetworksTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqnetworks\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.tables.EditNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.tables.DeleteNetwork\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.tables.CreateNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.tables.DeleteNetwork\(aq>, <class \(aqopenstack_dashboard.dashboards.project.networks.tables.NetworksFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b974e450>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B NetworksTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateNetwork: create>), (\(aqdelete\(aq, <DeleteNetwork: delete>), (\(aqfilter\(aq, <NetworksFilterAction: filter>), (\(aqupdate\(aq, <EditNetwork: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B NetworksTable.base_columns = OrderedDict([(\(aqtenant\(aq, <Column: tenant>), (\(aqname\(aq, <Column: name>), (\(aqsubnets\(aq, <Column: subnets>), (\(aqnum_agents\(aq, <Column: num_agents>), (\(aqshared\(aq, <Column: shared>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.panel.Networks
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbf0a350>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnetworks\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.forms.CreateNetwork(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9a90f50>), (\(aqtenant_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a90a50>), (\(aqnet_profile_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a90490>), (\(aqnetwork_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a90150>), (\(aqphysical_network\(aq, <django.forms.fields.CharField object at 0x7ff3b9a90c50>), (\(aqsegmentation_id\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9a90b90>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a3f690>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3ffd0>), (\(aqexternal\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3ff10>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9a90f50>), (\(aqtenant_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a90a50>), (\(aqnet_profile_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a90490>), (\(aqnetwork_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a90150>), (\(aqphysical_network\(aq, <django.forms.fields.CharField object at 0x7ff3b9a90c50>), (\(aqsegmentation_id\(aq, <django.forms.fields.IntegerField object at 0x7ff3b9a90b90>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a3f690>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3ffd0>), (\(aqexternal\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3ff10>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_network_profile_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B widget = <django.forms.widgets.HiddenInput object at 0x7ff3b9a90750>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.forms.UpdateNetwork(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9a3f2d0>), (\(aqtenant_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9a3f750>), (\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9a3fdd0>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a3fb90>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3f6d0>), (\(aqexternal\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3f050>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3b9a3f2d0>), (\(aqtenant_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9a3f750>), (\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9a3fdd0>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b9a3fb90>), (\(aqshared\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3f6d0>), (\(aqexternal\(aq, <django.forms.fields.BooleanField object at 0x7ff3b9a3f050>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:admin:networks:index\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.ports.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.views.CreateView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBCreatePort\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqcreate_port_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3b90208d0>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3b9045250>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3b9045190>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:networks:addport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/ports/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.views.DetailView
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.views.DetailView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPortDetailTabs\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.views.UpdateView
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.views.UpdateView\fP
.INDENT 7.0
.TP
.B context_object_name = \(aqport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBUpdatePort\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:networks:editport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/ports/update.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.ports\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.ports.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.tabs.OverviewTab(tab_group, request=None)
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.tabs.OverviewTab\fP
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/ports/_detail_overview.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.tabs.PortDetailTabs(request, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.tabs.PortDetailTabs\fP
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.dashboards.admin.networks.ports.tabs.OverviewTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.ports.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.ports.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.tables.CreatePort(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_port\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b90770c8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:addport\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b9075a90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_port\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:addport\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9075a90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.tables.DeletePort(**kwargs)
Bases: \fBopenstack_dashboard.policy.PolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_port\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9849788>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b933cda8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b9077050>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_port\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.tables.PortsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.tables.PortsTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqports\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables.UpdatePort\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables.DeletePort\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables.CreatePort\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables.DeletePort\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b9075bd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreatePort: create>), (\(aqdelete\(aq, <DeletePort: delete>), (\(aqupdate\(aq, <UpdatePort: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B PortsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqfixed_ips\(aq, <Column: fixed_ips>), (\(aqattached\(aq, <Column: attached>), (\(aqstatus\(aq, <Column: status>), (\(aqadmin_state\(aq, <Column: admin_state>), (\(aqmac_state\(aq, <Column: mac_state>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.tables.UpdatePort(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.tables.UpdatePort\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.ports.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_port\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b91cef50>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:editport\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b90c2cd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:editport\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.ports.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.forms.CreatePort(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork_name\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3c1d0>), (\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cc10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3c290>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b91c8850>), (\(aqdevice_id\(aq, <django.forms.fields.CharField object at 0x7ff3b91c86d0>), (\(aqdevice_owner\(aq, <django.forms.fields.CharField object at 0x7ff3b91a7e10>), (\(aqbinding__host_id\(aq, <django.forms.fields.CharField object at 0x7ff3b919f950>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork_name\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3c1d0>), (\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cc10>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3c290>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3b91c8850>), (\(aqdevice_id\(aq, <django.forms.fields.CharField object at 0x7ff3b91c86d0>), (\(aqdevice_owner\(aq, <django.forms.fields.CharField object at 0x7ff3b91a7e10>), (\(aqbinding__host_id\(aq, <django.forms.fields.CharField object at 0x7ff3b919f950>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.ports.forms.UpdatePort(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.ports.forms.UpdatePort\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba2a8a90>), (\(aqport_id\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cc50>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cfd0>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb3c990>), (\(aqdevice_id\(aq, <django.forms.fields.CharField object at 0x7ff3bc282850>), (\(aqdevice_owner\(aq, <django.forms.fields.CharField object at 0x7ff3bc282490>), (\(aqbinding__host_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9801d50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba2a8a90>), (\(aqport_id\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cc50>), (\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bbb3cfd0>), (\(aqadmin_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb3c990>), (\(aqdevice_id\(aq, <django.forms.fields.CharField object at 0x7ff3bc282850>), (\(aqdevice_owner\(aq, <django.forms.fields.CharField object at 0x7ff3bc282490>), (\(aqbinding__host_id\(aq, <django.forms.fields.CharField object at 0x7ff3b9801d50>)])
.UNINDENT
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.subnets.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.views.CreateView
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.views.CreateView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateSubnet\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.views.UpdateView
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.views.UpdateView\fP
.INDENT 7.0
.TP
.B workflow_class
alias of \fBUpdateSubnet\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.subnets\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.subnets.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.subnets.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.tables.CreateSubnet(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqcreate_subnet\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8f39938>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:addsubnet\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8f2e350>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqcreate_subnet\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:addsubnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8f2e350>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.tables.DeleteSubnet(**kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin\fP, \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_subnet\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b90242b8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b8f38b08>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b8f398c0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_subnet\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.tables.SubnetsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqsubnets\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables.UpdateSubnet\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables.DeleteSubnet\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables.CreateSubnet\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables.DeleteSubnet\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8f2e7d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <CreateSubnet: create>), (\(aqdelete\(aq, <DeleteSubnet: delete>), (\(aqupdate\(aq, <UpdateSubnet: update>)])
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqcidr\(aq, <Column: cidr>), (\(aqip_version\(aq, <Column: ip_version>), (\(aqgateway_ip\(aq, <Column: gateway_ip>)])
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.failure_url = <django.utils.functional.__proxy__ object at 0x7ff3b8f2e790>
.UNINDENT
.INDENT 7.0
.TP
.B SubnetsTable.get_object_display(subnet)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.tables.UpdateSubnet(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.tables.SubnetPolicyTargetMixin\fP, \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.subnets.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_subnet\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b8f399b0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqpencil\(aq, \(aqname\(aq: \(aqupdate\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:editsubnet\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3b8f2e450>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(subnet)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqpencil\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupdate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_subnet\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:editsubnet\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3b8f2e450>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.subnets.workflows\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.workflows.CreateSubnet(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.workflows.CreateSubnet\fP
.INDENT 7.0
.TP
.B get_failure_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.subnets.workflows.UpdateSubnet(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.dashboards.project.networks.subnets.workflows.UpdateSubnet\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.agents.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.agents.views.AddView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B failure_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBAddDHCPAgent\fP
.UNINDENT
.INDENT 7.0
.TP
.B form_id = \(aqadd_dhcp_agent_form\(aq
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B modal_header = <django.utils.functional.__proxy__ object at 0x7ff3bd27e150>
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd27e150>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bd27e150>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:admin:networks:adddhcpagent\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:admin:networks:detail\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/networks/agents/add.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B title_and_label = <django.utils.functional.__proxy__ object at 0x7ff3bd27e150>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.agents\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.networks.agents.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.agents.tables.AddDHCPAgent(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.agents.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqupdate_agent\(aq),), \(aqget_link_url\(aq: <function get_link_url at 0x7ff3b9250938>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqadd\(aq, \(aqurl\(aq: \(aqhorizon:admin:networks:adddhcpagent\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bba682d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum=None)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqadd\(aq
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqupdate_agent\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:admin:networks:adddhcpagent\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bba682d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.agents.tables.DHCPAgentsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B hidden_title = False
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqagents\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.agents.tables.DeleteDHCPAgent\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.dashboards.admin.networks.agents.tables.AddDHCPAgent\(aq>, <class \(aqopenstack_dashboard.dashboards.admin.networks.agents.tables.DeleteDHCPAgent\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd9bca10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B DHCPAgentsTable.base_actions = OrderedDict([(\(aqadd\(aq, <AddDHCPAgent: add>), (\(aqdelete\(aq, <DeleteDHCPAgent: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B DHCPAgentsTable.base_columns = OrderedDict([(\(aqid\(aq, <Column: id>), (\(aqhost\(aq, <Column: host>), (\(aqstatus\(aq, <Column: status>), (\(aqstate\(aq, <Column: state>), (\(aqheartbeat_timestamp\(aq, <Column: heartbeat_timestamp>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.agents.tables.DeleteDHCPAgent(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.dashboards.admin.networks.agents.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqpolicy_rules\(aq: ((\(aqnetwork\(aq, \(aqdelete_agent\(aq),), \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3b9978f68>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3b9978fa0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3b9250578>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B policy_rules = ((\(aqnetwork\(aq, \(aqdelete_agent\(aq),)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.networks.agents.tables.get_agent_state(agent)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.dashboards.admin.networks.agents.tables.get_agent_status(agent)
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.networks.agents.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.networks.agents.forms.AddDHCPAgent(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba825e10>), (\(aqnetwork_name\(aq, <django.forms.fields.CharField object at 0x7ff3ba825450>), (\(aqagent\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba8250d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork_id\(aq, <django.forms.fields.CharField object at 0x7ff3ba825e10>), (\(aqnetwork_name\(aq, <django.forms.fields.CharField object at 0x7ff3ba825450>), (\(aqagent\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba8250d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.overview.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.overview.views.GlobalOverview(*args, **kwargs)
Bases: \fBopenstack_dashboard.usage.views.UsageView\fP
.INDENT 7.0
.TP
.B csv_response_class
alias of \fBGlobalUsageCsvRenderer\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBGlobalUsageTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqadmin/overview/usage.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B usage_class
alias of \fBGlobalUsage\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.overview.views.GlobalUsageCsvRenderer(request, template, context, content_type, **kwargs)
Bases: \fBhorizon.utils.csvbase.BaseCsvResponse\fP
.INDENT 7.0
.TP
.B columns = [<django.utils.functional.__proxy__ object at 0x7ff3bac39f50>, <django.utils.functional.__proxy__ object at 0x7ff3bac39dd0>, <django.utils.functional.__proxy__ object at 0x7ff3bac39990>, <django.utils.functional.__proxy__ object at 0x7ff3bac39090>, <django.utils.functional.__proxy__ object at 0x7ff3bb683710>]
.UNINDENT
.INDENT 7.0
.TP
.B get_row_data()
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.dashboards.admin.overview\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.overview.urls\fP Module
.SS The \fBopenstack_dashboard.dashboards.admin.overview.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.dashboards.admin.overview.panel.Overview
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb214990>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.roles.admin\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.api.sahara\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.client(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_create(request, name, plugin_name, hadoop_version, cluster_template_id=None, default_image_id=None, is_transient=None, description=None, cluster_configs=None, node_groups=None, user_keypair_id=None, anti_affinity=None, net_id=None, count=None, use_autoconfig=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_delete(request, cluster_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_get(request, cluster_id, show_progress=False)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_scale(request, cluster_id, scale_object)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_template_create(request, name, plugin_name, hadoop_version, description=None, cluster_configs=None, node_groups=None, anti_affinity=None, net_id=None, use_autoconfig=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_template_delete(request, ct_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_template_get(request, ct_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_template_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.cluster_template_update(request, ct_id, name, plugin_name, hadoop_version, description=None, cluster_configs=None, node_groups=None, anti_affinity=None, net_id=None, use_autoconfig=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.data_source_create(request, name, description, ds_type, url, credential_user=None, credential_pass=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.data_source_delete(request, ds_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.data_source_get(request, ds_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.data_source_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.data_source_update(request, ds_id, data)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.image_get(request, image_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.image_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.image_tags_update(request, image_id, image_tags)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.image_unregister(request, image_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.image_update(request, image_id, user_name, desc)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_create(request, name, url, description, extra)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_delete(request, jb_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_get(request, jb_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_get_file(request, jb_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_internal_create(request, name, data)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_internal_delete(request, jbi_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_internal_get(request, jbi_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_internal_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_binary_update(request, jb_id, data)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_create(request, name, j_type, mains, libs, description, interface)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_delete(request, job_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_execution_create(request, job_id, cluster_id, input_id, output_id, configs, interface)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_execution_delete(request, jex_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_execution_get(request, jex_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_execution_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_get(request, job_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_get_configs(request, job_type)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.job_types_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.nodegroup_template_create(request, name, plugin_name, hadoop_version, flavor_id, description=None, volumes_per_node=None, volumes_size=None, node_processes=None, node_configs=None, floating_ip_pool=None, security_groups=None, auto_security_group=False, availability_zone=False, volumes_availability_zone=False, volume_type=None, is_proxy_gateway=False, volume_local_to_instance=False, use_autoconfig=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.nodegroup_template_delete(request, ngt_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.nodegroup_template_find(request, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.nodegroup_template_get(request, ngt_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.nodegroup_template_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.nodegroup_template_update(request, ngt_id, name, plugin_name, hadoop_version, flavor_id, description=None, volumes_per_node=None, volumes_size=None, node_processes=None, node_configs=None, floating_ip_pool=None, security_groups=None, auto_security_group=False, availability_zone=False, volumes_availability_zone=False, volume_type=None, is_proxy_gateway=False, volume_local_to_instance=False, use_autoconfig=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.plugin_convert_to_template(request, plugin_name, hadoop_version, template_name, file_content)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.plugin_get(request, plugin_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.plugin_get_version_details(request, plugin_name, hadoop_version)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.plugin_list(request, search_opts=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.api.sahara.safe_call(func, *args, **kwargs)
Call a function ignoring Not Found error
.sp
This method is supposed to be used only for safe retrieving Sahara
objects. If the object is no longer available the None should be
returned.
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.api\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.test.helpers\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.test.helpers.SaharaAPITestCase(methodName=\(aqrunTest\(aq)
Bases: \fBopenstack_dashboard.test.helpers.APITestCase\fP
.INDENT 7.0
.TP
.B setUp()
.UNINDENT
.INDENT 7.0
.TP
.B stub_saharaclient()
.UNINDENT
.INDENT 7.0
.TP
.B tearDown()
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.test\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.wizard.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.ClusterGuideView(**kwargs)
Bases: \fBhorizon.views.APIView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba6cec10>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.wizard/cluster_guide.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.JobExecutionGuideView(**kwargs)
Bases: \fBhorizon.views.APIView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba6cebd0>
.UNINDENT
.INDENT 7.0
.TP
.B show_data_sources()
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.wizard/jobex_guide.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.JobTypeSelectView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B classes = \(aqajax\-modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBChooseJobTypeForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba6cee50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba6cedd0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.wizard/job_type_select.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.PluginSelectView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B classes = \(aqajax\-modal\(aq
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBChoosePluginForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba6ced10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba6cec90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.wizard/plugin_select.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.ResetClusterGuideView(*args, **kwargs)
Bases: \fBdjango.views.generic.base.RedirectView\fP
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B pattern_name = \(aqhorizon:project:data_processing.wizard:cluster_guide\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.ResetJobExGuideView(*args, **kwargs)
Bases: \fBdjango.views.generic.base.RedirectView\fP
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B pattern_name = \(aqhorizon:project:data_processing.wizard:jobex_guide\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.views.WizardView(**kwargs)
Bases: \fBhorizon.views.APIView\fP
.INDENT 7.0
.TP
.B get_data(request, context, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba6ceb50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.wizard/wizard.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.wizard\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.wizard.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.wizard.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.panel.WizardPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba8a9e90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.wizard\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.wizard.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.forms.ChooseJobTypeForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqguide_job_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba7deb50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqguide_job_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba7deb50>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B populate_guide_job_type_choices()
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.wizard.forms.ChoosePluginForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba939110>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ChoosePluginForm.base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B ChoosePluginForm.declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B ChoosePluginForm.get_help_text(extra_context=None)
.UNINDENT
.INDENT 7.0
.TP
.B ChoosePluginForm.handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B ChoosePluginForm.media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.ConfigureNodegroupTemplateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbdd75d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.nodegroup_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBConfigureNodegroupTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.CopyNodegroupTemplateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.nodegroup_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCopyNodegroupTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.CreateNodegroupTemplateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7550>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.nodegroup_templates:create\-nodegroup\-template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateNodegroupTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.EditNodegroupTemplateView
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.CopyNodegroupTemplateView\fP
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.nodegroup_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBEditNodegroupTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.NodegroupTemplateDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7a50>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBNodegroupTemplateDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.views.NodegroupTemplatesView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7bd0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBNodegroupTemplatesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/nodegroup_templates.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tabs.ConfigsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bba16410>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnodegroup_template_service_configs_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/_service_confs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tabs.GeneralTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bba16610>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqnodegroup_template_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.nodegroup_templates/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tabs.NodegroupTemplateDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqnodegroup_template_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tabs.GeneralTab\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tabs.ConfigsTab\(aq>)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.ConfigureNodegroupTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B attrs = {\(aqstyle\(aq: \(aqdisplay: none\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqstyle\(aq: \(aqdisplay: none\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqconfigure\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.nodegroup_templates:configure\-nodegroup\-template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqconfigure\-nodegrouptemplate\-btn\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbc63510>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqconfigure\-nodegrouptemplate\-btn\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqconfigure\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.nodegroup_templates:configure\-nodegroup\-template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbc63510>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.CopyTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqcopy\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.nodegroup_templates:copy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bbc63810>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcopy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.nodegroup_templates:copy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbc63810>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.CreateNodegroupTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.nodegroup_templates:create\-nodegroup\-template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqcreate\-nodegrouptemplate\-btn\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc4a1b50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqcreate\-nodegrouptemplate\-btn\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.nodegroup_templates:create\-nodegroup\-template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc4a1b50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.DeleteTemplate(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3bb40e9b8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3baa68bb0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb244b90>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, template_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.EditTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.nodegroup_templates:edit\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bcb3f5d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.nodegroup_templates:edit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bcb3f5d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.NodeGroupTemplatesFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd254c90>, True), (\(aqplugin\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd254e10>, True), (\(aqhadoop_version\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd254c50>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd254c90>, True), (\(aqplugin\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd254e10>, True), (\(aqhadoop_version\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd254c50>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.NodegroupTemplatesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqnodegroup_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.EditTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.CopyTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.DeleteTemplate\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.CreateNodegroupTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.ConfigureNodegroupTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.DeleteTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.tables.NodeGroupTemplatesFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb20cf10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B NodegroupTemplatesTable.base_actions = OrderedDict([(\(aqconfigure\(aq, <ConfigureNodegroupTemplate: configure>), (\(aqcopy\(aq, <CopyTemplate: copy>), (\(aqcreate\(aq, <CreateNodegroupTemplate: create>), (\(aqdelete\(aq, <DeleteTemplate: delete>), (\(aqedit\(aq, <EditTemplate: edit>), (\(aqfilter\(aq, <NodeGroupTemplatesFilterAction: filter>)])
.UNINDENT
.INDENT 7.0
.TP
.B NodegroupTemplatesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqplugin_name\(aq, <Column: plugin_name>), (\(aqhadoop_version\(aq, <Column: hadoop_version>), (\(aqnode_processes\(aq, <Column: node_processes>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.panel.NodegroupTemplatesPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bac73190>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.nodegroup_templates\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.CheckboxSelectMultiple(*args, **kwargs)
Bases: \fBdjango.forms.widgets.CheckboxSelectMultiple\fP
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, value, attrs=None, choices=())
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.ConfigureNodegroupTemplate(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.ServiceParametersWorkflow\fP, \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.StatusFormatMixin\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.GeneralConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SelectNodeProcesses\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SecurityConfig\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bb762210>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B is_valid()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb762d90>
.UNINDENT
.INDENT 7.0
.TP
.B name_property = \(aqgeneral_nodegroup_name\(aq
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqconfigure_nodegroup_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bb762c10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.nodegroup_templates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.CreateNodegroupTemplate(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SelectPlugin\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7a10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7710>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbdd79d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_nodegroup_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bbdd71d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.nodegroup_templates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.GeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqgeneral_nodegroup_name\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.GeneralConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnodegroup_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb205e10>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bb205890>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb205b50>), (\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb205650>), (\(aqstorage\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bda7e950>), (\(aqvolumes_per_node\(aq, <django.forms.fields.IntegerField object at 0x7ff3bda7e490>), (\(aqvolumes_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3bda7e2d0>), (\(aqvolume_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb762f90>), (\(aqvolume_local_to_instance\(aq, <django.forms.fields.BooleanField object at 0x7ff3bb762c50>), (\(aqvolumes_availability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb762450>), (\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bb762150>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnodegroup_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb205e10>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bb205890>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb205b50>), (\(aqavailability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb205650>), (\(aqstorage\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bda7e950>), (\(aqvolumes_per_node\(aq, <django.forms.fields.IntegerField object at 0x7ff3bda7e490>), (\(aqvolumes_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3bda7e2d0>), (\(aqvolume_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb762f90>), (\(aqvolume_local_to_instance\(aq, <django.forms.fields.BooleanField object at 0x7ff3bb762c50>), (\(aqvolumes_availability_zone\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb762450>), (\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bb762150>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.nodegroup_templates/_configure_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb762750>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_availability_zone_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_flavor_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_volumes_availability_zone_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bb762f10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqgeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SecurityConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSecurityConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqsecurity_autogroup\(aq, \(aqsecurity_groups\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SecurityConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bb7623d0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb762a90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bb7629d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsecurityconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SelectNodeProcesses(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectNodeProcessesAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SelectNodeProcessesAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bb7628d0>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb762ad0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bb7620d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectnodeprocessesaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SelectPlugin(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectPluginAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqplugin_name\(aq, \(aqhadoop_version\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.SelectPluginAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP, \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.PluginAndVersionMixin\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bb762110>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bb762110>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.nodegroup_templates/_create_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb762050>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7250>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectpluginaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.copy\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.copy.CopyNodegroupTemplate(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.create.ConfigureNodegroupTemplate\fP
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bac7bf10>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.edit\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.edit.EditNodegroupTemplate(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.nodegroup_templates.workflows.copy.CopyNodegroupTemplate\fP
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7e90>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbdd7d50>
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bd33fd10>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_plugins.views.PluginDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd2d4150>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBPluginDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_plugins/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_plugins.views.PluginsView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd2d4350>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBPluginsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_plugins/plugins.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_plugins.tabs.DetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb96ac10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqplugin_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_plugins/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_plugins.tabs.PluginDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqcluster_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins.tabs.DetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_plugins.tables.PluginsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqplugins\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd3badd0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B PluginsTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B PluginsTable.base_columns = OrderedDict([(\(aqtitle\(aq, <Column: title>), (\(aqversions\(aq, <Column: versions>), (\(aqdescription\(aq, <Column: description>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_plugins.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_plugins.panel.PluginsPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbc63f90>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.data_plugins\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.views.ClusterDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = u\(aqCluster Details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBClusterDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.views.ClusterEventsView(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.views.ClustersView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = u\(aqClusters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBClustersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/clusters.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.views.ConfigureClusterView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = u\(aqConfigure Cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.clusters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBConfigureCluster\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.views.CreateClusterView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = u\(aqLaunch Cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.clusters:create\-cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateCluster\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.views.ScaleClusterView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = u\(aqScale Cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.clusters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/scale.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBScaleCluster\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.ClusterDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqcluster_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.GeneralTab\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.NodeGroupsTab\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.InstancesTab\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.EventLogTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.EventLogTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bf805990>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcluster_event_log\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/_event_log.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.GeneralTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8c9750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcluster_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.Instance(name=None, id=None, internal_ip=None, management_ip=None)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.InstancesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B get_cluster_instances_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bf8054d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcluster_instances_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.InstancesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/_instances_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.InstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqcluster_instances\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e46d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqinternal_ip\(aq, <Column: internal_ip>), (\(aqmanagement_ip\(aq, <Column: management_ip>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.NodeGroupsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8c9210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcluster_nodegroups_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.clusters/_nodegroups_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.clusters.tabs.build_link(url)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ClusterGuide(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqcluster_guide\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.wizard:cluster_guide\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc483d50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcluster_guide\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.wizard:cluster_guide\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc483d50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ClustersFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc483c90>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc483a10>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc483c90>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc483a10>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ClustersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B cell_class
alias of \fBRichErrorCell\fP
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqclusters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ScaleCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.DeleteCluster\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ClusterGuide\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.CreateCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ConfigureCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.DeleteCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ClustersFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb88eed0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ClustersTable.base_actions = OrderedDict([(\(aqcluster_guide\(aq, <ClusterGuide: cluster_guide>), (\(aqconfigure\(aq, <ConfigureCluster: configure>), (\(aqcreate\(aq, <CreateCluster: create>), (\(aqdelete\(aq, <DeleteCluster: delete>), (\(aqfilter\(aq, <ClustersFilterAction: filter>), (\(aqscale\(aq, <ScaleCluster: scale>)])
.UNINDENT
.INDENT 7.0
.TP
.B ClustersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqplugin\(aq, <Column: plugin>), (\(aqversion\(aq, <Column: version>), (\(aqstatus\(aq, <Column: status>), (\(aqinstances_count\(aq, <Column: instances_count>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ConfigureCluster(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B attrs = {\(aqstyle\(aq: \(aqdisplay: none\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqstyle\(aq: \(aqdisplay: none\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqconfigure\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.clusters:configure\-cluster\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqconfigure\-cluster\-btn\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bb88e0d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqconfigure\-cluster\-btn\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqconfigure\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.clusters:configure\-cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb88e0d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.CreateCluster(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.clusters:create\-cluster\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc483e50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.clusters:create\-cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc483e50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.DeleteCluster(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3bb768da8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3bb768e50>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb2088c0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.RichErrorCell(datum, column, row, attrs=None, classes=None)
Bases: \fBhorizon.tables.base.Cell\fP
.INDENT 7.0
.TP
.B status
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.ScaleCluster(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, cluster=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bb208a28>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqscale\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.clusters:scale\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-edit\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bb20ce10>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-edit\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqscale\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.clusters:scale\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb20ce10>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, instance_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.get_instances_count(cluster)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.get_rich_status_info(cluster)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.clusters.tables.rich_status_filter(status_dict)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.panel.ClustersPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc0fd290>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.clusters\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.ConfigureCluster(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.StatusFormatMixin\fP, \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.GeneralConfig\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bc29ac10>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc29ab10>
.UNINDENT
.INDENT 7.0
.TP
.B name_property = \(aqgeneral_cluster_name\(aq
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqconfigure_cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bc29a350>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.clusters:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.CreateCluster(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.CreateClusterTemplate\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.SelectPlugin\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb76ab90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.GeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhidden_configure_field\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.GeneralConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a9d0>), (\(aqhidden_to_delete_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a890>), (\(aqcluster_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc29ad50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a8d0>), (\(aqcluster_template\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af10>), (\(aqcluster_count\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc29add0>), (\(aqimage\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29a290>), (\(aqkeypair\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af50>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a9d0>), (\(aqhidden_to_delete_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a890>), (\(aqcluster_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc29ad50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a8d0>), (\(aqcluster_template\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af10>), (\(aqcluster_count\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc29add0>), (\(aqimage\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29a290>), (\(aqkeypair\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af50>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.clusters/_configure_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc29a110>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_cluster_template_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_image_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_keypair_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_neutron_management_network_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bc29a2d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqgeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.SelectPlugin(workflow)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.SelectPlugin\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectPluginAction\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.SelectPluginAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.SelectPluginAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd26ae90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd26ae90>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.clusters/_create_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb76a710>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bbc98450>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectpluginaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.scale\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.scale.NodeGroupsStep(workflow)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.ConfigureNodegroups\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.scale.ScaleCluster(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.ConfigureCluster\fP, \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.StatusFormatMixin\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.scale.NodeGroupsStep\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bb78cd10>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc29a210>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqscale_cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.clusters:index\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.ClusterTemplateDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4bd0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBClusterTemplateDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.ClusterTemplatesView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4310>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBClusterTemplatesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/cluster_templates.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.ConfigureClusterTemplateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4790>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBConfigureClusterTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.CopyClusterTemplateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4fd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCopyClusterTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.CreateClusterTemplateView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4050>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates:create\-cluster\-template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateClusterTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.EditClusterTemplateView
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.CopyClusterTemplateView\fP
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/configure.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBEditClusterTemplate\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.views.UploadFileView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBUploadFileForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4610>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4910>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/upload_file.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tabs.ClusterTemplateDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqcluster_template_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tabs.GeneralTab\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tabs.NodeGroupsTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tabs.GeneralTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd90b510>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcluster_template_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tabs.NodeGroupsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd90b950>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcluster_template_nodegroups_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/_nodegroups_details.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.ClusterTemplatesFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130c10>, True), (\(aqplugin\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130dd0>, True), (\(aqhadoop_version\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130e50>, True), (\(aqdescription\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130bd0>)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130c10>, True), (\(aqplugin\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130dd0>, True), (\(aqhadoop_version\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130e50>, True), (\(aqdescription\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd130bd0>))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.ClusterTemplatesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqcluster_templates\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.CreateCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.EditTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.CopyTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.DeleteTemplate\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.UploadFile\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.CreateClusterTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.ConfigureClusterTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.DeleteTemplate\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.ClusterTemplatesFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd90ab50>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ClusterTemplatesTable.base_actions = OrderedDict([(\(aqconfigure\(aq, <ConfigureClusterTemplate: configure>), (\(aqcopy\(aq, <CopyTemplate: copy>), (\(aqcreate\(aq, <CreateClusterTemplate: create>), (\(aqcreate cluster\(aq, <CreateCluster: create cluster>), (\(aqdelete\(aq, <DeleteTemplate: delete>), (\(aqedit\(aq, <EditTemplate: edit>), (\(aqfilter\(aq, <ClusterTemplatesFilterAction: filter>), (\(aqupload_file\(aq, <UploadFile: upload_file>)])
.UNINDENT
.INDENT 7.0
.TP
.B ClusterTemplatesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqplugin_name\(aq, <Column: plugin_name>), (\(aqhadoop_version\(aq, <Column: hadoop_version>), (\(aqnode_groups\(aq, <Column: node_groups>), (\(aqdescription\(aq, <Column: description>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.ConfigureClusterTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B attrs = {\(aqstyle\(aq: \(aqdisplay: none\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqattrs\(aq: {\(aqstyle\(aq: \(aqdisplay: none\(aq}, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqconfigure\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.cluster_templates:configure\-cluster\-template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqconfigure\-clustertemplate\-btn\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd90add0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqconfigure\-clustertemplate\-btn\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqconfigure\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.cluster_templates:configure\-cluster\-template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd90add0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.CopyTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqcopy\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.cluster_templates:copy\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd90a890>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcopy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.cluster_templates:copy\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd90a890>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.CreateCluster(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bb86d7d0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate cluster\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.clusters:configure\-cluster\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bce50910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.clusters:configure\-cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bce50910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.CreateClusterTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.cluster_templates:create\-cluster\-template\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqcreate\-clustertemplate\-btn\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd90aa50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqcreate\-clustertemplate\-btn\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.cluster_templates:create\-cluster\-template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd90aa50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.DeleteTemplate(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3bb983948>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3bbf53248>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb86db90>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, template_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.EditTemplate(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqedit\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.cluster_templates:edit\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd90ad50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.cluster_templates:edit\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd90ad50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.UploadFile(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqupload\(aq, \(aqname\(aq: \(aqupload_file\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.cluster_templates:upload_file\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-launch\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd130490>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-launch\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqupload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqupload_file\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.cluster_templates:upload_file\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd130490>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.tables.render_node_groups(cluster_template)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.panel.ClusterTemplatesPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc168dd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.cluster_templates\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.forms.UploadFileForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP, \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.PluginAndVersionMixin\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqtemplate_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc438e10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqtemplate_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc438e10>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.ConfigureClusterTemplate(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.ServiceParametersWorkflow\fP, \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.StatusFormatMixin\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.GeneralConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.ConfigureNodegroups\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e44d0>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B is_valid()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4890>
.UNINDENT
.INDENT 7.0
.TP
.B name_property = \(aqgeneral_cluster_template_name\(aq
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqconfigure_cluster_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4350>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.ConfigureNodegroups(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBConfigureNodegroupsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhidden_nodegroups_field\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.cluster_templates/cluster_node_groups_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.ConfigureNodegroupsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_nodegroups_field\(aq, <django.forms.fields.CharField object at 0x7ff3bb8e4250>), (\(aqforms_ids\(aq, <django.forms.fields.CharField object at 0x7ff3bb8e4e10>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_nodegroups_field\(aq, <django.forms.fields.CharField object at 0x7ff3bb8e4250>), (\(aqforms_ids\(aq, <django.forms.fields.CharField object at 0x7ff3bb8e4e10>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4490>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4390>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqconfigurenodegroupsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.CreateClusterTemplate(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.SelectPlugin\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bd26ab10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bd26a090>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd26a590>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_cluster_template\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bd26aed0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.GeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhidden_configure_field\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.GeneralConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd865350>), (\(aqhidden_to_delete_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd865ed0>), (\(aqcluster_template_name\(aq, <django.forms.fields.CharField object at 0x7ff3bd865590>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd865210>), (\(aquse_autoconfig\(aq, <django.forms.fields.BooleanField object at 0x7ff3bd865e90>), (\(aqanti_affinity\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bd865990>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd865350>), (\(aqhidden_to_delete_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd865ed0>), (\(aqcluster_template_name\(aq, <django.forms.fields.CharField object at 0x7ff3bd865590>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd865210>), (\(aquse_autoconfig\(aq, <django.forms.fields.BooleanField object at 0x7ff3bd865e90>), (\(aqanti_affinity\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bd865990>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_help_text()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.cluster_templates/_configure_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4ed0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_anti_affinity_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4750>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqgeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.SelectPlugin(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectPluginAction\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.SelectPluginAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd26ae90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd26ae90>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.cluster_templates/_create_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd26ab50>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bd26ab90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselectpluginaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.copy\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.copy.CopyClusterTemplate(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.ConfigureClusterTemplate\fP
.INDENT 7.0
.TP
.B entry_point = \(aqgeneralconfigaction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bc9b3c10>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.edit\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.edit.EditClusterTemplate(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.copy.CopyClusterTemplate\fP
.INDENT 7.0
.TP
.B entry_point = \(aqgeneralconfigaction\(aq
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4d90>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4e50>
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bb8e4950>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.views.ChoosePluginView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacfee50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.jobs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/launch.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBChosePluginVersion\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.views.CreateJobView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacfe090>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.jobs:create\-job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateJob\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.views.JobDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacfe110>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBJobDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.views.JobsView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbc0dcd0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBJobsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/jobs.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.views.LaunchJobNewClusterView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacfe810>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.jobs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/launch.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBLaunchJobNewCluster\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.views.LaunchJobView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacfe910>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.jobs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/launch.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBLaunchJob\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tabs.GeneralTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc4a1490>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqjob_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tabs.JobDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqjob_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tabs.GeneralTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.ChoosePlugin(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bb3c86e0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlaunch\-job\-new\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.jobs:choose\-plugin\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bb20c450>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\-job\-new\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.jobs:choose\-plugin\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb20c450>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.CreateJob(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate job\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.jobs:create\-job\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqcreate_job_class\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bba16cd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqcreate_job_class\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.jobs:create\-job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bba16cd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.DeleteJob(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3baf947f8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3baf94718>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb3c8578>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.JobsFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bba163d0>, True), (\(aqtype\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bba16450>, True), (\(aqdescription\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bba165d0>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqname\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bba163d0>, True), (\(aqtype\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bba16450>, True), (\(aqdescription\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bba165d0>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.JobsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqjobs\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.LaunchJobExistingCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.ChoosePlugin\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.DeleteJob\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.CreateJob\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.DeleteJob\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.JobsFilterAction\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb20c350>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B JobsTable.base_actions = OrderedDict([(\(aqcreate job\(aq, <CreateJob: create job>), (\(aqdelete\(aq, <DeleteJob: delete>), (\(aqfilter\(aq, <JobsFilterAction: filter>), (\(aqlaunch\-job\-existing\(aq, <LaunchJobExistingCluster: launch\-job\-existing>), (\(aqlaunch\-job\-new\(aq, <ChoosePlugin: launch\-job\-new>)])
.UNINDENT
.INDENT 7.0
.TP
.B JobsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqtype\(aq, <Column: type>), (\(aqdescription\(aq, <Column: description>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.LaunchJobExistingCluster(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bb3c85f0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlaunch\-job\-existing\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.jobs:launch\-job\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bba16e90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\-job\-existing\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.jobs:launch\-job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bba16e90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.LaunchJobNewCluster(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bb3c8668>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqlaunch\-job\-new\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.jobs:launch\-job\-new\-cluster\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bb20cc90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\-job\-new\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.jobs:launch\-job\-new\-cluster\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb20cc90>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.panel.JobsPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bac7b410>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.jobs\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.AdditionalLibsAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqlib_binaries\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc323910>), (\(aqlib_ids\(aq, <django.forms.fields.CharField object at 0x7ff3bc323990>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqlib_binaries\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc323910>), (\(aqlib_ids\(aq, <django.forms.fields.CharField object at 0x7ff3bc323990>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.jobs/_create_job_libs_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc323e10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_lib_binaries_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bc323110>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqadditionallibsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.ConfigureArguments(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBConfigureInterfaceArgumentsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhidden_arguments_field\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/job_interface_arguments_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.ConfigureInterfaceArgumentsAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_arguments_field\(aq, <django.forms.fields.CharField object at 0x7ff3bccdfd50>), (\(aqargument_ids\(aq, <django.forms.fields.CharField object at 0x7ff3bd3a8d90>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_arguments_field\(aq, <django.forms.fields.CharField object at 0x7ff3bccdfd50>), (\(aqargument_ids\(aq, <django.forms.fields.CharField object at 0x7ff3bd3a8d90>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd3a8710>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bd3a8690>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqconfigureinterfaceargumentsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.ConfigureLibs(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAdditionalLibsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/library_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.CreateJob(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.GeneralConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.ConfigureLibs\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.ConfigureArguments\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bd3a8e50>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bd3a8910>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd3a8390>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bd3a8450>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.jobs:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.GeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqjob_name\(aq, \(aqjob_type\(aq, \(aqjob_description\(aq, \(aqmain_binary\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.create.GeneralConfigAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqjob_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb67fa50>), (\(aqjob_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc323d50>), (\(aqmain_binary\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bd2d4d50>), (\(aqjob_description\(aq, <django.forms.fields.CharField object at 0x7ff3bd2d4e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqjob_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb67fa50>), (\(aqjob_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc323d50>), (\(aqmain_binary\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bd2d4d50>), (\(aqjob_description\(aq, <django.forms.fields.CharField object at 0x7ff3bd2d4e50>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.jobs/_create_job_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd2d4bd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_job_type_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_main_binary_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bd2d4290>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqgeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.ChosePluginVersion(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.SelectHadoopPlugin\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0090>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6fd0>
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6f90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqlunch_job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0050>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.cluster_templates:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.ClusterGeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBNewClusterConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqhidden_configure_field\(aq,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBJobConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B static clean_configs(configs)
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.jobs/config_template.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B EDP_ADAPT_FOR_OOZIE = \(aqedp.java.adapt_for_oozie\(aq
.UNINDENT
.INDENT 7.0
.TP
.B EDP_ADAPT_SPARK_SWIFT = \(aqedp.spark.adapt_for_swift\(aq
.UNINDENT
.INDENT 7.0
.TP
.B EDP_HBASE_COMMON_LIB = \(aqedp.hbase_common_lib\(aq
.UNINDENT
.INDENT 7.0
.TP
.B EDP_MAPPER = \(aqedp.streaming.mapper\(aq
.UNINDENT
.INDENT 7.0
.TP
.B EDP_PREFIX = \(aqedp.\(aq
.UNINDENT
.INDENT 7.0
.TP
.B EDP_REDUCER = \(aqedp.streaming.reducer\(aq
.UNINDENT
.INDENT 7.0
.TP
.B JAVA_OPTS = \(aqedp.java.java_opts\(aq
.UNINDENT
.INDENT 7.0
.TP
.B MAIN_CLASS = \(aqedp.java.main_class\(aq
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqproperty_name\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bacb7890>), (\(aqjob_configs\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7950>), (\(aqjob_params\(aq, <django.forms.fields.CharField object at 0x7ff3bacb79d0>), (\(aqjob_args_array\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7a50>), (\(aqjob_type\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7ad0>), (\(aqmain_class\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7b50>), (\(aqjava_opts\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7c10>), (\(aqstreaming_mapper\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7cd0>), (\(aqstreaming_reducer\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7dd0>), (\(aqhbase_common_lib\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb7f10>), (\(aqadapt_oozie\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb6090>), (\(aqadapt_spark_swift\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb6210>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B clean_edp_configs(configs)
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqproperty_name\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bacb7890>), (\(aqjob_configs\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7950>), (\(aqjob_params\(aq, <django.forms.fields.CharField object at 0x7ff3bacb79d0>), (\(aqjob_args_array\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7a50>), (\(aqjob_type\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7ad0>), (\(aqmain_class\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7b50>), (\(aqjava_opts\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7c10>), (\(aqstreaming_mapper\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7cd0>), (\(aqstreaming_reducer\(aq, <django.forms.fields.CharField object at 0x7ff3bacb7dd0>), (\(aqhbase_common_lib\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb7f10>), (\(aqadapt_oozie\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb6090>), (\(aqadapt_spark_swift\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb6210>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.jobs/_launch_job_configure_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6310>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_property_name_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb6550>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqjobconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionExistingGeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBJobExecutionExistingGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionExistingGeneralConfigAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionGeneralConfigAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqjob_input\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7190>), (\(aqjob_output\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7350>), (\(aqcluster\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bacb7650>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqjob_input\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7190>), (\(aqjob_output\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7350>), (\(aqcluster\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bacb7650>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.jobs/_launch_job_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb7690>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_cluster_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb7850>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqjobexecutionexistinggeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionGeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBJobExecutionGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionGeneralConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqjob_input\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7190>), (\(aqjob_output\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7350>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqjob_input\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7190>), (\(aqjob_output\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bacb7350>)])
.UNINDENT
.INDENT 7.0
.TP
.B get_data_source_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.jobs/_launch_job_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb7410>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_job_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B populate_job_input_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_job_output_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb7590>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqjobexecutiongeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionInterfaceConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBJobExecutionInterfaceConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionInterfaceConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6950>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb6b10>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqjobexecutioninterfaceconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.LaunchJob(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionExistingGeneralConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionInterfaceConfig\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb6c10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6b90>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6b50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqlaunch_job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb6bd0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.job_executions:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.LaunchJobNewCluster(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.ClusterGeneralConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionGeneralConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobConfig\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.JobExecutionInterfaceConfig\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0250>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bacc01d0>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacc0150>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqlaunch_job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0210>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.jobs:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.NewClusterConfigAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.clusters.workflows.create.GeneralConfigAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a9d0>), (\(aqhidden_to_delete_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a890>), (\(aqcluster_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc29ad50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a8d0>), (\(aqcluster_template\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af10>), (\(aqcluster_count\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc29add0>), (\(aqimage\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29a290>), (\(aqkeypair\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af50>), (\(aqpersist_cluster\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb6610>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_configure_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a9d0>), (\(aqhidden_to_delete_field\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a890>), (\(aqcluster_name\(aq, <django.forms.fields.CharField object at 0x7ff3bc29ad50>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bc29a8d0>), (\(aqcluster_template\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af10>), (\(aqcluster_count\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc29add0>), (\(aqimage\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29a290>), (\(aqkeypair\(aq, <horizon.forms.fields.DynamicChoiceField object at 0x7ff3bc29af50>), (\(aqpersist_cluster\(aq, <django.forms.fields.BooleanField object at 0x7ff3bacb6610>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.clusters/_configure_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb66d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb6910>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqnewclusterconfigaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.SelectHadoopPlugin(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSelectHadoopPluginAction\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.jobs.workflows.launch.SelectHadoopPluginAction(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.cluster_templates.workflows.create.SelectPluginAction\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd26ae90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqhidden_create_field\(aq, <django.forms.fields.CharField object at 0x7ff3bd26ae90>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.clusters/_create_general_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacb6cd0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacb6f50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqselecthadooppluginaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.views.EditTagsView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBEditTagsForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd627f50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bd627150>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_image_registry/edit_tags.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.views.ImageRegistryView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbf22c50>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBImageRegistryTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_image_registry/image_registry.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.views.RegisterImageView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBRegisterImageForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bd627190>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bd627e90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_image_registry/register_image.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.views.update_context_with_plugin_tags(request, context)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.EditTagsAction(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqedit_tags\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.data_image_registry:edit_tags\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd254050>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit_tags\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.data_image_registry:edit_tags\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd254050>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.ImageRegistryTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqimage_registry\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.EditTagsAction\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.UnregisterImages\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.RegisterImage\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.UnregisterImages\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbb06210>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ImageRegistryTable.base_actions = OrderedDict([(\(aqdelete\(aq, <UnregisterImages: delete>), (\(aqedit_tags\(aq, <EditTagsAction: edit_tags>), (\(aqregister\(aq, <RegisterImage: register>)])
.UNINDENT
.INDENT 7.0
.TP
.B ImageRegistryTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqtags\(aq, <Column: tags>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.RegisterImage(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqregister\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.data_image_registry:register\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd254490>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqregister\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.data_image_registry:register\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd254490>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.UnregisterImages(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3bb5dc398>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3bb5dc1d8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb9cb230>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.tables.tags_to_string(image)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.panel.ImageRegistryPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc930250>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.data_image_registry\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.forms.EditTagsForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.forms.ImageForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfa10>), (\(aqtags_list\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac910>), (\(aquser_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb7aced0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfa10>), (\(aqtags_list\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac910>), (\(aquser_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb7aced0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.forms.ImageForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac190>), (\(aqtags_list\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac910>), (\(aquser_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb7aced0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac190>), (\(aqtags_list\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac910>), (\(aquser_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb7aced0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.forms.RegisterImageForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_image_registry.forms.ImageForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd4bf610>), (\(aqtags_list\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac910>), (\(aquser_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb7aced0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqimage_id\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bd4bf610>), (\(aqtags_list\(aq, <django.forms.fields.CharField object at 0x7ff3bb7ac910>), (\(aquser_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb7aced0>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd4bfc90>)])
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.views.JobExecutionDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc4a1e50>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBJobExecutionDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_executions/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.views.JobExecutionsView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B SEARCH_MAPPING = {\(aqcluster\(aq: \(aqcluster.name\(aq, \(aqjob\(aq: \(aqjob.name\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bb214590>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBJobExecutionsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_executions/job_executions.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tabs.GeneralTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_object_name(obj_id, sahara_obj, request)
.UNINDENT
.INDENT 7.0
.TP
.B get_object_names(job_ex, request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc4a1950>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqjob_execution_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_executions/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tabs.JobExecutionDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqjob_execution_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tabs.GeneralTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.DeleteJobExecution(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3baf94be8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3baf948a0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb3c89b0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.JobExecutionGuide(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqjobex_guide\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.wizard:jobex_guide\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc5cedd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqjobex_guide\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.wizard:jobex_guide\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc5cedd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.JobExecutionsFilterAction(**kwargs)
Bases: \fBhorizon.tables.actions.FilterAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables\(aq, \(aqis_api_filter\(aq: <function is_api_filter at 0x7ff3bea066e0>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqfilter_type\(aq: \(aqserver\(aq, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06488>, \(aqfilter\(aq: <function filter at 0x7ff3bea06668>, \(aqname\(aq: \(aqfilter\(aq, \(aqfilter_choices\(aq: ((\(aqid\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5ced90>, True), (\(aqjob\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5ce9d0>, True), (\(aqcluster\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5cea90>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5cef50>, True)), \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea06500>, \(aq__doc__\(aq: \(aqA base class representing a filter action for a table.\en\en    .. attribute:: name\en\en        The short name or "slug" representing this action. Defaults to\en        \(ga\(ga"filter"\(ga\(ga.\en\en    .. attribute:: verbose_name\en\en        A descriptive name used for display purposes. Defaults to the\en        value of \(ga\(ganame\(ga\(ga with the first letter of each word capitalized.\en\en    .. attribute:: param_name\en\en        A string representing the name of the request parameter used for the\en        search term. Default: \(ga\(ga"q"\(ga\(ga.\en\en    .. attribute:: filter_type\en\en        A string representing the type of this filter. If this is set to\en        \(ga\(ga"server"\(ga\(ga then \(ga\(gafilter_choices\(ga\(ga must also be provided.\en        Default: \(ga\(ga"query"\(ga\(ga.\en\en    .. attribute:: filter_choices\en\en        Required for server type filters. A tuple of tuples representing the\en        filter options. Tuple composition should evaluate to (string, string,\en        boolean), representing the filter parameter, display value, and whether\en        or not it should be applied to the API request as an API query\en        attribute. API type filters do not need to be accounted for in the\en        filter method since the API will do the filtering. However, server\en        type filters in general will need to be performed in the filter method.\en        By default this attribute is not provided.\en\en    .. attribute:: needs_preloading\en\en        If True, the filter function will be called for the initial\en        GET request with an empty \(ga\(gafilter_string\(ga\(ga, regardless of the\en        value of \(ga\(gamethod\(ga\(ga.\en    \(aq, \(aqdata_type_filter\(aq: <function data_type_filter at 0x7ff3bea065f0>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqassign_type_string\(aq: <function assign_type_string at 0x7ff3bea06578>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>}
.UNINDENT
.INDENT 7.0
.TP
.B filter_choices = ((\(aqid\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5ced90>, True), (\(aqjob\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5ce9d0>, True), (\(aqcluster\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5cea90>, True), (\(aqstatus\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5cef50>, True))
.UNINDENT
.INDENT 7.0
.TP
.B filter_type = \(aqserver\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.JobExecutionsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class ClusterNameColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_data(job_execution)
.UNINDENT
.INDENT 7.0
.TP
.B static link(job_execution)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class JobExecutionsTable.JobNameColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_data(job_execution)
.UNINDENT
.INDENT 7.0
.TP
.B static link(job_execution)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B class JobExecutionsTable.Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqjob_executions\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = [<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.DeleteJobExecution\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.ReLaunchJobExistingCluster\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.ReLaunchJobNewCluster\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = [<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.JobExecutionGuide\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.DeleteJobExecution\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.JobExecutionsFilterAction\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3beef23d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B JobExecutionsTable.STATUS_CHOICES = ((\(aqDONEWITHERROR\(aq, False), (\(aqFAILED\(aq, False), (\(aqKILLED\(aq, False), (\(aqSUCCEEDED\(aq, True))
.UNINDENT
.INDENT 7.0
.TP
.B JobExecutionsTable.STATUS_DISPLAY_CHOICES = ((\(aqDONEWITHERROR\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5ced10>), (\(aqFAILED\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5ceb50>), (\(aqKILLED\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bc5cea10>), (\(aqSUCCEEDED\(aq, <django.utils.functional.__proxy__ object at 0x7ff3beef2d90>))
.UNINDENT
.INDENT 7.0
.TP
.B class JobExecutionsTable.StatusColumn(transform, verbose_name=None, sortable=True, link=None, allowed_data_types=[], hidden=False, attrs=None, status=False, status_choices=None, display_choices=None, empty_value=None, filters=None, classes=None, summation=None, auto=None, truncate=None, link_classes=None, wrap_list=False, form_field=None, form_field_attributes=None, update_action=None, link_attrs=None, cell_attributes_getter=None, help_text=None)
Bases: \fBhorizon.tables.base.Column\fP
.INDENT 7.0
.TP
.B get_raw_data(datum)
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B JobExecutionsTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteJobExecution: delete>), (\(aqfilter\(aq, <JobExecutionsFilterAction: filter>), (\(aqjobex_guide\(aq, <JobExecutionGuide: jobex_guide>), (\(aqrelaunch\-job\-existing\(aq, <ReLaunchJobExistingCluster: relaunch\-job\-existing>), (\(aqrelaunch\-job\-new\(aq, <ReLaunchJobNewCluster: relaunch\-job\-new>)])
.UNINDENT
.INDENT 7.0
.TP
.B JobExecutionsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqjob_name\(aq, <JobNameColumn: job_name>), (\(aqcluster_name\(aq, <ClusterNameColumn: cluster_name>), (\(aqstatus\(aq, <StatusColumn: status>)])
.UNINDENT
.INDENT 7.0
.TP
.B JobExecutionsTable.get_object_display(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.ReLaunchJobExistingCluster(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.jobs.tables.ChoosePlugin\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bb3c8b18>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqrelaunch\-job\-existing\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.jobs:launch\-job\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3baf94600>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3baf944b0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc5ce950>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrelaunch\-job\-existing\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.jobs:launch\-job\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc5ce950>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.ReLaunchJobNewCluster(attrs=None, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.ReLaunchJobExistingCluster\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bb3c8b18>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqrelaunch\-job\-new\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.jobs:choose\-plugin\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3baf94558>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3baeb3328>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc5ce990>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrelaunch\-job\-new\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.jobs:choose\-plugin\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc5ce990>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, job_execution_id)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_executions.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_executions.panel.JobExecutionsPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbc98950>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.job_executions\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views.CreateJobBinaryView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B form_class
alias of \fBJobBinaryCreateForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_success_url()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc101210>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bc101610>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:data_processing.job_binaries:create\-job\-binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc101e50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_binaries/create.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views.DownloadJobBinaryView(**kwargs)
Bases: \fBdjango.views.generic.base.View\fP
.INDENT 7.0
.TP
.B get(request, job_binary_id=None)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views.EditJobBinaryView
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views.CreateJobBinaryView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBJobBinaryEditForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc101890>
.UNINDENT
.INDENT 7.0
.TP
.B submit_label = <django.utils.functional.__proxy__ object at 0x7ff3bc101f90>
.UNINDENT
.INDENT 7.0
.TP
.B submit_url = \(aqhorizon:project:data_processing.job_binaries:edit\-job\-binary\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views.JobBinariesView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc101350>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBJobBinariesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_binaries/job_binaries.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.views.JobBinaryDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc1015d0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBJobBinaryDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_binaries/details.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tabs.JobBinaryDetailsTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd254e90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqjob_binaries_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.job_binaries/_details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tabs.JobBinaryDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqjob_binary_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tabs.JobBinaryDetailsTab\(aq>,)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.CreateJobBinary(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate job binary\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.job_binaries:create\-job\-binary\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc438910>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate job binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.job_binaries:create\-job\-binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc438910>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.DeleteJobBinary(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3bb20a6e0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3bb20aef8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb2ab9b0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.DownloadJobBinary(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqdownload job binary\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.job_binaries:download\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-edit\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc438e90>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-edit\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdownload job binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.job_binaries:download\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc438e90>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.EditJobBinary(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqedit job binary\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.job_binaries:edit\-job\-binary\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-edit\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bb045e50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-edit\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit job binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.job_binaries:edit\-job\-binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb045e50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.JobBinariesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqjob_binaries\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.DeleteJobBinary\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.DownloadJobBinary\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.EditJobBinary\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.CreateJobBinary\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.tables.DeleteJobBinary\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb045790>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B JobBinariesTable.base_actions = OrderedDict([(\(aqcreate job binary\(aq, <CreateJobBinary: create job binary>), (\(aqdelete\(aq, <DeleteJobBinary: delete>), (\(aqdownload job binary\(aq, <DownloadJobBinary: download job binary>), (\(aqedit job binary\(aq, <EditJobBinary: edit job binary>)])
.UNINDENT
.INDENT 7.0
.TP
.B JobBinariesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqtype\(aq, <Column: type>), (\(aqdescription\(aq, <Column: description>)])
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.panel.JobBinariesPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd11bf10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.job_binaries\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.forms.JobBinaryCreateForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.job_binaries/_create_job_binary_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bba16f50>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.NEW_SCRIPT = \(aqnewscript\(aq
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.UPLOAD_BIN = \(aquploadfile\(aq
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.action_url = \(aqhorizon:project:data_processing.job_binaries:create\-job\-binary\(aq
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.get_help_text(extra_context=None)
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.get_unique_binary_name(request, base_name)
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.handle_internal(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.handle_swift(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.load_form_values()
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.media
.UNINDENT
.INDENT 7.0
.TP
.B JobBinaryCreateForm.populate_job_binary_internal_choices(request)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.forms.JobBinaryEditForm(request, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.job_binaries.forms.JobBinaryCreateForm\fP
.INDENT 7.0
.TP
.B FIELD_MAP = {\(aqjob_binary_type\(aq: None, \(aqjob_binary_description\(aq: \(aqdescription\(aq, \(aqjob_binary_name\(aq: \(aqname\(aq, \(aqjob_binary_password\(aq: None, \(aqjob_binary_username\(aq: None, \(aqjob_binary_script\(aq: None, \(aqjob_binary_file\(aq: None, \(aqjob_binary_script_name\(aq: None, \(aqjob_binary_internal\(aq: None, \(aqjob_binary_url\(aq: \(aqurl\(aq}
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.job_binaries.forms.LabeledInput(attrs=None)
Bases: \fBdjango.forms.widgets.TextInput\fP
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B render(name, values, attrs=None)
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.views\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.views.CreateDataSourceView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbbf6b10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.data\-sources:create\-data\-source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_sources/create.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateDataSource\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.views.DataSourceDetailsView
Bases: \fBhorizon.tabs.views.TabView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbbf6290>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBDataSourceDetailsTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_sources/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.views.DataSourcesView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbbf67d0>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBDataSourcesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_sources/data_sources.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.views.EditDataSourceView
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.views.CreateDataSourceView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bbbf69d0>
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBEditDataSource\fP
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.tabs.DataSourceDetailsTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqdata_source_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tabs.GeneralTab\(aq>,)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.tabs.GeneralTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc5ce810>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_source_details_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/data_processing.data_sources/_details.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.CreateDataSource(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqcreate data source\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.data_sources:create\-data\-source\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bba68190>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate data source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.data_sources:create\-data\-source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bba68190>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.DataSourcesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqdata_sources\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.DeleteDataSource\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.EditDataSource\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.CreateDataSource\(aq>, <class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.DeleteDataSource\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbc0d410>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B DataSourcesTable.base_actions = OrderedDict([(\(aqcreate data source\(aq, <CreateDataSource: create data source>), (\(aqdelete\(aq, <DeleteDataSource: delete>), (\(aqedit data source\(aq, <EditDataSource: edit data source>)])
.UNINDENT
.INDENT 7.0
.TP
.B DataSourcesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqtype\(aq, <Column: type>), (\(aqdescription\(aq, <Column: description>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.DeleteDataSource(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3bb40e0c0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3bb40e360>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb1ff6e0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables.EditDataSource(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqedit data source\(aq, \(aqurl\(aq: \(aqhorizon:project:data_processing.data_sources:edit\-data\-source\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bba68550>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqedit data source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:data_processing.data_sources:edit\-data\-source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bba68550>
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.panel.DataSourcesPanel
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bcde4850>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ((\(aqopenstack.services.data\-processing\(aq, \(aqopenstack.services.data_processing\(aq),)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdata_processing.data_sources\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create.CreateDataSource(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create.GeneralConfig\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bbf0af10>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bbf0ab10>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bbf0add0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_data_source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bbf0a290>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.data_sources:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create.GeneralConfig(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBGeneralConfigAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create.GeneralConfigAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdata_source_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0e10>), (\(aqdata_source_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb9a0050>), (\(aqdata_source_url\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0090>), (\(aqdata_source_credential_user\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0490>), (\(aqdata_source_credential_pass\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0c90>), (\(aqdata_source_description\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0a50>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdata_source_name\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0e10>), (\(aqdata_source_type\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bb9a0050>), (\(aqdata_source_url\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0090>), (\(aqdata_source_credential_user\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0490>), (\(aqdata_source_credential_pass\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0c90>), (\(aqdata_source_description\(aq, <django.forms.fields.CharField object at 0x7ff3bb9a0a50>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/data_processing.data_sources/_create_data_source_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb9a02d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bbf0a4d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqgeneralconfigaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.edit\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.edit.EditDataSource(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create.CreateDataSource\fP
.INDENT 7.0
.TP
.B FIELD_MAP = {\(aqdata_source_name\(aq: \(aqname\(aq, \(aqdata_source_credential_pass\(aq: None, \(aqdata_source_type\(aq: \(aqtype\(aq, \(aqdata_source_description\(aq: \(aqdescription\(aq, \(aqdata_source_url\(aq: \(aqurl\(aq, \(aqdata_source_credential_user\(aq: None}
.UNINDENT
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.sahara.content.data_processing.data_sources.workflows.create.GeneralConfig\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bbf0ad50>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bbf0ac50>
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bb9a0290>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqedit_data_source\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bbf0a3d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:data_processing.data_sources:index\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.helpers\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.utils.helpers.Helpers(request)
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B get_cluster_general_configs(plugin_name, hadoop_version)
.UNINDENT
.INDENT 7.0
.TP
.B get_general_node_group_configs(plugin_name, hadoop_version)
.UNINDENT
.INDENT 7.0
.TP
.B get_node_processes(plugin_name, hadoop_version)
.UNINDENT
.INDENT 7.0
.TP
.B get_targeted_cluster_configs(plugin_name, hadoop_version)
.UNINDENT
.INDENT 7.0
.TP
.B get_targeted_node_group_configs(plugin_name, hadoop_version)
.UNINDENT
.INDENT 7.0
.TP
.B is_from_guide()
.UNINDENT
.INDENT 7.0
.TP
.B reset_guide()
.UNINDENT
.INDENT 7.0
.TP
.B reset_job_guide()
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils\fP Module
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.Parameter(config)
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.PatchedDynamicWorkflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.sp
Overrides Workflow to fix its issues.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.PluginAndVersionMixin
Bases: \fBobject\fP
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.ServiceParametersWorkflow(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.PatchedDynamicWorkflow\fP
.sp
Base class for Workflows having services tabs with parameters.
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.StatusFormatMixin(request, context_seed, entry_point, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.build_control(parameter)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.build_interface_argument_fields(action, name, description, mapping_type, location, value_type, required, default_value)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.build_node_group_fields(action, name, template, count, serialized=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.clean_node_group(node_group)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.get_plugin_and_hadoop_version(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.get_security_groups(request, security_group_ids)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.workflow_helpers.parse_configs_from_context(context, defaults)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.anti_affinity\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.anti_affinity.anti_affinity_field()
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.anti_affinity.populate_anti_affinity_choices(self, request, context)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.sahara.content.data_processing.utils.neutron_support\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.sahara.content.data_processing.utils.neutron_support.populate_neutron_management_network_choices(self, request, context)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.api\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.api.trove\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.backup_create(request, name, instance_id, description=None, parent_id=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.backup_delete(request, backup_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.backup_get(request, backup_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.backup_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.cluster_add_shard(request, cluster_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.cluster_create(request, name, volume, flavor, num_instances, datastore, datastore_version, nics=None, root_password=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.cluster_delete(request, cluster_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.cluster_get(request, cluster_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.cluster_list(request, marker=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.create_cluster_root(request, cluster_id, password)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.database_delete(request, instance_id, db_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.database_list(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.datastore_flavors(request, datastore_name=None, datastore_version=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.datastore_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.datastore_version_list(request, datastore)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.flavor_get(request, flavor_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.flavor_list(request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_backups(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_create(request, name, volume, flavor, databases=None, users=None, restore_point=None, nics=None, datastore=None, datastore_version=None, replica_of=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_delete(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_detach_replica(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_get(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_list(request, marker=None)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_resize(request, instance_id, flavor_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_resize_volume(request, instance_id, size)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.instance_restart(request, instance_id)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.troveclient(*args, **kwargs)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.user_delete(request, instance_id, user)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.user_list_access(request, instance_id, user)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.api.trove.users_list(request, instance_id)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.test.helpers\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.test.helpers.TroveAPITestCase(methodName=\(aqrunTest\(aq)
Bases: \fBopenstack_dashboard.test.helpers.APITestCase\fP
.INDENT 7.0
.TP
.B setUp()
.UNINDENT
.INDENT 7.0
.TP
.B stub_troveclient()
.UNINDENT
.INDENT 7.0
.TP
.B tearDown()
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.test\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters.views\fP Module
.sp
Views for managing database clusters.
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.views.AddShardView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBAddShardForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc282190>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc282a90>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_clusters/add_shard.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.views.DetailView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc2820d0>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBClusterDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_clusters/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBClustersTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_clusters/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.views.LaunchClusterView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBLaunchForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc282090>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_clusters/launch.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.views.ResetPasswordView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBResetPasswordForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bc282550>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bc2824d0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_clusters/reset_password.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tabs.ClusterDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqcluster_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tabs.OverviewTab\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tabs.InstancesTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tabs.InstancesTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B cluster = None
.UNINDENT
.INDENT 7.0
.TP
.B get_instances_data()
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bd7d5210>
.UNINDENT
.INDENT 7.0
.TP
.B preload = True
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqinstances_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = (<class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables.InstancesTable\(aq>,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_template_name(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bc1b7a90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.AddShard(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, cluster=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba2a4320>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqplus\(aq, \(aqname\(aq: \(aqadd_shard\(aq, \(aqurl\(aq: \(aqhorizon:project:database_clusters:add_shard\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba26bd50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqplus\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqadd_shard\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:database_clusters:add_shard\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba26bd50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.ClustersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqclusters\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables.AddShard\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables.ResetPassword\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables.TerminateCluster\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqtask\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables.LaunchLink\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables.TerminateCluster\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba308f10>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B ClustersTable.TASK_CHOICES = ((\(aqnone\(aq, True),)
.UNINDENT
.INDENT 7.0
.TP
.B ClustersTable.base_actions = OrderedDict([(\(aqadd_shard\(aq, <AddShard: add_shard>), (\(aqlaunch\(aq, <LaunchLink: launch>), (\(aqreset_password\(aq, <ResetPassword: reset_password>), (\(aqterminate\(aq, <TerminateCluster: terminate>)])
.UNINDENT
.INDENT 7.0
.TP
.B ClustersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdatastore\(aq, <Column: datastore>), (\(aqdatastore_version\(aq, <Column: datastore_version>), (\(aqsize\(aq, <Column: size>), (\(aqtask\(aq, <Column: task>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.InstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqinstances\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba30b110>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_actions = OrderedDict()
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqtype\(aq, <Column: type>), (\(aqhost\(aq, <Column: host>), (\(aqsize\(aq, <Column: size>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.LaunchLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch\(aq, \(aqurl\(aq: \(aqhorizon:project:database_clusters:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-launch\(aq, \(aqajax\-modal\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba26bcd0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-launch\(aq, \(aqajax\-modal\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:database_clusters:launch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba26bcd0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.ResetPassword(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, cluster=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba2a4410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba2a4398>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqreset_password\(aq, \(aqurl\(aq: \(aqhorizon:project:database_clusters:reset_password\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba26b7d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqreset_password\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:database_clusters:reset_password\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba26b7d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.TerminateCluster(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_clusters.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba26bc90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqremove\(aq, \(aqname\(aq: \(aqterminate\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba32ca98>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba2dd788>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3ba2a42a8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3ba26bc90>
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqremove\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqterminate\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_datastore(cluster)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_datastore_version(cluster)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_host(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_instance_size(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_instance_type(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_size(cluster)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_clusters.tables.get_task(cluster)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.panel.Clusters
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba26bad0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.database\(aq, \(aqopenstack.services.object\-store\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdatabase_clusters\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_clusters.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.forms.AddShardForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd7c7fd0>), (\(aqnum_shards\(aq, <django.forms.fields.IntegerField object at 0x7ff3bcf7d090>), (\(aqnum_instances\(aq, <django.forms.fields.IntegerField object at 0x7ff3bcf7dcd0>), (\(aqcluster_id\(aq, <django.forms.fields.CharField object at 0x7ff3bcf7d610>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bd7c7fd0>), (\(aqnum_shards\(aq, <django.forms.fields.IntegerField object at 0x7ff3bcf7d090>), (\(aqnum_instances\(aq, <django.forms.fields.IntegerField object at 0x7ff3bcf7dcd0>), (\(aqcluster_id\(aq, <django.forms.fields.CharField object at 0x7ff3bcf7d610>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.forms.LaunchForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc88eb10>), (\(aqdatastore\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc88ea50>), (\(aqmongodb_flavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc88e110>), (\(aqvertica_flavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc4381d0>), (\(aqnetwork\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc438250>), (\(aqvolume\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba798790>), (\(aqroot_password\(aq, <django.forms.fields.CharField object at 0x7ff3bc438b10>), (\(aqnum_instances_vertica\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc438d50>), (\(aqnum_shards\(aq, <django.forms.fields.IntegerField object at 0x7ff3bbdd7110>), (\(aqnum_instances_per_shards\(aq, <django.forms.fields.IntegerField object at 0x7ff3bbdd7dd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B datastore_flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B datastore_versions(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B datastores(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc88eb10>), (\(aqdatastore\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc88ea50>), (\(aqmongodb_flavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc88e110>), (\(aqvertica_flavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc4381d0>), (\(aqnetwork\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc438250>), (\(aqvolume\(aq, <django.forms.fields.IntegerField object at 0x7ff3ba798790>), (\(aqroot_password\(aq, <django.forms.fields.CharField object at 0x7ff3bc438b10>), (\(aqnum_instances_vertica\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc438d50>), (\(aqnum_shards\(aq, <django.forms.fields.IntegerField object at 0x7ff3bbdd7110>), (\(aqnum_instances_per_shards\(aq, <django.forms.fields.IntegerField object at 0x7ff3bbdd7dd0>)])
.UNINDENT
.INDENT 7.0
.TP
.B filter_cluster_datastores(request)
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B mongodb_fields = [(\(aqmongodb_flavor\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbdd7950>), (\(aqnum_shards\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbdd7310>), (\(aqnum_instances_per_shards\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbdd7850>)]
.UNINDENT
.INDENT 7.0
.TP
.B populate_datastore_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B populate_flavor_choices(request)
.UNINDENT
.INDENT 7.0
.TP
.B populate_network_choices(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B vertica_fields = [(\(aqnum_instances_vertica\(aq, \(aqNumber of Instances\(aq), (\(aqvertica_flavor\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbdd7350>), (\(aqroot_password\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bbdd73d0>)]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_clusters.forms.ResetPasswordForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqcluster_id\(aq, <django.forms.fields.CharField object at 0x7ff3bcf7d210>), (\(aqpassword\(aq, <django.forms.fields.CharField object at 0x7ff3bcf7d910>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqcluster_id\(aq, <django.forms.fields.CharField object at 0x7ff3bcf7d210>), (\(aqpassword\(aq, <django.forms.fields.CharField object at 0x7ff3bcf7d910>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(*func_args, **func_kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.views\fP Module
.sp
Views for managing database instances.
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.views.DetailView(*args, **kwargs)
Bases: \fBhorizon.tabs.views.TabbedTableView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_data(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B static get_redirect_url()
.UNINDENT
.INDENT 7.0
.TP
.B get_tabs(request, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacf3310>
.UNINDENT
.INDENT 7.0
.TP
.B tab_group_class
alias of \fBInstanceDetailTabs\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/databases/detail.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B get_flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B has_more_data(table)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacc0d50>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBInstancesTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/databases/index.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.views.LaunchInstanceView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacf3450>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/databases/launch.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBLaunchInstance\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.views.ResizeInstanceView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBResizeInstanceForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba5203d0>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3ba520250>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/databases/resize_instance.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.views.ResizeVolumeView
Bases: \fBhorizon.forms.views.ModalFormView\fP
.INDENT 7.0
.TP
.B form_class
alias of \fBResizeVolumeForm\fP
.UNINDENT
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B get_object(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3ba520f10>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = <django.utils.functional.__proxy__ object at 0x7ff3bacf3ad0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/databases/resize_volume.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.db_capability\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.db_capability.is_mongodb_datastore(datastore)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.db_capability.is_vertica_datastore(datastore)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.tabs\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tabs.BackupsTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_backups_data()
.UNINDENT
.INDENT 7.0
.TP
.B instance = None
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9f43250>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqbackups_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.InstanceBackupsTable\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tabs.DatabaseTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_databases_data()
.UNINDENT
.INDENT 7.0
.TP
.B instance = None
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9f43890>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdatabase_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.DatabaseTable\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tabs.InstanceDetailTabs(request, **kwargs)
Bases: \fBhorizon.tabs.base.TabGroup\fP
.INDENT 7.0
.TP
.B slug = \(aqinstance_details\(aq
.UNINDENT
.INDENT 7.0
.TP
.B sticky = True
.UNINDENT
.INDENT 7.0
.TP
.B tabs = (<class \(aqopenstack_dashboard.contrib.trove.content.databases.tabs.OverviewTab\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tabs.UserTab\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tabs.DatabaseTab\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tabs.BackupsTab\(aq>)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tabs.OverviewTab(tab_group, request=None)
Bases: \fBhorizon.tabs.base.Tab\fP
.INDENT 7.0
.TP
.B get_context_data(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_template_name(request)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9f43390>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqoverview\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tabs.UserTab(tab_group, request)
Bases: \fBhorizon.tabs.base.TableTab\fP
.INDENT 7.0
.TP
.B allowed(request)
.UNINDENT
.INDENT 7.0
.TP
.B get_users_data()
.UNINDENT
.INDENT 7.0
.TP
.B instance = None
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3b9f438d0>
.UNINDENT
.INDENT 7.0
.TP
.B preload = False
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqusers_tab\(aq
.UNINDENT
.INDENT 7.0
.TP
.B table_classes = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.UsersTable\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqhorizon/common/_detail_table.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.CreateBackup(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba3f2a28>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba3f29b0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqbackup\(aq, \(aqurl\(aq: \(aqhorizon:project:database_backups:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bac39c50>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datam)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqbackup\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:database_backups:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bac39c50>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.DatabaseTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqdatabases\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.DeleteDatabase\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.DeleteDatabase\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb757ad0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B DatabaseTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteDatabase: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B DatabaseTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>)])
.UNINDENT
.INDENT 7.0
.TP
.B DatabaseTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.DeleteDatabase(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba7fee88>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba7feec0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3ba3f2938>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.DeleteUser(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba7fe360>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba7fee50>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3ba3f27d0>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.DetachReplica(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3ba3f25f0>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqdetach_replica\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba7fe050>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba7fe0f8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-detach\-replica\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3ba3f2668>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-detach\-replica\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdetach_replica\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.InstanceBackupsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqbackups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.RestoreLink\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.DeleteBackup\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.LaunchLink\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.DeleteBackup\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bbc586d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B InstanceBackupsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <LaunchLink: create>), (\(aqdelete\(aq, <DeleteBackup: delete>), (\(aqrestore\(aq, <RestoreLink: restore>)])
.UNINDENT
.INDENT 7.0
.TP
.B InstanceBackupsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqcreated\(aq, <Column: created>), (\(aqlocation\(aq, <Column: location>), (\(aqincremental\(aq, <Column: incremental>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.InstancesTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqdatabases\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.CreateBackup\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.ResizeVolume\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.ResizeInstance\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.RestartInstance\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.DetachReplica\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.TerminateInstance\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.LaunchLink\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.TerminateInstance\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd33a950>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.STATUS_CHOICES = ((\(aqACTIVE\(aq, True), (\(aqBLOCKED\(aq, True), (\(aqBUILD\(aq, None), (\(aqFAILED\(aq, False), (\(aqREBOOT\(aq, None), (\(aqRESIZE\(aq, None), (\(aqBACKUP\(aq, None), (\(aqSHUTDOWN\(aq, False), (\(aqERROR\(aq, False), (\(aqRESTART_REQUIRED\(aq, None))
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.STATUS_DISPLAY_CHOICES = ((\(aqACTIVE\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd4b0390>), (\(aqBLOCKED\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd4b0bd0>), (\(aqBUILD\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd4b0950>), (\(aqFAILED\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bd4b0990>), (\(aqREBOOT\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb876d10>), (\(aqRESIZE\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb876850>), (\(aqBACKUP\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb876c50>), (\(aqSHUTDOWN\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb876450>), (\(aqERROR\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb876690>), (\(aqRESTART_REQUIRED\(aq, <django.utils.functional.__proxy__ object at 0x7ff3bb8765d0>))
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_actions = OrderedDict([(\(aqbackup\(aq, <CreateBackup: backup>), (\(aqdetach_replica\(aq, <DetachReplica: detach_replica>), (\(aqlaunch\(aq, <LaunchLink: launch>), (\(aqresize_instance\(aq, <ResizeInstance: resize_instance>), (\(aqresize_volume\(aq, <ResizeVolume: resize_volume>), (\(aqrestart\(aq, <RestartInstance: restart>), (\(aqterminate\(aq, <TerminateInstance: terminate>)])
.UNINDENT
.INDENT 7.0
.TP
.B InstancesTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdatastore\(aq, <Column: datastore>), (\(aqdatastore_version\(aq, <Column: datastore_version>), (\(aqhost\(aq, <Column: host>), (\(aqsize\(aq, <Column: size>), (\(aqvolume\(aq, <Column: volume>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.LaunchLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqlaunch\(aq, \(aqurl\(aq: \(aqhorizon:project:databases:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc3c4590>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-launch\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqlaunch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:databases:launch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bc3c4590>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.ResizeInstance(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba3f2c08>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba3f2b90>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqresize_instance\(aq, \(aqurl\(aq: \(aqhorizon:project:databases:resize_instance\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-resize\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bd4b0810>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-resize\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqresize_instance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:databases:resize_instance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bd4b0810>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.ResizeVolume(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3ba3f2b18>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3ba3f2aa0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqresize_volume\(aq, \(aqurl\(aq: \(aqhorizon:project:databases:resize_volume\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-resize\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bac39110>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-resize\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqresize_volume\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:databases:resize_volume\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bac39110>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.RestartInstance(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B allowed(request, instance=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3ba3f2410>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc3c43d0>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqname\(aq: \(aqrestart\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba403868>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba6e99f0>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq, \(aqbtn\-reboot\(aq), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3ba3f2488>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq, \(aqbtn\-reboot\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bc3c43d0>
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrestart\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.TerminateInstance(**kwargs)
Bases: \fBhorizon.tables.actions.BatchAction\fP
.INDENT 7.0
.TP
.B action(request, obj_id)
.UNINDENT
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.databases.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3bc3c4410>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea069b0>, \(aqicon\(aq: \(aqremove\(aq, \(aqname\(aq: \(aqterminate\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba4036a8>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba6e98d8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aqclasses\(aq: (\(aqbtn\-danger\(aq,), \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3ba3f22a8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action which takes batch action on one or more\en    objects. This action should not require user input on a\en    per\-object basis.\en\en    .. attribute:: name\en\en       An internal name for this action.\en\en    .. method:: action_present\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en       String or tuple/list. The display forms of the name.\en       Should be a transitive verb, capitalized and translated. ("Delete",\en       "Rotate", etc.) If tuple or list \- then setting\en       self.current_present_action = n will set the current active item\en       from the list(action_present[n])\en\en       You can pass a complete action name including \e\(aqdata_type\e\(aq by specifying\en       \e\(aq%(data_type)s\e\(aq substitution in action_present ("Delete %(data_type)s").\en       Otherwise a complete action name is a format of "<action> <data_type>".\en       <data_type> is determined based on the number of items.\en       By passing a complete action name you allow translators to control\en       the order of words as they want.\en\en       NOTE: action_present attribute is bad for translations and should be\en       avoided. Please use the action_present method instead.\en       This form is kept for legacy.\en\en    .. method:: action_past\en\en       Method accepting an integer/long parameter and returning the display\en       forms of the name properly pluralised (depending on the integer) and\en       translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en       String or tuple/list. The past tense of action_present. ("Deleted",\en       "Rotated", etc.) If tuple or list \- then\en       setting self.current_past_action = n will set the current active item\en       from the list(action_past[n])\en\en       NOTE: action_past attribute is bad for translations and should be\en       avoided. Please use the action_past method instead.\en       This form is kept for legacy.\en\en    .. attribute:: data_type_singular\en\en       Optional display name (if the data_type method is not defined) for the\en       type of data that receives the action. ("Key Pair", "Floating IP", etc.)\en\en    .. attribute:: data_type_plural\en\en       Optional plural word (if the data_type method is not defined) for the\en       type of data being acted on. Defaults to appending \e\(aqs\e\(aq. Relying on the\en       default is bad for translations and should not be done, so it\e\(aqs absence\en       will raise a DeprecationWarning. It is currently kept as optional for\en       legacy code.\en\en       NOTE: data_type_singular and data_type_plural attributes are bad for\en       translations and should be avoided. Please use the action_present and\en       action_past methods. This form is kept for legacy.\en\en    .. attribute:: success_url\en\en       Optional location to redirect after completion of the delete\en       action. Defaults to the current page.\en\en    .. attribute:: help_text\en\en       Optional message for providing an appropriate help text for\en       the horizon user.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-danger\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bc3c4410>
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqremove\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqterminate\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, instance_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.tables.UsersTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqusers\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.DeleteUser\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = [<class \(aqopenstack_dashboard.contrib.trove.content.databases.tables.DeleteUser\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3bb7575d0>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B UsersTable.base_actions = OrderedDict([(\(aqdelete\(aq, <DeleteUser: delete>)])
.UNINDENT
.INDENT 7.0
.TP
.B UsersTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqhost\(aq, <Column: host>), (\(aqdatabases\(aq, <Column: databases>)])
.UNINDENT
.INDENT 7.0
.TP
.B UsersTable.get_object_id(datum)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.get_databases(user)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.get_datastore(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.get_datastore_version(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.get_host(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.get_size(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.get_volume_size(instance)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.databases.tables.is_incremental(obj)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.panel.Databases
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bac782d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.database\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdatabases\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.forms\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.forms.ResizeInstanceForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bba68c50>), (\(aqold_flavor_name\(aq, <django.forms.fields.CharField object at 0x7ff3bba68c10>), (\(aqnew_flavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb833d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bba68c50>), (\(aqold_flavor_name\(aq, <django.forms.fields.CharField object at 0x7ff3bba68c10>), (\(aqnew_flavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bbb833d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.forms.ResizeVolumeForm(request, *args, **kwargs)
Bases: \fBhorizon.forms.base.SelfHandlingForm\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb7acb10>), (\(aqorig_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3bb7acfd0>), (\(aqnew_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc0fd4d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinstance_id\(aq, <django.forms.fields.CharField object at 0x7ff3bb7acb10>), (\(aqorig_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3bb7acfd0>), (\(aqnew_size\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc0fd4d0>)])
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, data)
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.workflows.create_instance\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.AddDatabasesAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.sp
Initialize the database with users/databases. This tab will honor
the settings which should be a list of permissions required:
.INDENT 7.0
.IP \(bu 2
TROVE_ADD_USER_PERMS = []
.IP \(bu 2
TROVE_ADD_DATABASE_PERMS = []
.UNINDENT
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqdatabases\(aq, <django.forms.fields.CharField object at 0x7ff3bb8f9450>), (\(aquser\(aq, <django.forms.fields.CharField object at 0x7ff3ba5833d0>), (\(aqpassword\(aq, <django.forms.fields.CharField object at 0x7ff3ba583910>), (\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3ba583490>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqdatabases\(aq, <django.forms.fields.CharField object at 0x7ff3bb8f9450>), (\(aquser\(aq, <django.forms.fields.CharField object at 0x7ff3ba5833d0>), (\(aqpassword\(aq, <django.forms.fields.CharField object at 0x7ff3ba583910>), (\(aqhost\(aq, <django.forms.fields.CharField object at 0x7ff3ba583490>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/databases/_launch_initialize_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba583850>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = []
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba583650>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqadddatabasesaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.Advanced(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAdvancedAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = [\(aqbackup\(aq, \(aqmaster\(aq]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.AdvancedAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqinitial_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba583c50>), (\(aqbackup\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba583d10>), (\(aqmaster\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba520710>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqinitial_state\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba583c50>), (\(aqbackup\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba583d10>), (\(aqmaster\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba520710>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/databases/_launch_advanced_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba520ed0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_backup_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_master_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3ba520b90>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqadvancedaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.InitializeDatabase(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBAddDatabasesAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = [\(aqdatabases\(aq, \(aquser\(aq, \(aqpassword\(aq, \(aqhost\(aq]
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.LaunchInstance(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = (<class \(aqopenstack_dashboard.contrib.trove.content.databases.workflows.create_instance.SetInstanceDetails\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.workflows.create_instance.SetNetwork\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.workflows.create_instance.InitializeDatabase\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.databases.workflows.create_instance.Advanced\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3ba5207d0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5204d0>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba5202d0>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqlaunch_instance\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3ba520490>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:databases:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.SetInstanceDetails(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetInstanceDetailsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqname\(aq, \(aqvolume\(aq, \(aqflavor\(aq, \(aqdatastore\(aq)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.SetInstanceDetailsAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bacf3490>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc3ac390>), (\(aqvolume\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc4a1b90>), (\(aqdatastore\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba798550>)])
.UNINDENT
.INDENT 7.0
.TP
.B clean()
.UNINDENT
.INDENT 7.0
.TP
.B datastore_versions(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B datastores(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bacf3490>), (\(aqflavor\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc3ac390>), (\(aqvolume\(aq, <django.forms.fields.IntegerField object at 0x7ff3bc4a1b90>), (\(aqdatastore\(aq, <django.forms.fields.ChoiceField object at 0x7ff3ba798550>)])
.UNINDENT
.INDENT 7.0
.TP
.B flavors(*args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/databases/_launch_details_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba798610>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_datastore_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_flavor_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bab88a50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsetinstancedetailsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.SetNetwork(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBSetNetworkAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contribute(data, context)
.UNINDENT
.INDENT 7.0
.TP
.B contributes = (\(aqnetwork_id\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/databases/_launch_networks.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.databases.workflows.create_instance.SetNetworkAction(request, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqnetwork\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bab88450>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqnetwork\(aq, <django.forms.fields.MultipleChoiceField object at 0x7ff3bab88450>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = <django.utils.functional.__proxy__ object at 0x7ff3bab88690>
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = None
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bab88f10>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.network\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B populate_network_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bb8f9e50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqsetnetworkaction\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.databases.workflows\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups.views\fP Module
.sp
Views for displaying database backups.
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.views.BackupView
Bases: \fBhorizon.workflows.views.WorkflowView\fP
.INDENT 7.0
.TP
.B get_context_data(**kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bdae0e50>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_backups/backup.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B workflow_class
alias of \fBCreateBackup\fP
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.views.DetailView(**kwargs)
Bases: \fBhorizon.views.APIView\fP
.INDENT 7.0
.TP
.B get_data(request, context, *args, **kwargs)
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bacc0ad0>
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_backups/details.html\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.views.IndexView(*args, **kwargs)
Bases: \fBhorizon.tables.views.DataTableView\fP
.INDENT 7.0
.TP
.B get_data()
.UNINDENT
.INDENT 7.0
.TP
.B page_title = <django.utils.functional.__proxy__ object at 0x7ff3bdae0590>
.UNINDENT
.INDENT 7.0
.TP
.B table_class
alias of \fBBackupsTable\fP
.UNINDENT
.INDENT 7.0
.TP
.B template_name = \(aqproject/database_backups/index.html\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups.urls\fP Module
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups.tables\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.tables.BackupsTable(request, data=None, needs_form_wrapper=None, **kwargs)
Bases: \fBhorizon.tables.base.DataTable\fP
.INDENT 7.0
.TP
.B class Meta
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B name = \(aqbackups\(aq
.UNINDENT
.INDENT 7.0
.TP
.B row_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.RestoreLink\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.DownloadBackup\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.DeleteBackup\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B row_class
alias of \fBUpdateRow\fP
.UNINDENT
.INDENT 7.0
.TP
.B status_columns = [\(aqstatus\(aq]
.UNINDENT
.INDENT 7.0
.TP
.B table_actions = (<class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.LaunchLink\(aq>, <class \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables.DeleteBackup\(aq>)
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba8c9990>
.UNINDENT
.UNINDENT
.INDENT 7.0
.TP
.B BackupsTable.base_actions = OrderedDict([(\(aqcreate\(aq, <LaunchLink: create>), (\(aqdelete\(aq, <DeleteBackup: delete>), (\(aqdownload\(aq, <DownloadBackup: download>), (\(aqrestore\(aq, <RestoreLink: restore>)])
.UNINDENT
.INDENT 7.0
.TP
.B BackupsTable.base_columns = OrderedDict([(\(aqname\(aq, <Column: name>), (\(aqdatastore\(aq, <Column: datastore>), (\(aqdatastore_version\(aq, <Column: datastore_version>), (\(aqcreated\(aq, <Column: created>), (\(aqinstance\(aq, <Column: instance>), (\(aqincremental\(aq, <Column: incremental>), (\(aqstatus\(aq, <Column: status>)])
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.tables.DeleteBackup(**kwargs)
Bases: \fBhorizon.tables.actions.DeleteAction\fP
.INDENT 7.0
.TP
.B static action_past(count)
.UNINDENT
.INDENT 7.0
.TP
.B static action_present(count)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables\(aq, \(aqhandle\(aq: <function handle at 0x7ff3bea06cf8>, \(aqupdate\(aq: <function update at 0x7ff3bea06b90>, \(aqget_success_url\(aq: <function get_success_url at 0x7ff3bea06c08>, \(aqget_param_name\(aq: <function get_param_name at 0x7ff3bea061b8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqhelp_text\(aq: <django.utils.functional.__proxy__ object at 0x7ff3be9d6250>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06d70>, \(aqname\(aq: \(aqdelete\(aq, \(aqaction_present\(aq: <staticmethod object at 0x7ff3ba6cd0c0>, \(aqaction_past\(aq: <staticmethod object at 0x7ff3ba6cdbe8>, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bea06ed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bea06a28>, \(aq_get_action_name\(aq: <function _get_action_name at 0x7ff3bea06aa0>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqaction\(aq: <function action at 0x7ff3bea06de8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06c80>, \(aq__doc__\(aq: \(aqA table action used to perform delete operations on table data.\en\en    .. attribute:: name\en\en        A short name or "slug" representing this action.\en        Defaults to \e\(aqdelete\e\(aq\en\en    .. method:: action_present\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_present (PendingDeprecation)\en\en        A string containing the transitive verb describing the delete action.\en        Defaults to \e\(aqDelete\e\(aq\en\en        NOTE: action_present attribute is bad for translations and should be\en        avoided. Please use the action_present method instead.\en        This form is kept for legacy.\en\en    .. method:: action_past\en\en        Method accepting an integer/long parameter and returning the display\en        forms of the name properly pluralised (depending on the integer) and\en        translated in a string or tuple/list.\en\en    .. attribute:: action_past (PendingDeprecation)\en\en        A string set to the past tense of action_present.\en        Defaults to \e\(aqDeleted\e\(aq\en\en        NOTE: action_past attribute is bad for translations and should be\en        avoided. Please use the action_past method instead.\en        This form is kept for legacy.\en\en    .. attribute:: data_type_singular (PendingDeprecation)\en\en        A string used to name the data to be deleted.\en\en    .. attribute:: data_type_plural (PendingDeprecation)\en\en        Optional. Plural of \(ga\(gadata_type_singular\(ga\(ga.\en        Defaults to \(ga\(gadata_type_singular\(ga\(ga appended with an \e\(aqs\e\(aq.  Relying on\en        the default is bad for translations and should not be done, so it\e\(aqs\en        absence will raise a DeprecationWarning. It is currently kept as\en        optional for legacy code.\en\en        NOTE: data_type_singular and data_type_plural attributes are bad for\en        translations and should be avoided. Please use the action_present and\en        action_past methods. This form is kept for legacy.\en    \(aq, \(aqdelete\(aq: <function delete at 0x7ff3bb244938>}
.UNINDENT
.INDENT 7.0
.TP
.B delete(request, obj_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.tables.DownloadBackup(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, datum)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bbada1b8>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bad8f848>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqname\(aq: \(aqdownload\(aq, \(aqurl\(aq: \(aqhorizon:project:containers:object_download\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqbtn\-download\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba5c9090>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqbtn\-download\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqdownload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:containers:object_download\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5c9090>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.tables.LaunchLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bea06410>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcamera\(aq, \(aqname\(aq: \(aqcreate\(aq, \(aqurl\(aq: \(aqhorizon:project:database_backups:create\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq, \(aqbtn\-create\(aq), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba5c94d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq, \(aqbtn\-create\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcamera\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqcreate\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:database_backups:create\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5c94d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.tables.RestoreLink(attrs=None, **kwargs)
Bases: \fBhorizon.tables.actions.LinkAction\fP
.INDENT 7.0
.TP
.B allowed(request, backup=None)
.UNINDENT
.INDENT 7.0
.TP
.B base_options = {\(aq__module__\(aq: \(aqopenstack_dashboard.contrib.trove.content.database_backups.tables\(aq, \(aqrender\(aq: <function render at 0x7ff3bea06320>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_link_url\(aq: <function get_link_url at 0x7ff3bbada8c0>, \(aqajax\(aq: False, \(aqallowed\(aq: <function allowed at 0x7ff3baf33500>, \(aqbase_options\(aq: {\(aq__module__\(aq: \(aqhorizon.tables.actions\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqupdate\(aq: <function update at 0x7ff3bec1eed8>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06140>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqallowed\(aq: <function allowed at 0x7ff3bec1ede8>, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aqbase_options\(aq: {...}, \(aq__doc__\(aq: \(aqCommon base class for all \(ga\(gaAction\(ga\(ga classes.\(aq, \(aq__init__\(aq: <function __init__ at 0x7ff3bec1ec80>}, \(aqget_default_attrs\(aq: <function get_default_attrs at 0x7ff3bea06050>, \(aq__init__\(aq: <function __init__ at 0x7ff3bea06230>, \(aqicon\(aq: \(aqcloud\-upload\(aq, \(aqname\(aq: \(aqrestore\(aq, \(aqurl\(aq: \(aqhorizon:project:databases:launch\(aq, \(aqdata_type_matched\(aq: <function data_type_matched at 0x7ff3bec1ecf8>, \(aqget_default_classes\(aq: <function get_default_classes at 0x7ff3bec1ef50>, \(aqget_policy_target\(aq: <function get_policy_target at 0x7ff3bec1ed70>, \(aqassociate_with_table\(aq: <function associate_with_table at 0x7ff3bea06398>, \(aq_allowed\(aq: <function _allowed at 0x7ff3bec1ee60>, \(aqclasses\(aq: (\(aqajax\-modal\(aq,), \(aq__repr__\(aq: <function __repr__ at 0x7ff3bea060c8>, \(aqget_ajax_update_url\(aq: <function get_ajax_update_url at 0x7ff3bea062a8>, \(aqverbose_name\(aq: <django.utils.functional.__proxy__ object at 0x7ff3ba5c95d0>, \(aq__doc__\(aq: \(aqA table action which is simply a link rather than a form POST.\en\en    .. attribute:: name\en\en        Required. The short name or "slug" representing this\en        action. This name should not be changed at runtime.\en\en    .. attribute:: verbose_name\en\en        A string which will be rendered as the link text. (Required)\en\en    .. attribute:: url\en\en        A string or a callable which resolves to a url to be used as the link\en        target. You must either define the \(ga\(gaurl\(ga\(ga attribute or override\en        the \(ga\(gaget_link_url\(ga\(ga method on the class.\en\en    .. attribute:: allowed_data_types\en\en        A list that contains the allowed data types of the action.  If the\en        datum\e\(aqs type is in this list, the action will be shown on the row\en        for the datum.\en\en        Defaults to be an empty list (\(ga\(ga[]\(ga\(ga). When set to empty, the action\en        will accept any kind of data.\en    \(aq}
.UNINDENT
.INDENT 7.0
.TP
.B classes = (\(aqajax\-modal\(aq,)
.UNINDENT
.INDENT 7.0
.TP
.B get_link_url(datum)
.UNINDENT
.INDENT 7.0
.TP
.B icon = \(aqcloud\-upload\(aq
.UNINDENT
.INDENT 7.0
.TP
.B name = \(aqrestore\(aq
.UNINDENT
.INDENT 7.0
.TP
.B url = \(aqhorizon:project:databases:launch\(aq
.UNINDENT
.INDENT 7.0
.TP
.B verbose_name = <django.utils.functional.__proxy__ object at 0x7ff3ba5c95d0>
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.tables.UpdateRow(table, datum=None)
Bases: \fBhorizon.tables.base.Row\fP
.INDENT 7.0
.TP
.B ajax = True
.UNINDENT
.INDENT 7.0
.TP
.B get_data(request, backup_id)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_backups.tables.db_link(obj)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_backups.tables.db_name(obj)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_backups.tables.get_datastore(obj)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_backups.tables.get_datastore_version(obj)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.contrib.trove.content.database_backups.tables.is_incremental(obj)
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups.panel\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.panel.Backups
Bases: \fBhorizon.base.Panel\fP
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3ba5c9150>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = (\(aqopenstack.services.database\(aq, \(aqopenstack.services.object\-store\(aq)
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqdatabase_backups\(aq
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups.workflows.create_backup\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.workflows.create_backup.BackupDetailsAction(request, context, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Action\fP
.INDENT 7.0
.TP
.B base_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc349fd0>), (\(aqinstance\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc349d10>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd326090>), (\(aqparent\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bacc0b10>)])
.UNINDENT
.INDENT 7.0
.TP
.B declared_fields = OrderedDict([(\(aqname\(aq, <django.forms.fields.CharField object at 0x7ff3bc349fd0>), (\(aqinstance\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bc349d10>), (\(aqdescription\(aq, <django.forms.fields.CharField object at 0x7ff3bd326090>), (\(aqparent\(aq, <django.forms.fields.ChoiceField object at 0x7ff3bacc0b10>)])
.UNINDENT
.INDENT 7.0
.TP
.B help_text = \(aq\(aq
.UNINDENT
.INDENT 7.0
.TP
.B help_text_template = \(aqproject/database_backups/_backup_details_help.html\(aq
.UNINDENT
.INDENT 7.0
.TP
.B media
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacc09d0>
.UNINDENT
.INDENT 7.0
.TP
.B permissions = ()
.UNINDENT
.INDENT 7.0
.TP
.B populate_instance_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B populate_parent_choices(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B progress_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0450>
.UNINDENT
.INDENT 7.0
.TP
.B slug = u\(aqbackupdetailsaction\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.workflows.create_backup.CreateBackup(request=None, context_seed=None, entry_point=None, *args, **kwargs)
Bases: \fBhorizon.workflows.base.Workflow\fP
.INDENT 7.0
.TP
.B default_steps = [<class \(aqopenstack_dashboard.contrib.trove.content.database_backups.workflows.create_backup.SetBackupDetails\(aq>]
.UNINDENT
.INDENT 7.0
.TP
.B failure_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0ed0>
.UNINDENT
.INDENT 7.0
.TP
.B finalize_button_name = <django.utils.functional.__proxy__ object at 0x7ff3bacc0a50>
.UNINDENT
.INDENT 7.0
.TP
.B format_status_message(message)
.UNINDENT
.INDENT 7.0
.TP
.B get_initial()
.UNINDENT
.INDENT 7.0
.TP
.B handle(request, context)
.UNINDENT
.INDENT 7.0
.TP
.B name = <django.utils.functional.__proxy__ object at 0x7ff3bacc0b50>
.UNINDENT
.INDENT 7.0
.TP
.B slug = \(aqcreate_backup\(aq
.UNINDENT
.INDENT 7.0
.TP
.B success_message = <django.utils.functional.__proxy__ object at 0x7ff3bacc0c50>
.UNINDENT
.INDENT 7.0
.TP
.B success_url = \(aqhorizon:project:database_backups:index\(aq
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.contrib.trove.content.database_backups.workflows.create_backup.SetBackupDetails(workflow)
Bases: \fBhorizon.workflows.base.Step\fP
.INDENT 7.0
.TP
.B action_class
alias of \fBBackupDetailsAction\fP
.UNINDENT
.INDENT 7.0
.TP
.B contributes = [\(aqname\(aq, \(aqdescription\(aq, \(aqinstance\(aq, \(aqparent\(aq]
.UNINDENT
.UNINDENT
.SS The \fBopenstack_dashboard.contrib.trove.content.database_backups.workflows\fP Module
.SS The \fBopenstack_dashboard.local\fP Module
.SS The \fBopenstack_dashboard.local.enabled\fP Module
.SS The \fBopenstack_dashboard.utils.settings\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.utils.settings.import_dashboard_config(modules)
Imports configuration from all the modules and merges it.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.settings.import_submodules(module)
Import all submodules and make them available in a dict.
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.settings.update_dashboards(modules, horizon_config, installed_apps)
Imports dashboard and panel configuration from modules and applies it.
.sp
The submodules from specified modules are imported, and the configuration
for the specific dashboards is merged, with the later modules overriding
settings from the former. Then the configuration is applied to
horizon_config and installed_apps, in alphabetical order of files from
which the configurations were imported.
.sp
For example, given this setup:
.INDENT 7.0
.INDENT 3.5
.nf
foo/__init__.py
foo/_10_baz.py
foo/_20_qux.py
.fi
.sp
.nf
bar/__init__.py
bar/_30_baz_.py
.fi
.sp
.UNINDENT
.UNINDENT
.sp
and being called with \fBmodules=[foo, bar]\fP, we will first have the
configuration from \fB_10_baz\fP and \fB_30_baz\fP merged, then the
configurations will be applied in order \fBqux\fP, \fBbaz\fP (\fBbaz\fP is
second, because the most recent file which contributed to it, \fB_30_baz\fP,
comes after \fB_20_qux\fP).
.sp
Panel specific configurations are stored in horizon_config. Dashboards
from both plugin\-based and openstack_dashboard must be registered before
the panel configuration can be applied. Making changes to the panel is
deferred until the horizon autodiscover is completed, configurations are
applied in alphabetical order of files where it was imported.
.UNINDENT
.SS The \fBopenstack_dashboard.utils.metering\fP Module
.INDENT 0.0
.TP
.B class openstack_dashboard.utils.metering.MeterQuery(*args, **kwargs)
Bases: \fBopenstack_dashboard.utils.metering.ProjectAggregatesQuery\fP
.INDENT 7.0
.TP
.B query(meter)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B class openstack_dashboard.utils.metering.ProjectAggregatesQuery(request, date_from, date_to, period=None, additional_query=[])
Bases: \fBobject\fP
.INDENT 7.0
.TP
.B query(meter)
.UNINDENT
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.metering.calc_date_args(date_from, date_to, date_options)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.metering.calc_period(date_from, date_to, number_of_samples=400)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.metering.get_resource_name(request, resource_id, resource_name, meter_name)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.metering.get_unit(meter, request)
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.metering.normalize_series_by_unit(series)
Transform series\(aq values into a more human readable form:
1) Determine the data point with the maximum value
2) Decide the unit appropriate for this value (normalize it)
3) Convert other values to this new unit, if necessary
.UNINDENT
.INDENT 0.0
.TP
.B openstack_dashboard.utils.metering.series_for_meter(request, aggregates, group_by, meter_id, meter_name, stats_name, unit, label=None)
Construct datapoint series for a meter from resource aggregates.
.UNINDENT
.SS The \fBopenstack_dashboard.utils\fP Module
.SS The \fBopenstack_dashboard.utils.filters\fP Module
.INDENT 0.0
.TP
.B openstack_dashboard.utils.filters.get_int_or_uuid(value)
Check if a value is valid as UUID or an integer.
.sp
This method is mainly used to convert floating IP id to the
appropriate type. For floating IP id, integer is used in Nova\(aqs
original implementation, but UUID is used in Neutron based one.
.UNINDENT
.SH RELEASE NOTES
.SS Horizon 2012.1 "Essex"
.SS Release Overview
.sp
During the Essex release cycle, Horizon underwent a significant set of internal
changes to allow extensibility and customization while also adding a significant
number of new features and bringing much greater stability to every interaction
with the underlying components.
.SS Highlights
.SS Extensibility
.sp
Making Horizon extensible for third\-party developers was one of the core
goals for the Essex release cycle. Massive strides have been made to allow
for the addition of new "plug\-in" components and customization of OpenStack
Dashboard deployments.
.sp
To support this extensibility, all the components used to build on Horizon\(aqs
interface are now modular and reusable. Horizon\(aqs own dashboards use these
components, and they have all been built with third\-party developers in mind.
Some of the main components are listed below.
.SS Dashboards and Panels
.sp
Horizon\(aqs structure has been divided into logical groupings called dashboards
and panels. Horizon\(aqs classes representing these concepts handle all the
structural concerns associated with building a complete user interface
(navigation, access control, url structure, etc.).
.SS Data Tables
.sp
One of the most common activities in a dashboard user interface is simply
displaying a list of resources or data and allowing the user to take actions on
that data. To this end, Horizon abstracted the commonalities of this task into a
reusable set of classes which allow developers to programmatically create
displays and interactions for their data with minimal effort and zero
boilerplate.
.SS Tabs and TabGroups
.sp
Another extremely common user\-interface element is the use of "tabs" to break
down discrete groups of data into manageable chunks. Since these tabs often
encompass vastly different data, may have completely different access
restrictions, and may sometimes be better\-off being loaded dynamically rather
than with the initial page load, Horizon includes tab and tab group classes for
constructing these interfaces elegantly and with no knowledge of the HTML, CSS
or JavaScript involved.
.SS Nova Features
.sp
Support for Nova\(aqs features has been greatly improved in Essex:
.INDENT 0.0
.IP \(bu 2
.INDENT 2.0
.TP
.B Support for Nova volumes, including:
.INDENT 7.0
.IP \(bu 2
Volumes creation and management.
.IP \(bu 2
Volume snapshots.
.IP \(bu 2
Realtime AJAX updating for volumes in transition states.
.UNINDENT
.UNINDENT
.IP \(bu 2
.INDENT 2.0
.TP
.B Improved Nova instance display and interactions, including:
.INDENT 7.0
.IP \(bu 2
Launching instances from volumes.
.IP \(bu 2
Pausing/suspending instances.
.IP \(bu 2
Displaying instance power states.
.IP \(bu 2
Realtime AJAX updating for instances in transition states.
.UNINDENT
.UNINDENT
.IP \(bu 2
Support for managing Floating IP address pools.
.IP \(bu 2
New instance and volume detail views.
.UNINDENT
.SS Settings
.sp
A new "Settings" area was added that offers several useful functions:
.INDENT 0.0
.IP \(bu 2
EC2 credentials download.
.IP \(bu 2
OpenStack RC file download.
.IP \(bu 2
User language preference customization.
.UNINDENT
.SS User Experience Improvements
.INDENT 0.0
.IP \(bu 2
Support for batch actions on multiple resources (e.g. terminating multiple
instances at once).
.IP \(bu 2
Modal interactions throughout the entire UI.
.IP \(bu 2
AJAX form submission for in\-place validation.
.IP \(bu 2
Improved in\-context help for forms (tooltips and validation messages).
.UNINDENT
.SS Community
.INDENT 0.0
.IP \(bu 2
Creation and publication of a set of Human Interface Guidelines (HIG).
.IP \(bu 2
Copious amounts of documentation for developers.
.UNINDENT
.SS Under The Hood
.INDENT 0.0
.IP \(bu 2
Internationalization fully enabled, with all strings marked for translation.
.IP \(bu 2
.INDENT 2.0
.TP
.B Client library changes:
.INDENT 7.0
.IP \(bu 2
Full migration to python\-novaclient from the deprecated openstackx library.
.IP \(bu 2
Migration to python\-keystoneclient from the deprecated keystone portion
of the python\-novaclient library.
.UNINDENT
.UNINDENT
.IP \(bu 2
Client\-side templating capabilities for more easily creating dynamic
interactions.
.IP \(bu 2
Frontend overhaul to use the Bootstrap CSS/JS framework.
.IP \(bu 2
Centralized error handling for vastly improved stability/reliability
across APIs/clients.
.IP \(bu 2
Completely revamped test suite with comprehensive test data.
.IP \(bu 2
Forward\-compatibility with Django 1.4 and the option of cookie\-based sessions.
.UNINDENT
.SS Known Issues and Limitations
.SS Quantum
.sp
Quantum support has been removed from Horizon for the Essex release. It will be
restored in Folsom in conjunction with Quantum\(aqs first release as a core
OpenStack project.
.SS Keystone
.sp
Due to the mechanisms by which Keystone determines "admin"\-ness for a user, an
admin user interacting with the "Project" dashboard may see some inconsistent
behavior such as all resources being listed instead of only those belonging to
that project, or only being able to return to the "Admin" dashboard while
accessing certain projects.
.SS Exceptions during customization
.sp
Exceptions raised while overriding built\-in Horizon behavior via the
"customization_module" setting may trigger a bug in the error handling
which will mask the original exception.
.SS Backwards Compatibility
.sp
The Essex Horizon release is only partially backwards\-compatible with Diablo
OpenStack components. While it is largely possible to log in and interact, many
functions in Nova, Glance and Keystone changed too substantially in Essex to
maintain full compatibility.
.SS Horizon 2012.2 "Folsom"
.SS Release Overview
.sp
The Folsom release cycle brought several major advances to Horizon\(aqs user
experience while also reintroducing Quantum networking as a core piece
of the OpenStack Dashboard.
.SS Highlights
.SS Networking (Quantum)
.sp
With Quantum being a core project for the Folsom release, we worked closely
with the Quantum team to bring networking support back into Horizon. This
appears in two primary places: the Networks panel in both the Project and
Admin dashboards, and the Network tab in the Launch Instance workflow. Expect
further improvements in these areas as Quantum continues to mature and more
users adopt this model of virtual network management.
.SS User Experience
.SS Workflows
.sp
By far the biggest UI/UX change in the Folsom release is the introduction of
programmatic workflows. These components allow developers to create concise
interactions that combine discrete tasks spanning multiple services and
resources in a user\-friendly way and with minimal boilerplate code. Within
a workflow, related objects can also be dynamically created so users don\(aqt lose
their place when they realize the item they wanted isn\(aqt currently available.
Look for examples of these workflows in Launch Instance, Associate Floating IP,
and Create/Edit Project.
.SS Resource Browser
.sp
Another cool new component is an interface designed for "browsing" resources
which are nested under a parent resource. The object store (Swift) is a prime
example of this. Now there is a consistent top\-level navigation for containers
on the left\-hand pane of the "browser" while the right\-hand pane lets you
explore within those containers and sub\-folders.
.SS User Experience Improvements
.INDENT 0.0
.IP \(bu 2
Timezone support is now enabled. You can select your preferred timezone
in the User Settings panel.
.UNINDENT
.SS Community
.INDENT 0.0
.IP \(bu 2
Third\-party developers who wish to build on Horizon can get started much
faster using the new dashboard and panel templates. See the docs on
\fI\%creating a dashboard\fP and \fI\%creating a panel\fP for more information.
.IP \(bu 2
A \fI\%thorough set of documentation\fP for developers on how to go about
internationalizing, localizing and translating OpenStack projects
is now available.
.UNINDENT
.SS Under The Hood
.INDENT 0.0
.IP \(bu 2
The python\-swiftclient library and python\-cinderclient libraries are now
used under the hood instead of cloudfiles and python\-novaclient respectively.
.IP \(bu 2
Internationalization of client\-side JavaScript is now possible in addition
to server\-side Python code.
.IP \(bu 2
Keystone authentication is now handled by a proper pluggable Django
authentication backend, offering significantly better and more reliable
security for Horizon.
.UNINDENT
.SS Other Improvements and Fixes
.sp
Some of the general areas of improvement include:
.INDENT 0.0
.IP \(bu 2
Images can now be added to Glance by providing a URL for Glance to download
the image data from.
.IP \(bu 2
Quotas are now displayed dynamically throughout the Project dashboard.
.IP \(bu 2
API endpoints are now displayed on the OpenStack RC File panel so they
can be organically discovered by an end\-user.
.IP \(bu 2
DataTables now support a summation row at the bottom of the table.
.IP \(bu 2
Better cross\-browser support (Safari and IE particularly).
.IP \(bu 2
Fewer API calls to OpenStack endpoints (improves performance).
.IP \(bu 2
Better validation of what actions are permitted when.
.IP \(bu 2
Improved error handling and error messages.
.UNINDENT
.SS Known Issues and Limitations
.SS Floating IPs and Quantum
.sp
Due to the very late addition of floating IP support in Quantum, Nova\(aqs
integration there is lacking, so floating IP\-related API calls to Nova will
fail when your OpenStack deployment uses Quantum for networking. This means
that Horizon actions such as "allocate" and "associate" floating IPs will
not work either since they rely on the underlying APIs.
.SS Pagination
.sp
A number of the "index" pages don\(aqt fully work with API pagination yet,
causing them to only display the first chunk of results returned by the API.
This number is often 1000 (as in the case of novaclient results), but does vary
somewhat.
.SS Deleting large numbers of resources simultaneously
.sp
Using the "select all" checkbox to delete large numbers of resources via the
API can cause network timeouts (depending on configuration). This is
due to the APIs not supporting bulk\-deletion natively, and consequently Horizon
has to send requests to delete each resource individually behind the scenes.
.SS Backwards Compatibility
.sp
The Folsom Horizon release should be fully\-compatible with both Folsom and
Essex versions of the rest of the OpenStack core projects (Nova, Swift, etc.).
While some features work significantly better with an all\-Folsom stack due
to bugfixes, etc. in underlying services, there should not be any limitations
on what will or will not function. (Note: Quantum was not a core OpenStack
project in Essex, and thus this statement does not apply to network management.)
.sp
In terms of APIs provided for extending Horizon, there are a handful of
backwards\-incompatible changes that were made:
.INDENT 0.0
.IP \(bu 2
The \fBcan_haz\fP and \fBcan_haz_list\fP template filters have been renamed
to \fBhas_permissions\fP and \fBhas_permissions_on_list\fP respectively.
.IP \(bu 2
The dashboard\-specific \fBbase.html\fP templates (e.g. \fBnova/base.html\fP,
\fBsyspanel/base.html\fP, etc.) have been removed in favor of a single
\fBbase.html\fP template.
.IP \(bu 2
In conjunction with the previous item, the dashboard\-specific template blocks
(e.g. \fBnova_main\fP, \fBsyspanel_main\fP, etc.) have been removed in favor of
a single \fBmain\fP template block.
.UNINDENT
.sp
Overall, though, great effort has been made to maintain compatibility for
third\-party developers who may have built on Horizon so far.
.SS Horizon 2013.1 "Grizzly"
.SS Release Overview
.sp
The Grizzly release cycle saw sweeping improvements to overall user experience,
huge stability improvements, lots of new networking, instance management and
image management features, a long\-needed architectural clarification, and big
increases in community engagement! Read on to get the specifics.
.SS Highlights
.SS New Features
.SS Networking
.sp
Quantum added a huge number of new features in Grizzly, including L3 support
(routers), load balancers, network topology infographics, better compatibility
with Nova networking APIs (VNIC ordering when launching an instance; security
groups and floating IP integration) and vastly improved informational displays.
.SS Direct Image Upload To Glance
.sp
It is now possible (though there are numerous deployment/security implications)
to upload an image file directly from a user\(aqs hard disk to Glance through
Horizon. For multi\-GB images it is still strongly recommended that the upload
be done using the Glance CLI. Further improvements to this feature will come in
future releases.
.SS Flavor Extra Specs Support
.sp
In Folsom, Nova added support for "extra specs" on flavors\-\-additional metadata
which custom schedulers could use for appropriately scheduling instances. As of
the Grizzly release, Horizon now supports reading and writing that data on any
flavor.
.SS Migrate Instance
.sp
Administrators now have the ability to migrate an instance off of its current
host via the Admin dashboard\(aqs Instances panel.
.SS User Experience Improvements
.SS "Not Authorized" & Being Logged Out
.sp
A shocking number of the problems first\-time deployers of OpenStack have can be
summarized as "I thought I set everything up, then I tried to log into the
dashboard and I was immediately logged back out." The root cause of this was
that in an effort to be as secure as possible any 401 or 403 response from
any service API was being treated the same as if it was an attempt to access
an unauthorized portion of Horizon, and the user was summarily logged out with
little to no information as to why.
.sp
In Grizzly we have instead chosen to improve this by treating service API
401 and 403 errors as slightly less severe than unauthorized access attempts
to restricted areas of Horizon. The reason for this is threefold:
.INDENT 0.0
.IP 1. 3
For a non\-malicious user these errors are almost 100% the result of
misconfiguration and this makes debugging possible.
.IP 2. 3
A malicious user can make the exact same "unauthorized" requests via the
CLI as they can via the dashboard; no special privileges are granted.
.IP 3. 3
API errors are generated by external systems not under the purview of our
project and while we should attempt to respect and take appropriate action
on those errors, we should not do anything drastic or even potentially
destructive because of them.
.UNINDENT
.sp
Going forward the user will not be logged out, but no information will be
populated on the page and they will be presented with error messages informing
them that they are unauthorized for the data they attempted to access.
.SS Reorganizations
.sp
A couple of long\-standing user confusions were fixed in Grizzly.
.sp
First off, the API Access panel (containing a user\(aqs API endpoints, rc files,
and EC2 credentials) was moved from Settings to the Access & Security section
of the Project dashboard.
.sp
Second, the Default Quotas and Services panels (which were both strictly
informational) were combined into tabs in a single System Info panel to make
it clear that these panels are thematically related, and to create a home for
informational\-only displays like these.
.SS One\-click Floating IP Management
.sp
A common complaint from users was that associating a floating IP to an
instance involved numerous clicks and form selections for something that
the majority of users had no knowledge of and didn\(aqt care about. As such, a
one\-click "simple" floating IP association option has been created. For
deployments which only have a single floating IP pool, this allows users to
ignore explicit floating IP management and just click a button to associate
or disassociate a floating IP with an instance.
.SS Organized Images
.sp
The Images table now has a new feature: predefined filters for seeing your own
images, images that have been shared with you, or public images. This makes
finding the image you\(aqre looking for a great deal easier and more pleasant.
.SS Security Group Rule Editing Improvements
.sp
The security group rule editing experience has always been inherently very
complicated simply given the number of options and the very technical terms
involved. Moreover, the combined table\-plus\-form approach the OpenStack
Dashboard had taken only made the UX more frustrating for an already difficult
area.
.sp
In Grizzly this has all been reworked to be significantly simpler, and to
provide as much contextual help and streamlining as possible.
.SS Icons!
.sp
In an effort to make the dashboard more at\-a\-glance usable, we\(aqve added icons
to most of the common action buttons throughout the dashboard.
.SS "More Actions", More Better
.sp
Lots of feedback came in that the "more actions" dropdown menu (for tables with
numerous actions available on each row) was confusing to new users and/or
difficult to click.
.sp
We\(aqve now improved it so that the button to open the menu is clearly labeled
and the hitbox for clicking it is significantly larger.
.SS Community
.SS Docs, docs, and more docs!
.sp
Large amounts of new documentation was added during the Grizzly cycle, most
notably are sections documenting: all of the available settings for Horizon and
the OpenStack Dashboard; security and deployment considerations; and deeper
guides on customizing the OpenStack Dashboard.
.SS IRC Meeting
.sp
During the Grizzly cycle we started holding a weekly project meeting on IRC.
This has been extremely beneficial for the growth and progress of the project.
Check out the \fI\%OpenStack Meetings wiki page\fP for specifics.
.SS Under The Hood
.SS Legacy Dashboard Names & Code Separation
.sp
Very early in the Grizzly cycle we took the opportunity to do some longstanding
cleanup and refactoring work. The "nova" dashboard was renamed to "project" and
the "syspanel" dashboard was renamed to "admin" to better reflect their
respective purposes.
.sp
Moreover, a better separation was created between code related to the core
Horizon framework code (which is not related to OpenStack specifically) and
the OpenStack Dashboard code. At this point \fIall\fP code related to OpenStack
lives in the OpenStack Dashboard directory, while the Horizon framework is
completely agnostic and is a reusable Django app.
.SS Object Storage Delimiters and Pseudo\-folder Objects
.sp
When Horizon\(aqs object storage interface was first added, Swift\(aqs documentation
recommended adding 0\-byte objects with a special content type to denote
pseudo\-folders within a container. They have since decided that this is not the
recommended practice, and that pseudo\-folders should only be demarcated by
a delimiting character (usually "/") in the object name.
.sp
Horizon has been updated under the hood to use this method, which should bring
it better into line with how most deployments are using their object storage.
.SS Other Improvements and Fixes
.INDENT 0.0
.IP \(bu 2
Support for Keystone\(aqs PKI tokens.
.IP \(bu 2
Flavor editing was made significantly more stable.
.IP \(bu 2
Security groups can be added to a running instance.
.IP \(bu 2
Volume quotas are handled by the appropriate service depending on whether
or not Cinder is enabled.
.IP \(bu 2
Password confirmation boxes are now validated for matching passwords on
the client side for more immediate feedback.
.IP \(bu 2
Numerous fixes to display more and better information for instances and
volumes in their overview pages.
.IP \(bu 2
Improved unicode support for the Object Storage panels.
.IP \(bu 2
Logout now attempts to delete the token(s) associated with the current
session to avoid replay attacks, etc.
.IP \(bu 2
Various fixes for browser compatibility and rendering.
.IP \(bu 2
Many, many other bugfixes and improvements. Check out Launchpad for the full
list of what went on in Grizzly.
.UNINDENT
.SS Known Issues and Limitations
.SS Editing a Flavor Which Results In An API Error Will Delete The Flavor
.sp
Due to the way that Nova handles flavor editing/replacement it is necessary
to delete the old flavor before creating the replacement flavor. As such,
if an API error occurs while creating the replacement it is possible to
lose the old flavor without the new one being created.
.SS Creating Rich Network Topologies
.sp
Due to several Quantum features landing very late in the Grizzly cycle, it
is not possible to create particularly complex networking configurations
through the OpenStack Dashboard. These features will continue to grow
throughout future releases.
.SS Loadbalancer Feature
.sp
The Loadbalancer feature landed in the 11th hour for both Quantum and Horizon
and, though we did our best to test it, may still contain undiscovered bugs. It
is best considered a "beta" or "experimental" feature for the Grizzly release.
.SS Quantum Brocade Plugin Not Compatible
.sp
The Brocade plugin for Quantum does not support key features of the floating
IP addresses API which are considered central to Horizon\(aqs functionality. As
such, it is not compatible with the Grizzly release\(aqs Quantum integration.
.SS Deleting large numbers of resources simultaneously
.sp
Using the "select all" checkbox to delete large numbers of resources via the
API can cause network timeouts (depending on configuration). This is
due to the APIs not supporting bulk\-deletion natively, and consequently Horizon
has to send requests to delete each resource individually behind the scenes.
.SS Backwards Compatibility
.sp
The Grizzly Horizon release should be fully compatible with both Grizzly and
Folsom versions of the rest of the OpenStack core projects (Nova, Swift, etc.).
While some features work significantly better with an all\-Grizzly stack due
to bugfixes, etc. in underlying services, there should not be limitations
on what will or will not function.
.sp
Overall, great effort has been made to maintain compatibility for
third\-party developers who may have built on Horizon so far.
.SS Horizon 2013.2 "Havana"
.SS Release Overview
.sp
The Havana release cycle brings support for \fIthree\fP new projects, plus
significant new features for several existing projects. On top of that, many
aspects of user experience have been improved for both end users and
administrators. The community continues to grow and expand. The Havana release
is solidly the best release of the OpenStack Dashboard project yet!
.SS Highlights
.SS New Features
.SS Heat
.sp
The OpenStack Orchestration project (Heat) debuted in Havana, and Horizon
delivers full support for managing your Heat stacks. Highlights include
support for dynamic form generation from supported Heat template formats,
stack topology visualizations, and full stack resource inspection.
.SS Ceilometer
.sp
Also debuting in Havana is the OpenStack Metering project (Ceilometer). Initial
support for Ceilometer is included in Horizon so that it is possible for an
administrator to query the usage of the cloud through the OpenStack Dashboard
and better understand how the system is functioning and being utilized.
.SS Domains, Groups, and More: Keystone v3 API Support
.sp
With the OpenStack Identity Service (Keystone) v3 API fully fledged in the
Havana release, Horizon has added full support for all the new features such
as Domains and Groups, Role management and assignment to Domains and Groups,
Domain\-based authentication, and Domain context switching.
.SS Trove Databases
.sp
The OpenStack Database as a Service project (Trove) graduated from incubation
in the Havana cycle, and thanks to their industriousness they delivered a
set of panels for the OpenStack dashboard to allow for provisioning and managing
your Trove databases and backups. Disclaimer: Given that Trove\(aqs first official
release as an integrated project will not be until Icehouse this feature should
still be considered experimental and may be subject to change.
.SS Nova Features
.sp
The number of OpenStack Compute (Nova) features that are supported in Horizon
continues to grow. New features in the Havana release include:
.INDENT 0.0
.IP \(bu 2
Editable default quotas.
.IP \(bu 2
The ability for an administrator to reset the password of a server/instance.
.IP \(bu 2
Availability zone support.
.IP \(bu 2
Improved region support.
.IP \(bu 2
Instance resizing.
.IP \(bu 2
Improved boot\-from\-volume support.
.IP \(bu 2
Per\-project flavor support.
.UNINDENT
.sp
All of these provide a richer set of options for controlling where, when and how
instances are launched, and improving how they\(aqre managed once they\(aqre up and
running.
.SS Neutron Features
.sp
A number of important new OpenStack Networking (Neutron) features are showcased
in the Havana release, most notably:
.INDENT 0.0
.IP \(bu 2
VPN as a Service.
.IP \(bu 2
Firewall as a Service.
.IP \(bu 2
Editable and interactive network topology visualizations.
.IP \(bu 2
Full security group and quota parity between Neutron and Nova network.
.UNINDENT
.sp
These features allow for tremendous flexibility when constructing
software\-defined networks for your cloud using Neutron.
.SS User Experience Improvements
.SS Self\-Service Password Change
.sp
Empowered by changes to the Keystone API, users can now change their own
passwords without the need to involve an administrator. This is more secure and
takes the hassle out of things for everyone.
.SS Better Admin Information Architecture
.sp
Several sections of the Admin dashboard have been rearranged to more logically
group information together. Additionally, new sources of information have been
added to allow Admins to better understand the state of the hosts in the cloud
and their relationship to host aggregates, availability zones, etc.
.SS Improved Messaging To Users On Logout
.sp
Several new indicators have been added to inform users why they\(aqve been logged
out when they land on the login screen unexpectedly. These indicators make it
clear whether the user\(aqs session has expired, they timed out due to inactivity,
or they are not authorized for the section of the dashboard they attempted to
access.
.SS Security Group Rule Templates
.sp
Since there are many very common security group rules which users tediously
re\-add each time (rules for SSH and ping, for example) the Horizon team has
added pre\-configured templates for common rules which a user can select and
add to their security group with two clicks. These rules are configurable
via the \fBSECURITY_GROUP_RULES\fP setting.
.SS Community
.SS Translation Team
.sp
The OpenStack Translations team came fully into its own during the Havana cycle
and the quality of the translations in Horizon are the best yet by far.
Congratulations to that team for their success in building the community that
started primarily within the OpenStack Dashboard project.
.SS User Experience Group
.sp
A fledgling OpenStack User Experience Group formed during the Havana cycle with
the mission of improving UX throughout OpenStack. They have quickly made
themselves indispensable to the process of designing and improving features in
the OpenStack Dashboard. Expect significant future improvement in User
Experience now that there are dedicated people actively collaborating in the
open to raise the bar.
.SS Under The Hood
.SS Less Complicated LESS Compilation: No More NodeJS
.sp
Due to outcry from various parties, and made possible by improvements in the
Python community\(aqs support for LESS, Horizon has removed all traces of NodeJS
from the project. We now use the \fBlesscpy\fP module to compile our LESS into
the final stylesheets. This should not affect most users in any way, but it
should make life easier for downstream distributions and the like.
.SS Role\-Based Access Controls
.sp
Horizon has begun the transition to using the other OpenStack projects\(aq
\fBpolicy.json\fP files to enforce access controls in the dashboard if the files
are provided. This means access controls are more configurable and can be kept
in sync between the originating project and Horizon. Currently this is only
supported for Keystone and parts of Nova\(aqs policy files. Full support will
come in the next release. You will need to set the \fBPOLICY_FILES_PATH\fP and
\fBPOLICY_FILES\fP settings in order to enable this feature.
.SS Other Improvements and Fixes
.INDENT 0.0
.IP \(bu 2
Swift container and object metadata are now supported.
.IP \(bu 2
New visualizations for utilization and quotas.
.IP \(bu 2
The Cisco N1K Router plugin\(aqs additional features are available through a
special additional dashboard when enabled and supported in Neutron.
.IP \(bu 2
Support for self\-signed or other specified SSL certificate checking.
.IP \(bu 2
Glance image types are now configurable.
.IP \(bu 2
Sorting has been improved in many places through the dashboard.
.IP \(bu 2
API call efficiency optimizations.
.IP \(bu 2
Required fields in forms are now better indicated.
.IP \(bu 2
Session timeout can now be enabled to log out the user after a period of
inactivity as a security feature.
.IP \(bu 2
Significant PEP8 and code quality compliance improvements.
.IP \(bu 2
Hundreds of bugfixes and minor user experience improvements.
.UNINDENT
.SS Upgrade Information
.SS Allowed Hosts
.sp
For production deployments of Horizon you must add the \fBALLOWED_HOSTS\fP
setting to your \fBlocal_settings.py\fP file. This setting
was added in Django 1.5 and is an important security feature. For more
information on it please consult the \fBlocal_settings.py.example\fP file
or Django\(aqs documentation.
.SS Enabling Keystone and Neutron Features
.sp
If you have existing configurations for the \fBOPENSTACK_KEYSTONE_BACKEND\fP
or \fBOPENSTACK_NEUTRON_NETWORK\fP settings, you will want to consult the
\fBlocal_settings.example.py\fP file for information on the new options that
have been added. Existing configurations will continue to work, but may not
have the correct keys to enable some of the new features in Havana.
.SS Known Issues and Limitations
.SS Session Creation and Health Checks
.sp
If you use a health monitoring service that pings the home page combined with
a database\-backed session backend you may experience excessive session creation.
This issue is slated to be fixed soon, but in the interim the recommended
solution is to write a periodic job that deletes expired sessions from your
session store on a regular basis.
.SS Deleting large numbers of resources simultaneously
.sp
Using the "select all" checkbox to delete large numbers of resources at once
can cause network timeouts (depending on configuration). This is due to the
underlying APIs not supporting bulk\-deletion natively, and consequently Horizon
has to send requests to delete each resource individually behind the scenes.
.SS Conflicting Security Group Names With Neutron
.sp
Whereas Nova Network uses only the name of a security group when specifying
security groups at instance launch time, Neutron can accept either a name or
a UUID. In order to support both, Horizon passes in the name of the selected
security groups. However, due to some data\-isolation issues in Neutron there is
an issue that can arise if an admin user tries to specify a security group with
the same name as another security group in a different project which they also
have access to. Neutron will find multiple matches for the security group
name and will fail to launch the instance. The current workaround is to treat
security group names as unique for admin users.
.SS Backwards Compatibility
.sp
The Havana Horizon release should be fully compatible with both Havana and
Grizzly versions of the rest of the OpenStack integrated projects (Nova, Swift,
etc.). New features in other OpenStack projects which did not exist in Grizzly
will obviously only work in Horizon if the rest of the stack supports them as
well.
.sp
Overall, great effort has been made to maintain compatibility for
third\-party developers who have built on Horizon so far.
.SS Horizon 2014.1 "Icehouse"
.SS Release Overview
.sp
The Icehouse release cycle brings several improvements to Horizon\(aqs
user experience, improved extensibility, and support for many
additional features in existing projects. The community continues to
grow. Read more for the specifics.
.SS Highlights
.SS New Features
.SS Nova
.sp
The number of OpenStack Compute (Nova) features that are supported in Icehouse
grew. New features in the Icehouse release include:
.INDENT 0.0
.IP \(bu 2
Live Migration Support
.IP \(bu 2
HyperV Console Support
.IP \(bu 2
Disk config extension support
.IP \(bu 2
Improved support for managing host aggregates and availability zones
.IP \(bu 2
Support for easily setting flavor extra specs
.UNINDENT
.SS Cinder
.sp
In an ongoing effort to implement Role Based Access Support throughout Horizon,
access controls were added in the OpenStack Volume (Cinder) related panels.
Utilization of the Cinder v2 API is now a supported option in the Icehouse
release. The ability to extend volumes is now available as well.
.SS Neutron
.sp
Display of Router Rules for routers where they are defined is now supported in
Horizon.
.SS Swift
.sp
With Icehouse, the ability for users to create containers and mark them as
public is now available. Links are added to download these public containers.
Users can now explicitly create pseudo directories rather than being required to
create them as part of the container creation process.
.SS Heat
.sp
In Icehouse, Horizon delivers support for updating existing Heat stacks.
Now stacks that have already been deployed can be adjusted and redeployed. The
updated template is also validated when updated. Additionally, support for
adding environment files was included.
.SS Ceilometer
.sp
Horizon has added support for administrators to query Ceilometer and
view a daily usage report per project across services through the
OpenStack Dashboard to better understand how system resources are being
consumed by individual projects.
.SS Trove Databases
.sp
The OpenStack Database as a Service project (Trove) is part of the
integrated release in the Icehouse cycle.  Improvements to the client
connections and overall stability were added in the Icehouse cycle.
.SS User Experience Improvements
.SS Extensible Enhancements
.sp
The primary dashboard and panel navigation has been updated from the tab
navigation to an accordion implementation. Dashboards and Panel Groups are now
expandable and collapsible in the page navigation. This change allows for the
addition of more dashboards as well as accommodates the increasing number of
panels in dashboards.
.SS Wizard
.sp
Horizon now provides a Wizard control to complete multi\-step interdependent
tasks. This is now utilized in the create network action.
.SS Inline Table Editing
.sp
Tables can now be written to support editing fields in the table to reduce the
need for opening separate forms. The first sample of this is in the Admin
dashboard, Projects panel.
.SS Self\-Service Password Change
.sp
Leveraging enhancements to Identity API v3 (Keystone), users can now change
their own passwords without the need to involve an administrator. This
functionality was previously only available with Identity API v2.0.
.SS Server Side Table Filtering
.sp
Tables can now easily be wired to filter results from underlying API calls
based on criteria selected by the user rather than just perform an on page
search. The first example of this is in the Admin dashboard, Instances panel.
.SS Under The Hood
.SS JavaScript
.sp
In a move to provide a better user experience, Horizon has adopted AngularJS as
the primary JavaScript framework. JavaScript is now a browser requirement to
run the Horizon interface. More to come in Juno.
.SS Plugin Architecture
.sp
Horizon now boasts dynamic loading/disabling of dashboards, panel groups and
panels. By merely adding a file in the \fBenabled\fP directory, the selection of
items loaded into Horizon can be altered. Editing the Django settings file is
no longer required.
.sp
For more information see \fIpluggable\-settings\-label\fP
.SS Integration Test Framework
.sp
Horizon now supports running integration tests against a working devstack system. There is a limited test suite, but this a great step forward and allows full integration testing.
.SS Django 1.6 Support
.sp
Django versions 1.4 \- 1.6 are now supported by Horizon.
.SS Upgrade Information
.sp
Beginning with the Icehouse cycle, there is now a requirement for JavaScript
support in browsers used with OpenStack Dashboard.
.SS Page Layout Changes
.sp
The overall structure of the page layout in Horizon has been altered. Existing
templates by 3rd parties to override page templates may require some rework.
.SS Default Hypervisor Settings Changes
.sp
The default for \fBcan_set_password\fP is now \fBFalse\fP\&. This means that unless
the setting is explicitly set to \fBTrue\fP, the option to set an
\(aqAdmin password\(aq for an instance will not be shown in the Launch Instance
workflow. Not all hypervisors support this feature which created confusion with
users.
.sp
The default for \fBcan_set_mountpoint\fP is now \fBFalse\fP, and should be set to
\fBTrue\fP in the settings in order to add the option to set the mount point for
volumes in the dashboard. At this point only the Xen hypervisor supports this
feature.
.sp
To change the behavior around hypervisor management in Horizon you must add the
\fBOPENSTACK_HYPERVISOR_FEATURES\fP setting to your \fBsettings.py\fP or
\fBlocal_settings.py\fP file.
.sp
For more information see \fIhypervisor\-settings\-label\fP
.SS Known Issues and Limitations
.SS Multi\-Domain Cross Service Support
.sp
While Horizon supports managing Identity v3 entities and authenticating in a
multi\-domain Keystone configuration, there is a v3, v2.0 token compatibility
issue when trying to manage resources for users outside the \fBdefault\fP
domain. For this reason, v2.0 has been restored as the default API version
for OpenStack Identity (Keystone). For a single domain environment, Keystone
v3 API can still be used via the \fBOPENSTACK_API_VERSION\fP setting.
.SS Horizon 2014.2 "Juno"
.SS Release Overview
.sp
The Juno release cycle brings a significant update to the user experience;
numerous stability improvements; support for Sahara; and significant
enhancements in feature support for networking, volumes, databases and images.
The community continues to grow and gain speed. Read on for more details.
.SS Highlights
.SS New Features
.SS Sahara
.sp
The OpenStack Data Processing project (Sahara) was formally included into the
integrated release in Juno and Horizon includes broad support for managing your
data processing. You can specify and build clusters to utilize several data
types with user specified jobs while tracking the progress of those jobs.
.SS Neutron
.sp
Neutron added several new features in Juno, including:
.INDENT 0.0
.IP \(bu 2
DVR (Distributed Virtual Routing)
.IP \(bu 2
L3 HA support
.IP \(bu 2
IPv6 subnet modes
.UNINDENT
.sp
Horizon provides support for these new features with the Juno release. These
features provide much greater flexibility in specifying software defined
networks.
.sp
An existing feature in Neutron that Horizon now supports is the MAC learning
extension.
.SS Glance
.sp
In Juno, Glance introduced the ability to manage a catalog of metadata
definitions where users can register the metadata definitions to be used on
various resource types including images, volumes, aggregates, and flavors.
Support for viewing and editing the assignment of these metadata tags is
included in Horizon.
.SS Cinder
.sp
In a continued effort to provide more complete API support, several
additional features of the Cinder API are now supported in Horizon in the
Juno release.
.sp
Some of these features include:
* Creating and restoring volume backups
* Enabling resetting the state of a snapshot
* Enabling resetting the state of a volume
* Supporting upload\-to\-image
* Volume retype
* QoS (quality of service) support.
.SS Trove
.sp
Trove supports using multiple types of datastores, e.g., mysql, redis, mongodb.
Users can now select from the list of datastores supported by the cloud operator
when creating their database instances.
.sp
Another addition is support for utilizing and restoring from incremental
database backups.
.sp
To improve support for Neutron based clouds, when creating a database instance,
the user can now specify the NIC for the database instance on creation allowing
direct access to the instance by the user.
.SS Nova
.sp
The new Nova instance actions view provides a list of all actions taken on
all instances in the current project allowing users to view resulting errors or
actions taken by other users on those instances.
.sp
Administrators now have the ability to evacuate hosts off hypervisors which can
aid in system maintenance by providing a mechanism to migrate all instances to
other hosts.
.SS Improved Plugin Support
.sp
The plugin system in Horizon continued to improve in the Juno release.
Some of those improvements:
.INDENT 0.0
.IP \(bu 2
Support for adding plugin specific AngularJS modules
.IP \(bu 2
Support for adding static files, e.g., CSS, JS, images
.IP \(bu 2
Ability to add exceptions
.IP \(bu 2
Fixing ordering issues
.IP \(bu 2
Numerous other bug fixes
.UNINDENT
.SS Enhanced RBAC support
.sp
In an ongoing effort to support richer role based access control (RBAC) in
Horizon, the views for several more services were enhanced with RBAC checks to
determine user access to actions.  The newly supported services are compute,
network and orchestration. These changes allow operators to implement finer
grained access control than just "member" and "admin".
.sp
The identity panels (domains, projects, users, roles, groups) have also been
converted to support RBAC at the view level. The identity panels have been
moved from the admin dashboard into their own \(aqIdentity\(aq dashboard and
accessibility is determined by policies alone. This is the first step toward
consolidating the near duplicate content of the project and admin dashboards
into single views supporting a wide range of roles.
.SS UX Changes
.sp
In Juno, Horizon transitioned to utilizing Bootstrap v3. Horizon had been
pinned to an older version of Bootstrap for several releases. This change now
allows Horizon to pick up numerous bug fixes and overall improvements in the
Bootstrap framework. The look and feel remains mainly consistent with the
Icehouse release.
.SS Under the Hood
.SS Improved Translatability
.sp
In an effort to improve the translations for Horizon, updates to remove
concatenations and better handle tense were made.
.SS JavaScript Libraries Extracted
.sp
As part of the Horizon team\(aqs ongoing efforts to split the repository into more
logical pieces, all the 3rd party JavaScript libraries that Horizon depends on
have been removed from the Horizon code base and python xstatic packages have
been utilized instead. The xstatic format allows for easy consumption by the
Django framework Horizon is built on. Now JavaScript libraries are utilized
like any other python dependency in Horizon.
.SS Conversion from LESS to SCSS
.sp
The supported stylesheets in Horizon have been converted to utilize SCSS rather
than LESS. The change was necessary due to a prevalent lack of support for LESS
compilers in python. This change also allowed us to upgrade to Bootstrap 3, as
parts of the Bootstrap 3 LESS stylesheets were not supported by existing python
based LESS compilers.
.SS Known Issues and Limitations
.SS Rendering issues in extensions
.sp
The conversion to utilizing Bootstrap v3 can cause content extensions written
on top of Horizon to have rendering issues. Most of these are fixed by a simple
CSS class name substitutions. These issues are primarily seen with buttons and
panel content widths.
.SS Online Compression
.sp
With the move to SCSS, there may be issues with utilizing online compression in
non\-DEBUG mode in Horizon. Offline compression continues to work as in previous
releases.
.sp
\fI\%https://bugs.launchpad.net/horizon/+bug/1379761\fP
.SS Neutron L3 HA
.sp
The HA property is updateable in the UI, however, Neutron API does not allow the
update operation because toggling HA support does not work.
.sp
\fI\%https://bugs.launchpad.net/horizon/+bug/1379761\fP
.SH INFORMATION
.SS Frequently Asked Questions
.sp
What is the relationship between \fBDashboards\fP, \fBPanels\fP, and navigation?
.INDENT 0.0
.INDENT 3.5
The navigational structure is strongly encouraged to flow from
\fBDashboard\fP objects as top\-level navigation items to \fBPanel\fP objects as
sub\-navigation items as in the current implementation. Template tags
are provided to automatically generate this structure.
.sp
That said, you are not required to use the provided tools and can write
templates and URLconfs by hand to create any desired structure.
.UNINDENT
.UNINDENT
.sp
Does a panel have to be an app in \fBINSTALLED_APPS\fP?
.INDENT 0.0
.INDENT 3.5
A panel can live in any Python module. It can be a standalone which ties
into an existing dashboard, or it can be contained alongside others within
a larger dashboard "app". There is no strict enforcement here. Python
is "a language for consenting adults." A module containing a Panel does
not need to be added to \fBINSTALLED_APPS\fP, but this is a common and
convenient way to load a standalone panel.
.UNINDENT
.UNINDENT
.sp
Could I hook an external service into a panel using, for example, an iFrame?
.INDENT 0.0
.INDENT 3.5
Panels are just entry\-points to hook views into the larger dashboard
navigational structure and enforce common attributes like RBAC. The
view and corresponding templates can contain anything you would like,
including iFrames.
.UNINDENT
.UNINDENT
.sp
What does this mean for visual design?
.INDENT 0.0
.INDENT 3.5
The ability to add an arbitrary number of top\-level navigational items
(\fBDashboard\fP objects) poses a new design challenge. Horizon\(aqs lead
designer has taken on the challenge of providing a reference design
for Horizon which supports this possibility.
.UNINDENT
.UNINDENT
.sp
What browsers are supported?
.INDENT 0.0
.INDENT 3.5
Horizon is primarily tested and supported on the latest version of Firefox,
the latest version of Chrome, and IE9+. Issues related to Safari and Opera
will also be considered. The list of supported browsers and versions is
informally documented on the \fI\%Browser Support wiki page\fP\&.
.UNINDENT
.UNINDENT
.SS Glossary
.sp
Horizon
.INDENT 0.0
.INDENT 3.5
The OpenStack dashboard project. Also the name of the top\-level
Python object which handles registration for the app.
.UNINDENT
.UNINDENT
.sp
Dashboard
.INDENT 0.0
.INDENT 3.5
A Python class representing a top\-level navigation item (e.g. "project")
which provides a consistent API for Horizon\-compatible applications.
.UNINDENT
.UNINDENT
.sp
Panel
.INDENT 0.0
.INDENT 3.5
A Python class representing a sub\-navigation item (e.g. "instances")
which contains all the necessary logic (views, forms, tests, etc.) for
that interface.
.UNINDENT
.UNINDENT
.sp
Project
.INDENT 0.0
.INDENT 3.5
Used in user\-facing text in place of the term "Tenant" which is Keystone\(aqs
word.
.UNINDENT
.UNINDENT
.INDENT 0.0
.IP \(bu 2
\fIgenindex\fP
.IP \(bu 2
\fImodindex\fP
.UNINDENT
.SH AUTHOR
OpenStack
.SH COPYRIGHT
2012, OpenStack Foundation
.\" Generated by docutils manpage writer.
.
